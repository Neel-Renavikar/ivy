Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/round","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sinh","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/matmul","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/round","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sinh","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/round","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sinh","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/matmul","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/round","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sinh","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/matmul","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/round","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sinh","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/matmul","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/round","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sinh","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/matmul","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/round.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sinh.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/matmul.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/round.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sinh.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/round.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sinh.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/matmul.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/round.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/matmul.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/round.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sinh.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/matmul.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/round.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sinh.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/matmul.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[807,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[355,0,0,"-"],creation_functions:[356,0,0,"-"],data_type_functions:[362,0,0,"-"],data_types:[366,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[357,2,1,""],ones:[358,2,1,""],ones_like:[359,2,1,""],tril:[360,2,1,""],zeros:[361,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[362,1,1,""],finfo:[364,2,1,""],iinfo:[365,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[362,3,1,""],bits:[362,3,1,""],eps:[362,3,1,""],max:[362,3,1,""],min:[362,3,1,""],smallest_normal:[362,3,1,""]},"ivy.functional.backends.numpy.core":{device:[410,0,0,"-"],general:[412,0,0,"-"],gradients:[444,0,0,"-"],image:[449,0,0,"-"],linear_algebra:[453,0,0,"-"],logic:[457,0,0,"-"],math:[458,0,0,"-"],random:[460,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[411,1,1,""],clear_mem_on_dev:[410,2,1,""],dev:[410,2,1,""],dev_from_str:[410,2,1,""],dev_to_str:[410,2,1,""],gpu_is_available:[410,2,1,""],num_gpus:[410,2,1,""],to_dev:[410,2,1,""],tpu_is_available:[410,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[411,3,1,""],start:[411,3,1,""],stop:[411,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[412,2,1,""],arange:[413,2,1,""],argmin:[414,2,1,""],array:[415,2,1,""],asarray:[412,2,1,""],astype:[412,2,1,""],cast:[416,2,1,""],clip:[412,2,1,""],compile:[417,2,1,""],concatenate:[418,2,1,""],constant_pad:[412,2,1,""],container_types:[412,2,1,""],copy_array:[412,2,1,""],cumprod:[419,2,1,""],current_framework_str:[412,2,1,""],dtype:[420,2,1,""],dtype_bits:[421,2,1,""],dtype_from_str:[422,2,1,""],dtype_to_str:[423,2,1,""],floor:[412,2,1,""],floormod:[412,2,1,""],full:[424,2,1,""],gather:[425,2,1,""],gather_nd:[426,2,1,""],get_num_dims:[412,2,1,""],identity:[427,2,1,""],indices_where:[428,2,1,""],inplace_arrays_supported:[412,2,1,""],inplace_decrement:[429,2,1,""],inplace_increment:[430,2,1,""],inplace_update:[431,2,1,""],inplace_variables_supported:[412,2,1,""],is_array:[432,2,1,""],linear_resample:[433,2,1,""],linspace:[434,2,1,""],logspace:[435,2,1,""],meshgrid:[412,2,1,""],multiprocessing:[412,2,1,""],one_hot:[436,2,1,""],scatter_flat:[437,2,1,""],scatter_nd:[438,2,1,""],shape:[412,2,1,""],split:[439,2,1,""],squeeze:[440,2,1,""],to_list:[412,2,1,""],to_numpy:[412,2,1,""],to_scalar:[412,2,1,""],transpose:[441,2,1,""],unstack:[442,2,1,""],where:[412,2,1,""],zero_pad:[412,2,1,""],zeros_like:[443,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[445,2,1,""],is_variable:[446,2,1,""],stop_gradient:[447,2,1,""],variable:[448,2,1,""],variable_data:[444,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[450,2,1,""],gradient_image:[451,2,1,""],stack_images:[452,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[454,2,1,""],qr:[455,2,1,""],vector_to_skew_symmetric_matrix:[456,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[459,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[461,2,1,""],randint:[460,2,1,""],random_normal:[460,2,1,""],random_uniform:[460,2,1,""],seed:[460,2,1,""],shuffle:[460,2,1,""]},"ivy.functional.ivy":{array_api:[808,0,0,"-"],core:[861,0,0,"-"],nn:[1154,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[809,0,0,"-"],creation_functions:[810,0,0,"-"],data_type_functions:[816,0,0,"-"],data_types:[819,0,0,"-"],elementwise_functions:[820,0,0,"-"],function_and_method_signatures:[842,0,0,"-"],linear_algebra:[843,0,0,"-"],manipulation_functions:[849,0,0,"-"],searching_functions:[851,0,0,"-"],set_functions:[853,0,0,"-"],sorting_functions:[854,0,0,"-"],statistical_functions:[856,0,0,"-"],utility_functions:[858,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[809,4,1,""],nan:[809,4,1,""],pi:[809,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[811,2,1,""],ones:[812,2,1,""],ones_like:[813,2,1,""],tril:[814,2,1,""],zeros:[815,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[817,2,1,""],iinfo:[818,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[821,2,1,""],asinh:[822,2,1,""],bitwise_and:[823,2,1,""],ceil:[824,2,1,""],cos:[825,2,1,""],cosh:[826,2,1,""],isfinite:[827,2,1,""],isnan:[828,2,1,""],less:[829,2,1,""],less_equal:[830,2,1,""],log10:[831,2,1,""],log1p:[832,2,1,""],log2:[833,2,1,""],logical_not:[834,2,1,""],logical_or:[835,2,1,""],negative:[836,2,1,""],round:[837,2,1,""],sin:[838,2,1,""],sinh:[839,2,1,""],sqrt:[840,2,1,""],tanh:[841,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[844,2,1,""],matmul:[845,2,1,""],slodget:[846,2,1,""],svd:[847,2,1,""],vector_norm:[848,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[850,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[852,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[855,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[857,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[859,2,1,""],any:[860,2,1,""]},"ivy.functional.ivy.core":{compilation:[862,0,0,"-"],device:[864,0,0,"-"],dtype:[914,0,0,"-"],general:[938,0,0,"-"],gradients:[1032,0,0,"-"],image:[1048,0,0,"-"],linalg:[1055,0,0,"-"],logic:[1062,0,0,"-"],math:[1065,0,0,"-"],meta:[1078,0,0,"-"],multi_node:[1082,0,0,"-"],nest:[1126,0,0,"-"],random:[1138,0,0,"-"],reductions:[1145,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[863,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[864,1,1,""],DevClonedItem:[866,1,1,""],DevClonedIter:[867,1,1,""],DevClonedNest:[868,1,1,""],DevDistItem:[869,1,1,""],DevDistIter:[870,1,1,""],DevDistNest:[871,1,1,""],DevManager:[864,1,1,""],DevMapper:[873,1,1,""],DevMapperMultiProc:[874,1,1,""],MultiDev:[864,1,1,""],MultiDevItem:[876,1,1,""],MultiDevIter:[877,1,1,""],MultiDevNest:[878,1,1,""],Profiler:[879,1,1,""],clear_mem_on_dev:[880,2,1,""],default_device:[881,2,1,""],dev:[882,2,1,""],dev_clone:[883,2,1,""],dev_clone_array:[884,2,1,""],dev_clone_iter:[885,2,1,""],dev_clone_nest:[886,2,1,""],dev_dist:[887,2,1,""],dev_dist_array:[888,2,1,""],dev_dist_iter:[889,2,1,""],dev_dist_nest:[890,2,1,""],dev_from_str:[891,2,1,""],dev_to_str:[892,2,1,""],dev_unify:[893,2,1,""],dev_unify_array:[894,2,1,""],dev_unify_iter:[895,2,1,""],dev_unify_nest:[896,2,1,""],dev_util:[897,2,1,""],get_all_arrays_on_dev:[898,2,1,""],gpu_is_available:[899,2,1,""],num_arrays_on_dev:[900,2,1,""],num_cpu_cores:[901,2,1,""],num_gpus:[902,2,1,""],percent_used_mem_on_dev:[903,2,1,""],print_all_arrays_on_dev:[904,2,1,""],set_default_device:[905,2,1,""],set_split_factor:[906,2,1,""],split_factor:[907,2,1,""],split_func_call:[908,2,1,""],to_dev:[909,2,1,""],total_mem_on_dev:[910,2,1,""],tpu_is_available:[911,2,1,""],unset_default_device:[912,2,1,""],used_mem_on_dev:[913,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[864,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[864,3,1,""],da_tune_step:[864,3,1,""],dim_size:[864,3,1,""],ds_tune_step:[864,3,1,""],map:[864,3,1,""],repeated_config_check:[864,3,1,""],tune_step:[864,3,1,""],tuned:[864,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[873,3,1,""],map:[873,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[874,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[864,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[876,3,1,""],items:[876,3,1,""],keys:[876,3,1,""],shape:[876,3,1,""],values:[876,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[877,3,1,""],at_dev:[877,3,1,""],at_devs:[877,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[878,3,1,""],at_dev:[878,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[879,3,1,""],start:[879,3,1,""],stop:[879,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[914,1,1,""],DefaultFloatDtype:[914,1,1,""],DefaultIntDtype:[914,1,1,""],astype:[914,2,1,""],cast:[918,2,1,""],closest_valid_dtype:[919,2,1,""],convert_dtype:[920,2,1,""],default_dtype:[921,2,1,""],default_float_dtype:[922,2,1,""],default_int_dtype:[923,2,1,""],dtype:[924,2,1,""],dtype_bits:[925,2,1,""],dtype_from_str:[926,2,1,""],dtype_to_str:[927,2,1,""],invalid_dtype:[928,2,1,""],is_float_dtype:[929,2,1,""],is_int_dtype:[930,2,1,""],set_default_dtype:[931,2,1,""],set_default_float_dtype:[932,2,1,""],set_default_int_dtype:[933,2,1,""],unset_default_dtype:[934,2,1,""],unset_default_float_dtype:[935,2,1,""],unset_default_int_dtype:[936,2,1,""],valid_dtype:[937,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[914,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[914,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[914,3,1,""]},"ivy.functional.ivy.core.general":{"default":[961,2,1,""],abs:[939,2,1,""],all_equal:[940,2,1,""],arange:[941,2,1,""],arg_names:[942,2,1,""],argmin:[943,2,1,""],array:[944,2,1,""],array_equal:[945,2,1,""],arrays_equal:[946,2,1,""],asarray:[938,2,1,""],assert_supports_inplace:[947,2,1,""],broadcast_to:[948,2,1,""],cache_fn:[949,2,1,""],clip:[950,2,1,""],clip_matrix_norm:[951,2,1,""],clip_vector_norm:[952,2,1,""],concatenate:[953,2,1,""],constant_pad:[954,2,1,""],container_types:[955,2,1,""],copy_array:[956,2,1,""],cross:[957,2,1,""],cumprod:[958,2,1,""],cumsum:[959,2,1,""],current_framework_str:[960,2,1,""],einops_rearrange:[962,2,1,""],einops_reduce:[963,2,1,""],einops_repeat:[964,2,1,""],equal:[965,2,1,""],exists:[966,2,1,""],expand_dims:[967,2,1,""],floor:[968,2,1,""],floormod:[969,2,1,""],fourier_encode:[970,2,1,""],full:[971,2,1,""],gather:[972,2,1,""],gather_nd:[973,2,1,""],get_all_arrays_in_memory:[974,2,1,""],get_min_base:[975,2,1,""],get_min_denominator:[976,2,1,""],get_num_dims:[977,2,1,""],get_referrers_recursive:[978,2,1,""],has_nans:[979,2,1,""],identity:[980,2,1,""],indices_where:[981,2,1,""],inplace_arrays_supported:[982,2,1,""],inplace_decrement:[983,2,1,""],inplace_increment:[984,2,1,""],inplace_update:[985,2,1,""],inplace_variables_supported:[986,2,1,""],is_array:[987,2,1,""],isinf:[988,2,1,""],linear_resample:[989,2,1,""],linspace:[990,2,1,""],logspace:[991,2,1,""],match_kwargs:[992,2,1,""],matmul:[993,2,1,""],maximum:[994,2,1,""],meshgrid:[995,2,1,""],minimum:[996,2,1,""],multiprocessing:[997,2,1,""],num_arrays_in_memory:[998,2,1,""],one_hot:[999,2,1,""],ones:[1000,2,1,""],print_all_arrays_in_memory:[1001,2,1,""],queue_timeout:[1002,2,1,""],repeat:[1003,2,1,""],reshape:[1004,2,1,""],scatter_flat:[1005,2,1,""],scatter_nd:[1006,2,1,""],set_min_base:[1007,2,1,""],set_min_denominator:[1008,2,1,""],set_queue_timeout:[1009,2,1,""],set_tmp_dir:[1010,2,1,""],shape:[1011,2,1,""],shape_to_tuple:[1012,2,1,""],split:[1013,2,1,""],squeeze:[1014,2,1,""],stable_divide:[1015,2,1,""],stable_pow:[1016,2,1,""],stack:[1017,2,1,""],supports_inplace:[1018,2,1,""],swapaxes:[1019,2,1,""],tile:[1020,2,1,""],tmp_dir:[1021,2,1,""],to_list:[1022,2,1,""],to_numpy:[1023,2,1,""],to_scalar:[1024,2,1,""],transpose:[1025,2,1,""],try_else_none:[1026,2,1,""],unstack:[1027,2,1,""],value_is_nan:[1028,2,1,""],where:[1029,2,1,""],zero_pad:[1030,2,1,""],zeros_like:[1031,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1032,1,1,""],adam_step:[1034,2,1,""],adam_update:[1035,2,1,""],execute_with_gradients:[1036,2,1,""],gradient_descent_update:[1037,2,1,""],is_variable:[1038,2,1,""],lamb_update:[1039,2,1,""],lars_update:[1040,2,1,""],optimizer_update:[1041,2,1,""],set_with_grads:[1042,2,1,""],stop_gradient:[1043,2,1,""],unset_with_grads:[1044,2,1,""],variable:[1045,2,1,""],variable_data:[1046,2,1,""],with_grads:[1047,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1032,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1049,2,1,""],float_img_to_uint8_img:[1050,2,1,""],gradient_image:[1051,2,1,""],random_crop:[1052,2,1,""],stack_images:[1053,2,1,""],uint8_img_to_float_img:[1054,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1056,2,1,""],inv:[1057,2,1,""],matrix_norm:[1058,2,1,""],pinv:[1059,2,1,""],qr:[1060,2,1,""],vector_to_skew_symmetric_matrix:[1061,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1063,2,1,""],logical_or:[1064,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1066,2,1,""],asin:[1067,2,1,""],atan2:[1069,2,1,""],atan:[1068,2,1,""],atanh:[1070,2,1,""],cosh:[1071,2,1,""],divide:[1072,2,1,""],erf:[1073,2,1,""],exp:[1074,2,1,""],log:[1075,2,1,""],tan:[1076,2,1,""],tanh:[1077,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1079,2,1,""],maml_step:[1080,2,1,""],reptile_step:[1081,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1082,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1127,2,1,""],copy_nest:[1128,2,1,""],index_nest:[1129,2,1,""],map:[1130,2,1,""],map_nest_at_index:[1131,2,1,""],map_nest_at_indices:[1132,2,1,""],multi_index_nest:[1133,2,1,""],nested_indices_where:[1134,2,1,""],nested_map:[1135,2,1,""],set_nest_at_index:[1136,2,1,""],set_nest_at_indices:[1137,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1139,2,1,""],randint:[1140,2,1,""],random_normal:[1141,2,1,""],random_uniform:[1142,2,1,""],seed:[1143,2,1,""],shuffle:[1144,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1146,2,1,""],reduce_max:[1147,2,1,""],reduce_mean:[1148,2,1,""],reduce_min:[1149,2,1,""],reduce_prod:[1150,2,1,""],reduce_std:[1151,2,1,""],reduce_sum:[1152,2,1,""],reduce_var:[1153,2,1,""]},"ivy.functional.ivy.nn":{activations:[1155,0,0,"-"],layers:[1163,0,0,"-"],losses:[1176,0,0,"-"],norms:[1180,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1156,2,1,""],leaky_relu:[1157,2,1,""],relu:[1158,2,1,""],sigmoid:[1159,2,1,""],softmax:[1160,2,1,""],softplus:[1161,2,1,""],tanh:[1162,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1164,2,1,""],conv1d_transpose:[1165,2,1,""],conv2d:[1166,2,1,""],conv2d_transpose:[1167,2,1,""],conv3d:[1168,2,1,""],conv3d_transpose:[1169,2,1,""],depthwise_conv2d:[1170,2,1,""],dropout:[1171,2,1,""],linear:[1172,2,1,""],lstm_update:[1173,2,1,""],multi_head_attention:[1174,2,1,""],scaled_dot_product_attention:[1175,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1177,2,1,""],cross_entropy:[1178,2,1,""],sparse_cross_entropy:[1179,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1181,2,1,""]},"ivy.stateful":{activations:[1185,0,0,"-"],converters:[1188,0,0,"-"],initializers:[1190,0,0,"-"],layers:[1199,0,0,"-"],module:[1211,0,0,"-"],norms:[1213,0,0,"-"],optimizers:[1215,0,0,"-"],sequential:[1221,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1186,1,1,""],GELU:[1187,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1186,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1187,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1189,2,1,""]},"ivy.stateful.initializers":{Constant:[1190,1,1,""],FirstLayerSiren:[1192,1,1,""],GlorotUniform:[1193,1,1,""],KaimingNormal:[1190,1,1,""],Ones:[1195,1,1,""],Siren:[1196,1,1,""],Uniform:[1190,1,1,""],Zeros:[1198,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1190,3,1,""],create_variables:[1190,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1192,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1193,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1190,3,1,""],create_variables:[1190,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1195,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1196,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1190,3,1,""],create_variables:[1190,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1198,3,1,""]},"ivy.stateful.layers":{Conv1D:[1200,1,1,""],Conv1DTranspose:[1201,1,1,""],Conv2D:[1202,1,1,""],Conv2DTranspose:[1203,1,1,""],Conv3D:[1204,1,1,""],Conv3DTranspose:[1205,1,1,""],DepthwiseConv2D:[1206,1,1,""],Dropout:[1207,1,1,""],LSTM:[1208,1,1,""],Linear:[1209,1,1,""],MultiHeadAttention:[1210,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1200,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1201,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1202,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1203,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1204,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1205,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1206,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1207,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1208,3,1,""],get_initial_state:[1208,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1209,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1210,3,1,""]},"ivy.stateful.module":{Module:[1212,1,1,""]},"ivy.stateful.module.Module":{__init__:[1212,3,1,""],build:[1212,3,1,""],build_mode:[1212,3,1,""],built:[1212,3,1,""],check_submod_rets:[1212,3,1,""],get_mod_key:[1212,3,1,""],mod_depth:[1212,3,1,""],mod_height:[1212,3,1,""],mod_with_top_mod_key_chain:[1212,3,1,""],save_weights:[1212,3,1,""],show_mod_in_top_mod:[1212,3,1,""],show_structure:[1212,3,1,""],show_v_in_top_v:[1212,3,1,""],sub_mods:[1212,3,1,""],track_submod_call_order:[1212,3,1,""],track_submod_rets:[1212,3,1,""],v_with_top_v_key_chains:[1212,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1214,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1214,3,1,""]},"ivy.stateful.optimizers":{Adam:[1216,1,1,""],LAMB:[1217,1,1,""],LARS:[1218,1,1,""],Optimizer:[1219,1,1,""],SGD:[1220,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1216,3,1,""],set_state:[1216,3,1,""],state:[1216,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1217,3,1,""],set_state:[1217,3,1,""],state:[1217,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1218,3,1,""],set_state:[1218,3,1,""],state:[1218,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1219,3,1,""],set_state:[1219,3,1,""],step:[1219,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1220,3,1,""],set_state:[1220,3,1,""],state:[1220,3,1,""]},"ivy.stateful.sequential":{Sequential:[1222,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1222,3,1,""]},"ivy.verbosity":{cprint:[1227,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1226,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1215,1216,1217],"02886":1182,"100":[1082,1182,1224],"141592653589793":809,"2021":1182,"2102":1182,"360":[1065,1076],"718281828459045":809,"754":[809,816,817,820,840],"999":[1032,1034,1035,1039,1215,1216,1217],"abstract":[864,879,1182,1215,1219],"boolean":[40,41,820,823,834,835,864,899,911,914,928,937,938,940,945,946,979,981,982,986,987,988,1018,1028,1032,1038,1062,1063,1064,1078,1079,1080,1082],"break":43,"case":[15,18,19,40,41,42,43,820,821,822,824,825,826,831,833,838,839,840,864,903,910,913,938,941,1004,1005,1006,1055,1058,1060,1082,1126,1129,1133,1182,1199,1210,1211,1212,1215,1219,1228],"catch":[938,961],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,362,410,411,816,818,864,866,867,868,869,870,871,873,874,876,877,878,879,891,892,914,938,942,992,1032,1046,1082,1126,1128,1135,1176,1178,1179,1182,1185,1186,1187,1188,1189,1190,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1228],"default":[15,18,19,40,41,42,43,810,811,812,813,814,815,843,844,848,849,850,851,852,854,855,856,857,858,859,860,862,863,864,873,874,881,882,886,887,888,889,890,893,894,895,896,903,906,907,908,913,914,921,922,923,924,938,940,941,943,951,952,953,954,957,958,959,970,971,972,977,979,980,989,991,992,995,997,1000,1002,1003,1005,1006,1009,1011,1013,1015,1016,1025,1027,1028,1032,1035,1037,1038,1039,1040,1041,1043,1047,1055,1058,1060,1078,1079,1080,1081,1082,1126,1127,1128,1130,1134,1135,1138,1139,1141,1142,1145,1147,1148,1149,1150,1151,1152,1153,1155,1156,1160,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1174,1175,1176,1177,1178,1179,1180,1181,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222],"final":[40,41,43,938,970,990,991,1082,1199,1210,1225],"float":[40,41,42,809,810,811,812,815,816,817,820,821,822,824,825,826,831,833,838,839,840,841,843,848,864,873,874,897,903,906,910,913,914,922,929,938,941,951,952,954,970,971,975,976,991,1007,1008,1009,1015,1016,1032,1034,1035,1037,1039,1040,1041,1048,1050,1054,1065,1072,1078,1079,1080,1081,1082,1138,1141,1142,1155,1157,1163,1171,1174,1175,1176,1177,1178,1179,1180,1181,1199,1207,1210,1213,1214,1215,1216,1217,1218,1219,1220],"function":[15,40,41,43,357,358,359,360,361,364,365,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,809,811,812,813,814,815,817,818,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,850,852,855,857,859,860,862,863,864,866,867,868,869,870,871,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1185,1186,1187,1215,1218,1219,1220,1224,1225,1228],"import":[43,1182,1225,1228],"int":[40,41,42,43,356,357,358,360,361,460,810,811,812,814,815,816,817,818,843,844,848,849,850,851,852,854,855,856,857,858,859,860,862,863,864,886,887,888,889,890,893,894,895,896,901,902,908,914,923,925,930,938,943,948,953,954,958,959,962,963,964,967,970,971,972,977,980,989,990,991,999,1000,1003,1004,1005,1006,1011,1012,1013,1014,1017,1019,1020,1025,1027,1030,1032,1034,1035,1039,1048,1052,1053,1055,1058,1078,1079,1080,1081,1082,1126,1135,1138,1139,1140,1142,1143,1145,1147,1148,1149,1150,1151,1152,1153,1155,1160,1163,1164,1165,1166,1167,1168,1169,1170,1174,1176,1178,1179,1180,1181,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1213,1214],"long":[43,1163,1173],"new":[40,41,43,460,810,811,812,813,815,820,832,914,918,938,939,948,962,963,964,967,970,971,972,973,1000,1004,1005,1006,1007,1008,1015,1016,1017,1032,1035,1037,1039,1040,1041,1048,1050,1052,1054,1065,1070,1071,1077,1082,1126,1136,1137,1138,1139,1180,1181,1182,1188,1189,1199,1209,1213,1214,1215,1216,1217,1218,1219,1220,1225,1228],"public":[938,955],"return":[15,16,17,18,19,40,41,42,43,460,810,811,812,813,814,815,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,836,837,838,839,840,841,843,844,846,847,848,851,852,854,855,856,857,858,859,860,862,863,864,873,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,899,900,902,903,907,908,909,910,911,913,914,918,919,920,921,922,923,924,925,926,927,928,929,930,937,938,939,940,941,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,977,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1003,1004,1005,1006,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1126,1127,1128,1130,1134,1135,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1188,1189,1199,1208,1209,1215,1219,1224,1225,1228],"short":[43,1163,1173,1182,1228],"static":[40,41,862,863],"super":1082,"true":[40,41,42,412,417,444,447,460,461,820,827,828,834,835,843,847,848,851,852,854,855,858,859,860,862,863,864,938,940,947,949,966,970,979,981,1028,1029,1032,1035,1037,1038,1039,1040,1041,1043,1055,1058,1078,1079,1080,1081,1082,1126,1127,1134,1138,1139,1145,1147,1148,1149,1150,1151,1152,1153,1155,1156,1163,1171,1176,1177,1178,1179,1199,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220],"try":[40,41,938,1026,1082],"var":[40,41,1078,1079,1080,1228],"while":[40,41,42,820,834,835,1082],AND:[820,823,858,859,1062,1063],But:1228,For:[43,820,821,822,824,825,826,831,833,838,839,840,938,941,950,1017,1032,1038,1046,1055,1060,1065,1066,1182,1188,1189,1225,1228],Its:[1065,1068],NOT:[820,834],Not:809,One:[40,41,43,938,963,1004,1138,1140,1228],Ones:[1182,1190],PRs:43,Such:[938,955],That:1225,The:[15,16,17,18,19,40,41,42,43,810,814,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,838,839,840,841,843,844,846,847,848,849,850,854,855,858,859,860,862,863,864,873,874,880,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,903,906,907,908,909,910,913,914,918,919,920,925,926,927,928,937,938,941,944,945,948,949,951,952,953,954,956,957,960,961,965,970,972,973,980,983,984,985,987,989,991,993,995,997,1000,1003,1004,1005,1006,1007,1008,1009,1012,1013,1014,1015,1016,1017,1020,1028,1031,1032,1034,1035,1037,1039,1040,1041,1043,1046,1048,1050,1052,1054,1055,1058,1060,1065,1066,1067,1068,1072,1073,1074,1075,1076,1078,1079,1080,1081,1082,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1141,1142,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1174,1175,1176,1177,1178,1179,1180,1181,1182,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1225,1228],There:[43,1182,1225],These:[43,1182],Use:43,Used:[1126,1127,1134,1211,1212],Using:[1182,1183,1228],With:[40,41,851,852,1055,1058,1145,1147,1148,1149,1150,1151,1152,1153,1182,1224,1228],__array__:[938,944],__call__:[1199,1210,1211,1212],__del__:1082,__dict__:[1082,1225],__enter__:1082,__exit__:1082,__getitem__:1082,__getstate__:1082,__init__:[40,41,42,43,59,60,84,221,362,363,410,411,492,624,864,865,872,873,874,875,876,877,878,879,914,915,916,917,1032,1033,1082,1086,1093,1182,1185,1186,1187,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1228],__iter__:1082,__len__:1082,__next__:1082,__repr__:1082,_assign_vari:1224,_axi:1082,_base:[1126,1127,1134],_compute_node_da_ratio:1082,_compute_node_strs_da:1082,_concat_unify_arrai:1082,_counter:1082,_cur_framework:[43,1082],_da_direct:1082,_da_directions_flip:1082,_da_step_tim:1082,_da_tim:1082,_da_tune_count:1082,_data:1082,_delta_da_dim_s:1082,_delta_sf:1082,_dict:1082,_dim_siz:1082,_first_da_tune_step:1082,_first_ns_tune_step:1082,_fn:1082,_forward:[1182,1224],_get_kalman_param:1228,_get_prior:1228,_get_some_model:1228,_index:[1126,1127,1134],_input_queu:1082,_length:1082,_max_depth:1082,_max_node_dim_step_ratio:1082,_max_node_dim_step_s:1082,_max_split_factor_step_s:1082,_mean_unify_arrai:1082,_min_bas:[938,1016,1180,1181,1213,1214],_min_denomin:[938,1015],_min_node_dim_s:1082,_min_sf_tune_step:1082,_min_unit_node_tune_step:1082,_model:1228,_node_mapp:1082,_node_percent_mem:1082,_node_str:1082,_node_str_da_ratio:1082,_node_strs_da:1082,_node_strs_kei:1082,_node_strs_n:1082,_node_util:1082,_ns_step_tim:1082,_ns_time:1082,_ns_tune_count:1082,_num_nod:1082,_num_work:1082,_observed_config:1082,_output_queu:1082,_paramet:1224,_percent_mem_inc_per_sf:1082,_percent_mem_inc_per_unit_da_dim:1082,_percent_util_inc_per_unit_da_dim:1082,_ret_fn:1082,_safety_factor:1082,_save_dir:1082,_shift_da_split:1082,_shift_n:1082,_slice:1082,_step:[1215,1219],_sum_unify_arrai:1082,_timeout:1082,_tune:1082,_tune_da:1082,_tune_n:1082,_tune_step:1082,_unit_da_tune_count:1082,_unroll_step:1228,_with_node_mappig:1082,_worker:1082,_worker_class:1082,_worker_fn:1082,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,864,873,879,1082,1211,1212,1215,1219],abil:1182,abl:[40,41],about:[816,817,818],abov:[43,810,814,843,844,1138,1140],above_height:[40,41],abs:[263,412,546,679,843,848,938,1082],absolut:[40,41,843,846,938,939],abstractmethod:1082,accept:[15,43,820,834,835,1182],access:[40,41,43,1225],accord:[40,41,816,817,938,954,972,1005,1006,1025,1030],accordingli:[843,848,858,859,860],accur:[59,362,410,411,864,876,877,878,879,914,1032,1190,1192,1193,1195,1196,1198],aco:[761,1065],acosh:[88,225,367,496,628,820],across:[40,41,864,873,874,883,884,886,887,888,889,890,896,906,907,938,943,945,946,1082,1126,1130],act:43,activ:[1156,1157,1158,1159,1160,1161,1162,1182,1186,1187],actual:1225,adam:[1032,1034,1035,1039,1182,1215,1217,1224],adam_step:1032,adam_upd:1032,adapt:[1032,1040,1215,1218],add:[40,41,43,1082,1176,1177,1178,1179,1180,1181,1182,1213,1214,1225],added:[43,938,1015,1016,1221,1222],adding:[43,938,948],addit:[40,41,43,938,962,963,964,1180,1181,1199,1209],addition:43,address:43,adher:43,adjac:[938,941],adopt:[43,938,955],affect:[938,941],affin:[1213,1214],after:[820,840,938,989,1032,1035,1036,1037,1039,1040,1041,1048,1049,1180,1181,1215,1216,1217,1218,1219,1220,1228],after_1:[938,954,1030],after_n:[938,954,1030],again:43,against:[40,41,843,845,851,852,1055,1058,1145,1147,1148,1149,1150,1151,1152,1153],agnost:[43,1182,1224,1225],aim:1228,algebra:1055,algorithm:[1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206,1228],align:[40,41,43,938,948],aliv:[864,898,900,904,938,974,998,1001],all:[15,16,17,18,19,40,41,43,127,253,406,535,667,810,814,843,848,849,850,858,862,863,864,873,898,904,938,939,940,945,946,955,974,980,1001,1014,1055,1060,1078,1079,1080,1081,1082,1126,1127,1128,1134,1135,1138,1139,1142,1145,1147,1148,1149,1150,1151,1152,1153,1163,1173,1182,1225,1228],all_depth:[40,41],all_equ:938,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1126,all_tru:[40,41],alloc:[43,810,814,864,1082],allow:[938,990,991,992,1211,1212],allow_dupl:[938,992],alon:[864,903,913,1082,1182],along:[40,41,43,460,843,848,849,850,851,852,854,855,856,857,858,859,860,864,887,888,889,890,893,894,895,896,908,938,953,958,959,972,989,990,991,1003,1013,1017,1020,1027,1055,1058,1078,1079,1080,1081,1082,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153],alongsid:[1224,1225],alpha:[1155,1157],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,820,824,864,1082],also:[40,41,43,938,941,1032,1035,1078,1079,1080,1081,1126,1127,1128,1134,1135,1163,1172,1182,1199,1209,1224],altern:1224,alwai:[40,41,43,1032,1038,1043],among:[40,41],amount:[864,910,1082,1182],angl:[820,826,839,841,1065,1066,1069],ani:[15,16,17,18,19,40,41,43,127,253,406,535,667,820,830,858,862,863,864,866,869,873,874,876,885,886,889,890,895,938,940,941,944,961,962,963,964,965,966,979,987,992,1015,1016,1032,1036,1082,1126,1127,1130,1134,1135,1136,1137,1138,1142,1182,1188,1189,1211,1212,1224,1225,1228],anoth:[40,41,43,914,920,1182],another_backend:43,anyth:[43,1228],anywai:43,apart:43,api:[1182,1183],appear:[43,938,967],append:[40,41,843,844,845,1082],appli:[15,18,19,40,41,843,847,938,962,963,964,1032,1039,1040,1062,1063,1064,1078,1079,1080,1126,1130,1133,1135,1155,1156,1157,1158,1159,1160,1161,1162,1163,1172,1174,1175,1180,1181,1182,1185,1186,1187,1213,1214],applic:[1126,1130,1135,1163,1174,1175,1182,1228],appropri:[851,852],approxim:[820,821,822,825,826,831,832,833,838,839,841,1155,1156],arang:[138,263,412,460,546,679,938,990,991],arbitrari:[40,41,864,893,894,896,1082],arc:[1065,1069],arcco:[1065,1066],arctan:[1065,1068],area:[820,821,822,1182],arg:[15,16,17,40,41,43,59,63,864,873,886,890,896,908,938,962,963,964,1006,1082,1188,1189,1211,1212],arg_nam:938,arg_stateful_idx:[1211,1212],argmax:[120,247,399,528,660,851],argmin:[138,412,546,679,938],args_clon:1082,args_dist:1082,args_to_ivi:[15,1182],args_to_n:[15,1182],args_uni:1082,argsort:[123,250,402,531,663,854],argument:[15,16,17,18,19,40,41,42,43,59,63,862,863,864,873,874,886,890,896,938,941,942,949,961,992,1006,1065,1066,1082,1126,1130,1188,1189,1211,1212],aris:[1182,1228],arithmet:[1145,1148,1151,1153],arithmetic_oper:[0,1,2],around:[40,41,42],arr:460,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,138,263,412,460,546,679,810,811,812,813,814,815,816,817,818,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,864,882,883,884,887,888,889,890,893,894,895,896,898,900,904,908,909,914,918,924,929,930,938,939,940,941,943,945,946,947,948,950,951,952,953,954,956,957,958,959,962,963,964,965,967,968,969,970,971,972,973,974,977,979,980,981,982,983,984,985,987,988,989,990,991,993,994,995,996,998,999,1000,1001,1003,1004,1005,1006,1011,1013,1014,1017,1018,1019,1020,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1034,1035,1038,1039,1043,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1082,1126,1128,1135,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1199,1207,1208,1210,1215,1219,1224,1225],arrang:[938,962],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,356,357,358,359,360,361,362,364,365,809,810,811,812,813,814,815,816,817,818,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860],array_api_methods_to_test:43,array_equ:[263,679,938],array_lik:[460,938,944],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,938],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1182],arraywithgener:[22,1182],arraywithgradi:[24,1182],arraywithimag:[26,1182],arraywithlinalg:[28,1182],arraywithlog:[30,1182],arraywithmath:[32,1182],arraywithmeta:[34,1182],arraywithrandom:[36,1182],arraywithreduct:[38,1182],arriv:[40,41,42],articl:1182,arxiv:1182,as_arrai:[40,41,938,977,1011],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[410,412,420,864,882,914,921,922,923,924],as_tensor:412,as_vari:[40,41],as_zero:[40,41],asarrai:[412,938],ascend:[854,855],asin:[761,1065],asinh:[88,367,496,628,820],aspect:[1048,1053],assert:[40,41,938,947,1082],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:938,associ:[43,1055,1061],assum:[820,825,838,1225,1228],astyp:[412,914],asynchron:[40,41,42],at_dev:[40,42,864,877,878],at_kei:[40,41],at_key_chain:[40,41],at_nod:1082,atan2:[761,1065],atan:[761,1065],atanh:[761,1065],attent:[43,1163,1174,1175,1199,1210],attribut:[0,6,40,41,816,817,818,938,1031],audienc:[1182,1225],author:1182,automat:43,avail:[40,41,43,864,899,901,902,911,938,963,1082],averag:[1032,1034,1035,1039,1078,1079,1080,1145,1148],average_across_step:[1078,1079,1080],avoid:[43,864,1082,1225],axes:[40,41,43,412,441,453,454,843,848,849,850,851,852,856,857,858,859,860,864,908,938,943,954,967,1019,1025,1030,1055,1058,1082,1145,1147,1148,1149,1150,1151,1152,1153],axes_length:[40,41,938,962,963,964],axi:[40,41,412,414,418,419,425,433,434,435,439,440,442,843,844,848,849,850,851,852,854,855,856,857,858,859,860,864,866,869,876,887,888,889,890,893,894,895,896,908,938,943,953,954,957,958,959,967,972,989,990,991,1003,1013,1014,1017,1019,1020,1027,1030,1082,1138,1144,1145,1147,1148,1149,1150,1151,1152,1153,1155,1160,1176,1178,1179],axis0:[40,41,938,1019],axis1:[40,41,843,844,938,1019],axis2:[843,844],back:[43,1211,1212,1215,1219],backend:[15,17,19,40,41,356,357,358,359,360,361,362,364,365,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,458,459,460,461,864,899,902,911,914,920,928,937,938,982,986,1032,1035,1037,1039,1040,1041,1046,1082,1182,1183,1188,1189,1215,1216,1217,1218,1219,1220,1224,1225,1228],backend_nam:43,background:[1182,1225],backprop:1228,backward:[858,859,860,1224],band:[938,970],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,362,410,411,412,435,820,831,832,833,864,866,867,868,869,870,871,873,874,876,877,878,879,914,938,975,991,1007,1016,1032,1082,1145,1146,1182,1185,1186,1187,1190,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1228],basi:43,batch:[40,41,843,847,848,864,906,907,938,970,980,1048,1052,1078,1079,1080,1081,1082,1163,1172,1180,1181,1213,1214],batch_shap:[412,427,938,980,999,1048,1049,1050,1051,1052,1053,1054,1055,1061,1138,1139,1163,1173,1174,1175,1199,1208],batch_siz:[460,461,1082,1138,1139,1163,1164,1165,1166,1167,1168,1169,1170],bayesian:1228,becaus:[43,938,941],becom:[43,938,950,1065,1069,1228],been:[938,962,963,964,1138,1139],befor:[40,41,43,864,908,1078,1079,1080,1082,1126,1135,1145,1147,1148,1149,1150,1151,1152,1153,1163,1174,1175,1228],before_1:[938,954,1030],before_n:[938,954,1030],begin:[1126,1127,1134,1225],behaviour:[43,1228],behind:[1032,1035,1037,1039,1040,1041,1182],being:[40,41,43,938,941,1002,1009,1082],believ:43,belong:[40,41],below:[43,810,814,843,844,1182,1225,1228],below_depth:[40,41],benefit:1182,bernoul:[1163,1171,1199,1207],best:[43,938,992,1182],beta1:[1032,1034,1035,1039,1215,1216,1217],beta2:[1032,1034,1035,1039,1215,1216,1217],beta:[1180,1181],between:[40,41,42,816,817,938,941,1055,1060,1126,1130,1138,1140,1176,1178,1179,1215,1217],bia:[1163,1172,1173,1199,1200,1201,1202,1203,1204,1205,1206,1209],bias_initi:[1199,1200,1201,1202,1203,1204,1205,1206,1209],bilinear:[1048,1049],bilinear_resampl:[172,315,449,585,747,1048],bilinearli:[1048,1049],binari:[820,823,1176,1177],binary_cross_entropi:1176,bit:[362,816,817,818,914,925,1048,1050,1054,1182],bitwis:[820,823],bitwise_and:[88,225,367,496,628,820],bitwise_oper:[0,7,8],block:[1182,1225],bool:[15,18,19,40,41,42,43,820,827,828,829,830,834,835,843,847,848,851,852,854,855,856,857,858,859,860,862,863,864,882,895,899,903,908,911,913,914,924,938,940,945,946,958,961,965,966,970,977,979,987,992,1011,1013,1027,1028,1029,1032,1035,1036,1037,1038,1039,1040,1041,1043,1055,1058,1078,1079,1080,1081,1082,1126,1127,1128,1130,1134,1135,1138,1139,1145,1147,1148,1149,1150,1151,1152,1153,1155,1156,1163,1171,1188,1189,1199,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220],both:[43,843,845,938,957],bottom:1182,boundari:[40,41,1138,1142],branch:[43,862,863],brittl:43,broadcast:[40,41,820,823,829,830,835,843,845,848,851,852,858,859,860,938,948,965,994,995,996,1003,1055,1058,1065,1069,1072,1145,1147,1148,1149,1150,1151,1152,1153],broadcast_to:[263,679,938],build:[1082,1182,1199,1210,1211,1212],build_mod:[1199,1210,1211,1212],builder:[43,1182],built:[864,938,941,1082,1199,1210,1211,1212],busi:43,bypass:1225,cach:[864,880,938,949],cache_fn:938,calcul:[40,41,42,820,821,822,825,826,831,832,833,838,839,840,841,1065,1072],call:[43,864,908,938,1002,1009,1026,1032,1036,1082,1126,1127,1130,1134,1199,1210,1211,1212,1215,1219,1225,1228],callabl:[40,41,862,863,864,873,874,908,938,949,961,963,992,1026,1078,1079,1080,1081,1082,1126,1130,1131,1132,1134,1135,1163,1174],can:[43,864,906,907,908,938,1004,1048,1050,1082,1182,1224,1225,1228],cancel_join_thread:1082,cannot:43,captur:1182,cast:[40,41,138,263,412,546,679,914,938,953,1048,1050,1054],catch_except:[938,961],categori:43,caus:43,ceil:[88,225,367,496,628,820,938,941],cell:[1163,1173,1199,1208],certain:[40,41,938,941,990,991],chain:[40,41,1078,1079,1080,1221,1222],chang:[43,864,938,1004,1082,1126,1128,1135,1182,1224],channel:[938,970,1048,1050,1051,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209],check:[15,16,17,18,19,40,41,43,864,903,913,914,919,928,937,938,947,966,979,987,1018,1028,1032,1038,1082,1126,1127,1134,1182,1225],check_nest:[1126,1134],check_shap:[40,41],check_submod_ret:[1211,1212],check_typ:[40,41],choic:[1182,1225],choleski:[751,1055],choos:[820,834,835,938,1029,1055,1060,1065,1069,1182],choose_random_framework:59,chosen:[40,41,938,941,1029],chunk:[864,906,907,908,1082],chunk_siz:[864,908,1082],circl:[1065,1066,1067],clark:1182,clear:[43,864,880,1082],clear_framework_stack:59,clear_mem_on_dev:[410,671,864],click:1182,clip:[40,41,263,412,679,938,951,952,994,996,1182],clip_matrix_norm:938,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,938],clipped_delta:1082,clone:[40,41,864,883,884,885,886,1082],clone_arrai:1082,clone_it:1082,clone_nest:1082,clonedit:1082,cloneditem:1082,clonednest:1082,close:[43,1048,1053,1065,1067,1082,1228],closest:[820,824,914,919],closest_valid_dtyp:914,code:[40,41,42,43,460,1182,1183,1224,1225],codebas:[864,906,907,1082,1182,1225,1228],codomain:[820,821,822,825,826,831,833,838,839,840,841],colab:1182,collect:[15,40,41,410,412,444,449,453,457,458,460,862,864,914,938,1032,1048,1055,1062,1065,1082,1126,1138,1145,1155,1163,1176,1180,1185,1199,1213,1215],color:[40,41,42,1226,1227],column:[938,980],combin:[40,41,42,1048,1053,1182,1228],combined_batch_s:1082,come:1225,command:1182,comment:43,commit:1228,common:[40,41,43,1065,1069],common_key_chain:[40,41],commun:[43,1182,1225],communuti:43,compar:[40,41,854,855,938,940,945,946],comparison_oper:[0,9,10],compat:[820,823,829,830,835,843,848,858,859,860,938,965,1004,1065,1072,1182,1228],compil:[263,412,679,1211,1212,1215,1216,1217,1218,1219,1220],compile_on_next_step:[1211,1212,1215,1216,1217,1218,1219,1220],complet:[40,41,43,1055,1060,1082],complex:[1225,1228],compliant:[820,834,835],compon:[938,957],composit:43,comput:[40,41,820,823,829,830,834,835,836,843,845,846,848,856,857,864,908,938,951,952,958,959,965,993,1032,1034,1035,1036,1037,1039,1040,1041,1043,1045,1048,1051,1055,1056,1057,1058,1059,1060,1062,1063,1064,1065,1066,1067,1068,1069,1073,1074,1075,1076,1126,1130,1145,1146,1147,1148,1149,1150,1151,1152,1153,1163,1164,1165,1166,1167,1168,1169,1170,1172,1174,1176,1177,1178,1179],concat:[40,41,864,893,894,895,896,908,938,970,1082],concaten:[40,41,138,263,412,546,679,938,970,1082,1182],concatten:[40,41,864,893,894,895,896,908,1082],condit:[412,862,863,938,1029,1126,1134],conditon:[1126,1134],config:[40,41,1082],config_list:1082,configur:[40,41],conflict:43,conform:43,conjunct:1225,connect:[1199,1209,1210],consid:[40,41,820,834,835,1055,1060,1224,1228],consist:[40,41,864,896,1082,1145,1146,1211,1212,1225],constant:[864,873,874,938,954,1082,1126,1130,1176,1177,1178,1179,1180,1181,1190,1191,1195,1198,1211,1212,1213,1214,1225],constant_kwarg:1082,constant_pad:[263,412,546,679,938],constitu:[40,41],construct:[938,1020,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224],constructor:[40,41,42,938,942,1221,1222],consum:[864,1082],cont_feat_dim:[1163,1174],contaienr:[40,41],contain:[15,18,19,42,810,812,814,815,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,848,856,857,858,859,860,864,883,887,908,914,918,938,939,943,950,951,952,955,965,979,994,996,1015,1016,1032,1034,1035,1037,1039,1040,1041,1065,1072,1078,1079,1080,1081,1082,1138,1139,1145,1147,1148,1149,1151,1153,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[412,679,938],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[412,938,997,1163,1174,1199,1210],context_dim:[1199,1210],contextmanag:[59,60],continu:[43,1082,1225],contract:[40,41,1145,1146],contribut:[1182,1183],contributor:[43,1182],control:1182,conv1d:[203,345,474,799,1163,1182,1199],conv1d_transpos:[203,345,474,799,1163],conv1dtranspos:[1182,1199],conv2d:[203,345,474,610,799,1163,1182,1199],conv2d_transpos:[203,345,474,799,1163],conv2dtranspos:[1182,1199],conv3d:[203,345,474,610,799,1163,1182,1199],conv3d_transpos:[203,345,474,799,1163],conv3dtranspos:[1182,1199],convent:[40,41,843,845,1145,1146],conver:[864,880,891,903,910,913,1082],convers:[16,17,18,19,40,41,1082,1182],convert:[15,16,17,18,19,40,41,43,864,891,892,914,920,926,927,938,1012,1023,1024,1048,1050,1054,1055,1061,1082,1126,1128,1135,1182,1189],convert_dtyp:914,convolut:[1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206],cool:43,cooler:43,coordin:[938,995,1065,1066,1067,1069],copi:[40,41,43,460,938,956,1082,1126,1128],copy_arrai:[412,679,938],copy_nest:1126,core:[410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,458,459,460,461,862,863,864,866,867,868,869,870,871,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1182],corner:43,correct:[43,1182,1225],correctli:[40,41,43,851,852,1055,1058,1065,1069,1145,1147,1148,1149,1150,1151,1152,1153],correspond:[40,41,938,953,1138,1139],cos:[88,367,496,628,820,938,970,1065,1066,1076,1225],cosh:[88,367,496,628,761,820,1065],cosin:[820,821,825,826,1065,1066,1071],cost:[1032,1034,1035,1037,1039,1040,1041,1078,1079,1080,1081],cost_fn:[1078,1081],could:1228,count:[40,41,849,850,858,859,860,1082,1145,1150,1152],cours:43,cprint:1226,cpu:[40,41,43,864,901,903,909,910,913,938,941,944,972,973,980,990,991,999,1000,1005,1006,1031,1082,1138,1139,1140,1141,1142,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222,1224,1225],creat:[40,41,810,811,812,813,815,864,873,874,938,941,944,971,972,973,980,990,991,999,1000,1005,1006,1022,1031,1032,1045,1082,1138,1139,1140,1141,1142,1182,1183,1188,1189,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1228],create_if_abs:[40,41],create_vari:1190,creation:[40,41,42,43],creation_funct:[356,357,358,359,360,361,810,811,812,813,814,815],crop:[1048,1052],crop_siz:[1048,1052],cross:[263,679,938,1176,1177,1178,1179],cross_entropi:1176,cuda:[40,41,864,873,892,909,938,941,944,972,973,980,990,991,999,1000,1005,1006,1031,1082,1138,1139,1140,1141,1142,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222],cumprod:[138,263,412,679,938],cumsum:[679,938],cumul:[938,958,959],current:[40,41,42,43,864,873,897,898,900,904,914,920,928,937,938,960,974,982,986,998,1001,1082,1126,1127,1134,1182,1228],current_framework:59,current_framework_str:[412,679,938,1082],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1163,1164,1165,1166,1167,1168,1169],d_out:[1163,1164,1165,1166,1167,1168,1169],da_can_termin:1082,da_dim_s:[864,1082],da_direct:1082,da_tune_step:[864,1082],dai:[43,1228],daniel:1182,data:[40,41,42,43,810,811,812,813,814,815,817,818,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,838,839,840,841,843,844,845,848,849,850,854,855,858,859,860,864,866,867,868,869,870,871,876,877,878,892,914,918,919,920,924,925,926,927,928,929,930,937,938,941,944,965,971,980,987,1000,1004,1014,1018,1031,1032,1038,1046,1065,1072,1082,1163,1172,1182],data_format:[1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206],data_type_funct:[362,364,365,816,817,818],dataset:[40,41],datatyp:[40,41,914,919,929,930],dcdw:[1032,1034,1035,1037,1039,1040],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1032,1039,1040,1215,1217,1218],decay_lambda:[1032,1039,1040,1215,1217,1218],decid:[40,41,1228],decompos:[1055,1056,1060],decomposit:[843,847,1055,1056,1060],decrement:[938,983],dedic:[1032,1046,1188,1189],deep:[40,41,1182],deep_copi:[40,41],deeper:[864,886,890,896,1082,1126,1135,1182],deepli:[1126,1128],def:[43,60,84,221,363,492,624,865,872,875,915,916,917,1033,1082,1086,1093,1182,1191,1194,1197,1224,1225,1228],default_dev:43,default_devic:864,default_dtyp:[43,914],default_float_dtyp:914,default_int_dtyp:914,default_key_color:[40,41,42],default_nod:1082,default_rng:460,default_v:[938,961],defaultdevic:[864,865],defaultdtyp:[914,915],defaultfloatdtyp:[914,916],defaultintdtyp:[914,917],defin:[43,938,957,999,1031,1138,1140],definit:43,degre:[1065,1076],del:1082,delai:43,delet:43,delta:[1032,1034,1082],delta_dim_s:1082,delta_percent_mem:1082,delta_sf:1082,delta_util:1082,demo:1182,denomin:[938,969,976,1008,1015,1016,1180,1181,1213,1214],denot:43,dens:[1199,1209],depend:[820,821,822,825,826,831,832,833,838,839,841,843,847,854,855,938,1029,1182],depth:[40,41,412,436,864,886,890,896,938,978,999,1082,1126,1135,1211,1212],depth_cutoff:[40,41],depthwis:[1163,1170,1199,1206],depthwise_conv2d:[203,345,474,610,799,1163],depthwiseconv2d:[1182,1199],deriv:[810,813,1032,1034,1035,1037,1039,1040,1041,1126,1128,1135,1182,1211,1215,1219,1221],descend:[843,847,854,855],descent:[1032,1037,1215,1220],describ:[40,41,1145,1146],descript:[843,848],design:[1182,1183],desir:[40,41,864,909,914,918,938,941,944,980,981,1000,1031,1048,1053,1082,1145,1147,1148,1149,1151,1153],desired_aspect_ratio:[449,452,1048,1053],desired_percent_increas:1082,detail:1228,detect:[40,41,1126,1127,1134],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,820,821,822,823,825,826,827,828,831,833,838,839,840,843,844,845,846,848,858,859,860,864,899,901,902,911,914,918,919,925,928,929,930,937,938,940,941,944,945,946,979,982,986,987,1018,1028,1032,1038,1065,1072,1078,1079,1080,1081,1082,1163,1174],dev:[40,41,42,43,131,257,356,359,410,412,413,415,425,426,427,434,435,436,437,438,443,460,461,539,671,810,813,864,867,868,870,871,873,874,877,878,880,881,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,900,903,904,905,906,907,908,909,910,913,938,941,944,972,973,980,990,991,999,1000,1005,1006,1031,1032,1047,1138,1139,1140,1141,1142,1188,1189,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222],dev_clon:[40,41,864],dev_clone_arrai:864,dev_clone_it:864,dev_clone_nest:864,dev_dist:[40,41,864],dev_dist_arrai:864,dev_dist_it:864,dev_dist_nest:864,dev_from_str:[43,131,257,410,539,671,864],dev_mapp:864,dev_str:[40,41],dev_to_str:[131,257,410,539,671,864],dev_unifi:864,dev_unify_arrai:864,dev_unify_it:864,dev_unify_nest:864,dev_util:864,devclonedit:864,devcloneditem:864,devclonednest:864,devdistit:864,devdistitem:864,devdistnest:864,develop:[43,1182,1225,1228],deviat:[40,41,1138,1141,1145,1151,1180,1181,1213,1214],devic:[21,40,41,43,356,357,358,361,411,412,424,810,811,812,813,814,815,866,867,868,869,870,871,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,938,941,944,971,972,973,980,990,991,999,1000,1005,1006,1031,1032,1047,1138,1139,1140,1141,1142,1182,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222],devmanag:[864,872],devmapp:[864,874],devmappermultiproc:864,diag:[843,847],diagon:[112,240,391,520,652,810,814,843,938,980],dict:[15,16,17,18,19,40,41,42,864,866,869,873,874,876,886,887,888,889,890,938,962,963,964,992,1078,1079,1080,1082,1126,1128,1129,1130,1133,1135,1188,1189],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,816,817,864,883,884,887,888,1055,1060,1082,1163,1172,1182,1225,1228],differenti:[1182,1225],dilat:[1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206],dim:[40,41,843,847,938,999,1048,1049,1053,1082,1199,1210],dim_siz:[40,41,864,1082],dimens:[40,41,42,810,814,843,844,845,847,848,849,850,851,852,858,859,860,864,895,938,948,953,957,962,963,964,967,970,977,989,999,1003,1004,1013,1014,1017,1025,1027,1048,1052,1055,1058,1078,1079,1080,1081,1082,1138,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1160,1163,1164,1165,1166,1167,1168,1169,1170,1173,1176,1178,1179,1199,1200,1201,1202,1203,1204,1205,1206,1209,1210],dimension:[40,41,460,843,845,847,848,858,859,860,938,1013,1014],direct:1082,directli:[43,1126,1135,1225,1228],directori:[938,1010,1021],discord:43,discret:[1176,1178],discuss:43,disk:[40,41,1048,1050],distanc:[938,941],distribut:[40,41,864,883,887,888,889,890,1082,1138,1139,1140,1141,1142,1163,1171,1199,1207,1211,1212],distribute_nest:1082,distributedarrai:[40,41],distrubt:[1176,1178],dive:[1182,1225],divid:[40,41,938,1013,1015,1065],dividend:[1065,1072],divis:[938,969,976,1008,1015,1016,1032,1034,1035,1039,1065,1072,1215,1216,1217],divisor:[1032,1034,1035,1039,1065,1072,1215,1216,1217],doc:1182,docstr:43,document:43,doe:[40,41,43,938,941,1013,1224],doesn:[1055,1060,1182],doing:43,domain:[820,821,822,825,826,831,833,838,839,840,841,1065,1066],don:[43,1182],done:43,door:1228,dot:[1055,1057,1163,1174,1175,1199,1210],down:1224,downscal:[938,951,952],drag:[1182,1228],draw:[1138,1139,1141,1142],drawn:[1138,1139,1140,1141,1142],drop:[1182,1228],dropout:[1163,1182,1199,1210],dropout_r:[1199,1210],ds_tune_step:864,dtype:[40,41,43,138,263,356,357,358,359,361,362,364,365,412,413,415,416,424,427,443,546,679,810,811,812,813,815,816,817,818,851,852,918,919,920,921,922,923,925,926,927,928,929,930,931,932,933,934,935,936,937,938,941,944,971,980,999,1000,1031],dtype_bit:[138,263,412,546,679,914],dtype_from_str:[43,138,263,412,546,679,914],dtype_in:[412,421,422,423,914,920,925,926,927,928,929,930,937],dtype_to_str:[138,263,412,546,679,914],duplic:[40,41,43],dure:[40,41,43,843,845,862,863,938,1026,1032,1034,1035,1039,1078,1079,1080,1081,1211,1212,1215,1216,1217,1219],dynam:[43,412,417,862,863],each:[40,41,42,43,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,838,839,840,841,843,845,847,864,873,874,883,884,885,886,887,888,889,895,907,908,938,939,940,954,965,1003,1013,1017,1020,1030,1032,1035,1037,1039,1040,1041,1048,1051,1065,1067,1072,1074,1075,1082,1126,1130,1138,1139,1145,1146,1163,1164,1165,1166,1167,1168,1169,1170,1171,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1225],eager:1225,easi:1228,easili:1182,econom:1228,ecosystem:1182,edg:[938,950,954,1030],effect:[1032,1041],effective_grad:[1032,1041],effici:1228,einop:[40,41,938,962,963,964],einops_rearrang:[40,41,938],einops_reduc:[40,41,938],einops_repeat:[40,41,938],einstein:[40,41,1145,1146],einsum:[40,41,189,333,462,600,779,1145],either:[40,41,43,820,831,833,838,843,845,938,961,992,995,997,1078,1079,1080,1081,1082,1199,1210,1211,1212,1225],eleg:1082,element:[40,41,460,810,814,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,845,849,850,856,857,858,859,860,864,885,889,895,914,918,938,939,941,943,945,946,950,951,952,958,959,965,968,969,980,981,994,996,1003,1013,1024,1029,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1082,1145,1146,1148,1150,1152,1155,1156,1157,1158,1159,1160,1161,1162,1163,1171,1199,1207],elementwis:[40,41],elementwise_affin:[1213,1214],elementwise_funct:[820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841],elemtn:[1138,1139],elif:1082,els:[43,938,947,961,966,1082],elsewher:[938,1029],emphas:1182,empti:[40,41,77,214,356,485,617,810,858,859,860,1055,1060,1082],enabl:[40,41,42,43,1182],encapsul:[816,818],encod:[938,970,1048,1050],end:[938,941,1182,1225],engag:43,ensur:43,entir:[40,41,858,859,860,864,908,1082,1182,1199,1208],entri:[40,41,938,990,991,1013,1014],entropi:[1176,1177,1178,1179],enumer:1082,environ:1182,eps:[362,816,817],epsilon:[1032,1034,1035,1039,1176,1177,1178,1179,1180,1181,1213,1214,1215,1216,1217],equal:[40,41,88,367,496,628,820,827,843,844,854,855,938,940,945,946,954,1013,1030,1065,1076,1138,1142],equality_matrix:[938,940],equat:[40,41,1145,1146],equival:[820,834,835,843,848,938,941,1065,1076],erf:[458,761,1065],error:[40,41,43,864,938,1014,1065,1073,1082,1155,1156,1211,1212,1215,1219],etc:[40,41,43,864,909,938,941,944,972,973,980,990,991,999,1000,1005,1006,1031,1082,1138,1139,1140,1141,1142,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222,1228],euclidean:[843,848],euler:809,evalu:[40,41,820,831,832,833,836,858,859,860,938,995,1126,1127,1134],even:[43,1228],evenli:[40,41,938,941,990,991,1013],everi:[43,938,940,1228],exact:[40,41],exampl:[43,862,863,938,950,1017,1055,1060,1182,1224,1225,1228],example_input:[412,417,862,863],exc_tb:1082,exc_typ:1082,exc_val:1082,exce:[938,996],except:[40,41,44,47,858,859,860,938,941,947,953,961,1026,1082],excess_s:1082,excit:[1182,1225],exclud:[59,61,938,941,1138,1142],exclus:[40,41,412,419,432,444,446,938,958,987,1032,1038,1138,1140],execut:[43,938,1026,1225],execute_with_gradi:[169,310,444,580,741,1032,1182,1224],exist:[40,41,938,961,1082,1182,1215,1219,1228],exp:[761,1065],expand:[40,41,938,967,970],expand_dim:[40,41,263,679,938,1082],expect:[938,942],explain:[43,1225],explicitli:[43,1199,1208,1210,1211,1212,1225],expon:[938,1016],exponenti:[1065,1073,1074],expos:[938,944,955],express:[820,825,838,938,995],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1032,1036],eye:[1055,1057],fabian:1182,fabio:1182,factor:[843,847,864,873,906,907,908,1032,1034,1035,1039,1040,1082,1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206,1215,1216,1217,1218],fail:43,falck:1182,fall:[1211,1212,1215,1219],fallback_to_non_compil:[1211,1212,1215,1219],fals:[15,18,19,40,41,42,59,66,67,68,69,70,410,412,419,420,432,439,442,444,445,446,453,454,820,827,828,834,835,843,848,851,852,854,855,856,857,858,859,860,864,882,895,903,908,913,914,921,922,923,924,938,940,958,961,966,970,977,987,992,1011,1013,1027,1029,1032,1035,1036,1037,1038,1039,1040,1041,1055,1058,1078,1079,1080,1081,1082,1126,1127,1128,1130,1134,1135,1145,1147,1148,1149,1150,1151,1152,1153,1188,1189,1211,1212,1215,1216,1217,1218,1219,1220],fan_in:1190,fan_mod:1190,fan_out:1190,far:[1126,1127,1134,1224],faster:[862,863],favourit:[1182,1224],feasibl:1228,feat_dim:[1163,1174,1175],fed:[864,908,1082],feed:[864,908,1082],few:43,field:1228,file:[40,41,43,938,1010,1021,1211,1212],filepath:[40,41],fill:[40,41,810,811,812,813,815,938,971,1000,1138,1140],fill_valu:[412,424,938,971],filter:[1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206,1228],filter_s:[1199,1200,1201],filter_shap:[1199,1202,1203,1204,1205,1206],find:[40,41,43,1228],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,220,221,362,363,491,492,623,624,816],finish:[1182,1228],finit:[820,827],first:[40,41,43,460,820,823,829,830,835,843,844,845,847,862,863,864,895,938,945,953,957,965,990,991,1017,1019,1032,1036,1078,1079,1080,1081,1082,1126,1127,1134,1138,1144,1145,1150,1152,1199,1210,1211,1212,1215,1219,1225,1228],firstlayersiren:[1182,1190],firstli:[1225,1228],fist:[864,908,1082],fit:[40,41,410,412,444,449,453,457,458,460,938,1003,1048,1053],fix:43,fkt:1228,flag:[40,41,43,1032,1038],flat:[40,41,938,1003,1005],flat_list:[40,41],flatten:[40,41,843,848,851,852,938,970,1003,1145,1147,1148,1149,1151,1153],flatten_key_chain:[40,41,1211,1212],flexibl:[1182,1225],flip:[40,41,118,245,397,526,658,849],float32:[43,412,427,914,918,926,927,938,941,944,980,1000,1031],float_dtyp:[914,922,932],float_img_to_uint8_img:1048,floor:[263,412,679,938,969,1082],floormod:[263,412,679,938],fluid:1228,folder:[43,1182],follow:[40,41,43,816,818,843,848,864,908,938,983,984,985,1015,1016,1032,1035,1037,1039,1040,1041,1082,1126,1130,1135,1163,1174,1175,1182,1199,1209,1215,1219],followng:[816,817],fomaml_step:1078,forget:[1032,1034,1035,1039,1215,1216,1217],fork:[938,997,1182,1183],forkserv:[938,997,1082],form:[15,16,17,18,19,40,41,810,814,843,844,938,944,1032,1035,1037,1039,1040,1041,1126,1128,1135,1163],format:[40,41,43,864,882,914,918,920,924,938,941,944,980,1000,1031,1082,1145,1146,1182,1224,1225],format_fn:[40,41],format_key_chain:[40,41],forward:[1211,1212,1215,1219,1224],found:[40,41,42],fourier:[938,970],fourier_encod:938,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,119,121,124,126,128,129,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,234,235,236,237,238,241,242,243,244,246,248,251,254,255,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,316,317,318,320,321,322,323,325,326,329,330,331,332,334,335,336,337,338,339,340,341,344,346,347,348,349,350,351,352,357,358,359,360,361,363,364,365,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,392,393,394,395,396,398,400,403,405,407,408,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,445,446,447,448,450,451,452,454,455,456,459,461,463,464,465,466,467,468,469,472,473,475,476,477,478,479,480,481,486,487,488,489,490,492,493,494,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,521,522,523,524,525,527,529,532,534,536,537,540,541,542,543,544,545,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,581,582,583,584,586,587,588,590,591,592,596,597,598,599,601,602,603,604,605,606,607,611,612,613,618,619,620,621,622,624,625,626,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,653,654,655,656,657,659,661,664,666,668,669,672,673,674,675,676,677,678,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,742,743,744,745,746,748,749,750,752,753,754,755,756,757,759,760,762,763,764,765,766,767,768,769,770,771,773,774,775,776,777,778,780,781,782,783,784,785,786,789,790,791,792,793,794,795,797,798,800,801,802,803,804,805,806,811,812,813,814,815,817,818,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,844,845,846,847,848,850,852,855,856,857,859,860,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1063,1064,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1181,1182,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1216,1217,1218,1219,1220,1222,1223,1224,1225,1227,1228],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1082,framewrk:[938,997],free:43,freed:43,freeli:43,frequenc:[938,970],from:[40,41,42,43,810,813,820,840,843,844,849,850,856,857,858,859,860,864,873,874,908,914,920,938,961,972,973,980,1004,1014,1022,1029,1032,1035,1039,1048,1052,1055,1060,1078,1079,1080,1081,1082,1126,1128,1135,1138,1139,1140,1141,1142,1145,1150,1152,1163,1171,1174,1182,1188,1189,1199,1207,1210,1215,1219,1224,1225],from_cal:[1211,1212],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,138,263,412,546,679,816,817,938,1055,1060,1182],full_matric:[843,847],fulli:[43,1182,1199,1209,1210,1224],func:[40,41,412,417,444,445,862,863,864,908,938,949,1032,1036,1082],further:[43,1228],furthermor:1228,futur:1228,gain:1190,gamma:[1180,1181],gather:[40,41,138,263,412,546,679,938,973],gather_nd:[40,41,138,263,412,546,679,938],gauss:[1065,1073],gaussian:[1155,1156],geglu:[1182,1185],gelu:[343,471,788,1155,1182,1185],gener:[23,40,41,43,410,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,460,862,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1038,1138,1140,1142,1143,1182,1215,1219],geometr:[938,970],get:[40,41,43,816,817,818,864,873,874,882,897,898,903,907,910,913,914,924,925,938,942,974,975,976,1002,1082,1182,1199,1208,1228],get_all_arrays_in_memori:938,get_all_arrays_on_dev:864,get_framework:59,get_initial_st:[1199,1208],get_min_bas:938,get_min_denomin:938,get_mod_kei:[1211,1212],get_num_dim:[412,679,938],get_referrers_recurs:938,getfullargspec:1082,gist:1182,give:[43,938,1004,1225],given:[40,41,43,810,811,849,850,864,897,903,906,907,908,910,913,914,918,938,941,944,950,958,959,973,990,991,1000,1003,1005,1006,1013,1020,1025,1027,1031,1032,1034,1035,1037,1039,1040,1041,1055,1057,1061,1065,1066,1082,1126,1131,1132,1138,1141,1142,1144,1145,1148,1150,1151,1152,1153,1163,1164,1165,1166,1167,1168,1169,1170,1188,1189,1228],global:[40,41,42,864,873,874,881,906,907,908,914,921,922,923,938,960,975,976,1002,1007,1008,1009,1015,1016,1032,1047,1082,1180,1181,1213,1214],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1182,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209],good:43,googl:1182,got:[43,1182],gpu0:43,gpu2:43,gpu:[864,899,902,1082],gpu_is_avail:[410,864,1082],grad:[1182,1215,1219,1224],gradient:[25,40,41,445,446,447,448,864,908,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1051,1078,1079,1080,1081,1182,1215,1216,1217,1218,1219,1220,1224,1228],gradient_descent_upd:[1032,1078,1079,1080,1081],gradient_imag:[172,315,449,585,747,1048],gradienttrack:[1032,1033],graph:[1032,1035,1037,1039,1040,1041,1211,1212],greater:[40,41,938,941,968,1014,1138,1142],green:[40,41,42,1226,1227],grid:[938,995],group:[1048,1053],guid:[43,1182,1183,1228],gym:1182,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1228,half:[938,941,1082,1138,1142],hand:1182,handl:[40,41,42,43,862,863,864,880,882,891,892,903,910,913,1032,1035,1037,1039,1040,1041,1082,1215,1216,1217,1218,1219,1220],happen:43,has:[40,41,43,843,845,846,851,852,938,1017,1055,1060,1065,1068],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,938],hasattr:1082,have:[40,41,43,810,811,812,813,814,815,816,817,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,838,839,840,841,843,844,845,847,848,849,850,851,852,854,855,858,859,860,938,953,957,962,963,964,965,971,1017,1032,1038,1046,1065,1072,1082,1182,1224,1225],haven:43,hdf5:[40,41,1211,1212],head:[1163,1174,1199,1210],head_dim:[1199,1210],height:[1048,1053],height_cutoff:[40,41],help:[43,59,362,410,411,864,876,877,878,879,914,1032,1182,1190,1192,1193,1195,1196,1198],here:[43,1182],hidden:[1163,1173,1199,1208],hierarch:[938,955],hierarchi:[40,41],high:[40,41,460,1138,1140,1142],higher:[843,847,1032,1035,1037,1039,1040,1041],highest:[1138,1140],highest_util:1082,highest_util_nod:1082,highli:1182,highlight:1228,hint:43,hkt:1228,hold:[914,918,938,941,944,1005,1006],host:1182,hot:[938,999],how:[1182,1199,1210,1211,1212,1225,1228],howev:[43,1225],http:1228,hyperbol:[820,821,822,826,839,841,1065,1070,1071,1077,1155,1162],hypothet:[43,1228],icon:1182,idea:1182,ident:[40,41,43,138,263,412,546,679,938],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[809,816,817,820,840],if_exist:[40,41],ignor:[40,41,1215,1219],ignore_key_error:[40,41],ignore_miss:[1215,1219],ignore_non:[40,41],iii:43,iinfo:[83,220,362,491,623,816],imag:[27,450,451,452,938,989,1049,1050,1051,1052,1053,1054,1163,1164,1165,1166,1167,1169,1170,1182,1228],image_dim:[1048,1052],imkkhk:1228,immedi:[1182,1225,1228],implement:[43,820,821,822,825,826,831,832,833,838,839,841,854,855,1182,1225,1228],in_featur:[1163,1172],inadvert:43,includ:[40,41,43,843,848,858,859,860,938,941,979,1015,1016,1028,1126,1127,1138,1142,1199,1209,1210,1213,1214,1224],include_deriv:[1126,1128,1135],include_empti:[40,41],include_inf:[40,41,938,979,1028],include_nest:[1126,1127],include_self:[40,41],inclus:[43,1138,1140],incom:[1163,1172],increas:[864,886,890,896,938,954,967,1030,1082,1126,1135],increasingli:1228,increment:[938,984,1082],inde:1182,indent:[40,41,42],independ:[1138,1139],index:[40,41,412,460,851,852,854,855,938,943,972,973,995,1014,1017,1126,1129,1131,1132,1133,1136],index_nest:1126,indic:[40,41,412,425,426,436,437,438,843,848,851,852,854,855,938,943,972,973,981,999,1005,1006,1126,1127,1129,1131,1132,1133,1134,1136,1137,1138,1139,1155,1160,1163,1164,1165,1166,1167,1168,1169,1170,1180,1181,1199,1200,1201,1202,1203,1204,1205,1206,1211,1212],indices_wher:[138,263,412,679,938],indistinguish:[820,840],inevit:1228,inf:[40,41,843,848,938,979,988,1028,1065,1068],infer:[810,813,856,857,862,863,938,977,980,1004,1011,1048,1052,1055,1060,1225,1228],infin:[820,821,822,824,825,826,827,831,833,838,839,840,841,843,848,858,859,860,938,988],infinit:[820,840],inform:[816,817,818,1032,1043],init_c:[1163,1173],init_h:[1163,1173],init_on_first_step:[1215,1219],initi:[40,41,42,43,59,362,410,411,864,876,877,878,879,914,1032,1082,1163,1173,1182,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1215,1219],initialz:[1211,1212],inner:[843,845,1078,1079,1080,1081],inner_batch_fn:[1078,1079,1080],inner_batch_shap:[1163,1172],inner_cost_fn:[1078,1079,1080],inner_grad_step:[1078,1079,1080,1081],inner_learning_r:[1078,1079,1080,1081],inner_optimization_step:[1078,1079,1080,1081],inner_v:[1078,1079,1080],innermost:[810,814,843,844],inp:1082,inplac:[40,41,938,947,982,986,1018,1032,1035,1037,1039,1040,1041,1188,1189,1215,1216,1217,1218,1219,1220],inplace_arrays_support:[412,938],inplace_decr:[138,263,412,546,679,938],inplace_incr:[138,263,412,546,679,938],inplace_oper:[0,11,12],inplace_upd:[40,41,138,263,412,546,679,938,1188,1189],inplace_variables_support:[412,938],input:[15,18,19,40,41,42,43,810,813,814,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,847,848,849,850,851,852,854,855,856,857,858,859,860,862,863,864,873,874,881,882,883,886,887,890,896,908,909,914,918,919,921,922,923,924,925,929,930,938,939,940,943,945,946,947,948,950,951,952,953,954,956,958,959,961,962,963,964,965,966,967,968,969,970,977,979,980,981,983,984,985,987,988,989,993,994,995,996,1003,1011,1012,1014,1017,1018,1019,1020,1022,1023,1024,1025,1027,1028,1030,1032,1036,1038,1043,1047,1048,1049,1050,1051,1052,1054,1055,1058,1060,1062,1063,1064,1065,1068,1070,1071,1072,1076,1077,1078,1079,1080,1081,1082,1138,1139,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1180,1181,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1213,1214,1225],input_ax:[864,908,1082],input_channel:[1199,1200,1201,1202,1203,1204,1205,1208,1209],input_queu:1082,inputs_split:1082,insert:[851,852,938,967],insid:43,inspect:1082,inspir:1228,instal:1182,instanc:[15,16,17,18,19,40,41,43,460,864,873,1082,1188,1189,1221,1222],instead:[40,41,43,460,1145,1147,1148,1149,1150,1151,1152,1153,1228],int32:43,int64:[914,918,938,941,944,980,1000,1031],int_dtyp:[914,923,933],integ:[40,41,460,816,818,820,823,824,837,843,848,858,859,860,914,930,938,941,968,1013,1138,1140,1143],integr:1182,intend:43,inter:1182,interact:1182,interchang:[40,41,938,1019],interest:1182,interfac:[938,944,1225],intermedi:[40,41],intern:[40,41,864,1032,1046,1082,1126,1127,1134,1135,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1221,1222],interpol:[938,989],intersect:[1065,1066],interv:[40,41,858,859,860,938,941,950,990,991,1065,1067,1138,1142],introduc:1228,inv:[751,1055,1228],invalid:[858,859,860],invalid_dtyp:914,invers:[820,821,822,1055,1057,1059,1065,1066,1067,1068,1070,1228],invert:[1055,1057,1059],invest:1228,investig:43,invoc:[862,863],irrespect:1182,is_al:1082,is_arrai:[138,263,412,546,679,938,1082],is_float_dtyp:914,is_int_dtyp:914,is_mean:1082,is_sum:1082,is_vari:[169,310,444,580,741,1032],isfinit:[88,225,367,496,628,820],isinf:[263,546,679,938],isinst:1082,isnan:[88,225,367,496,628,820],isnumer:1082,issu:[1182,1183],issue_numb:43,item:[15,19,40,41,864,873,874,876,883,885,887,889,895,914,921,938,955,978,1015,1016,1082,1126,1130,1131,1132,1135,1136,1137,1182,1211,1212,1224],iter:[15,16,17,18,19,40,41,42,862,863,864,867,868,870,871,873,874,877,878,885,887,888,889,890,895,908,938,940,948,953,954,980,995,1000,1003,1004,1006,1011,1013,1017,1020,1025,1030,1082,1126,1127,1128,1130,1134,1135],iterbal:[864,885,889,895,1082],its:[460,843,845,864,908,938,980,1004,1019,1025,1082,1182],itself:[1126,1135],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,356,357,358,359,360,361,362,364,365,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,809,810,811,812,813,814,815,816,817,818,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,862,863,864,866,867,868,869,870,871,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1185,1186,1187,1188,1189,1190,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1226,1227],ivy_backend:[40,41],ivy_bay:1228,ivy_test:43,ivyfcmodel:1224,ivyh:[40,41,42],ivymodul:[200,796],jame:1182,jax:[43,1032,1038,1182,1228],jax_concat:1182,jnp:1182,join:[40,41,938,953,1017,1082],journal:1182,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1182,1199,1208,1228],kaimingnorm:[1190,1194],kalman:1228,kalman_filt:1228,kalman_filter_step:1228,kalman_filter_upd:1228,keep:[40,41,864,909,938,1027,1082,1182,1183,1228],keep_inner_v:[1078,1079,1080],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1078,1079,1080],keepdim:[40,41,412,442,453,454,843,848,851,852,856,857,858,859,860,938,1027,1055,1058,1145,1147,1148,1149,1150,1151,1152,1153],kei:[15,16,17,40,41,42,43,864,876,938,955,1078,1079,1080,1082,1126,1129,1133,1163,1174,1175,1182,1188,1189,1199,1210,1215,1219],kept:[40,41,42,1078,1079,1080],kera:1228,kernel:[1163,1173],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,864,873,874,886,890,896,938,942,962,963,964,992,1082,1126,1130,1211,1212],keyword_color_dict:[40,41,42],kind:[816,817,818,1228],kwarg:[15,16,17,40,41,42,59,63,864,873,886,890,896,938,992,1082,1188,1189,1211,1212],kwarg_stateful_idx:[1211,1212],kwargs_clon:1082,kwargs_dist:1082,kwargs_uni:1082,label:[43,1176,1177,1178,1179],lamb:[1032,1039,1182,1215],lamb_upd:1032,lambda:[1082,1215,1218,1220,1224],lar:[1032,1039,1040,1182,1215],larger:[816,817,938,950],largest:[40,41,816,817,818,938,968],lars_upd:1032,last:[40,41,843,844,847,849,850,854,855,858,859,860,938,941,957,989,1013,1017,1055,1058,1145,1150,1152,1155,1160,1163,1173,1199,1209],later:[40,41,938,949],latest:[1199,1208],layer:[1032,1035,1037,1039,1041,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1180,1181,1182,1190,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222,1228],layer_norm:1180,layernorm:[1182,1213],layerwis:[1032,1040,1215,1218],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1126,1127,1134],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1155,1156,1157],leaky_relu:[788,1155],learn:[856,857,1032,1035,1037,1039,1040,1041,1055,1060,1078,1079,1080,1081,1138,1144,1182,1215,1216,1217,1218,1219,1220,1225,1228],learnabl:[1180,1181,1213,1214],least:[43,843,845],leav:[15,18,19,40,41,1126,1127,1128,1134,1135],left:[40,41,43,851,852,1055,1058,1145,1147,1148,1149,1150,1151,1152,1153,1182],leftmost:[40,41],len:1082,length:[40,41,42,938,941,1004,1014,1025],lenton2021ivi:1182,lenton:1182,less:[40,41,43,88,225,367,496,628,820,821,824,831,833,840,843,848,1082,1138,1142],less_equ:[88,367,496,628,820],less_util_node_str:1082,let:[1225,1228],level:1182,librari:[820,834,835,1182,1224,1228],lightweight:1182,like:[43,1032,1038,1138,1142,1182,1224,1225,1228],likewis:43,limit:[40,41,42,43,816,817,818,938,950,951,952],linalg:[29,1056,1057,1058,1059,1060,1061,1182],line:43,linear0:[1182,1224],linear1:1182,linear2:1224,linear:[938,970,989,1055,1155,1156,1157,1158,1163,1171,1182,1199,1200,1201,1202,1203,1204,1205,1206,1224],linear_algebra:[453,454,455,456,843,844,845,846,847,848],linear_resampl:[138,263,412,546,679,938],linearli:[938,970],link:[43,1182],linspac:[138,263,412,546,679,938,941],list:[15,18,19,40,41,356,357,358,361,810,811,812,815,849,850,858,859,860,864,873,874,883,884,886,887,888,890,893,894,908,938,941,944,946,995,1012,1013,1022,1027,1078,1079,1080,1082,1126,1127,1128,1130,1134,1135,1163,1164,1165,1166,1167,1168,1169,1170,1182,1183,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206],list_join:[40,41,42],list_stack:[40,41],liter:[843,848],littl:1225,load:[40,41],loaded_kwarg:1082,loader:1182,local:43,local_set:[938,978],locat:[43,938,988,1138,1139],log10:[88,367,496,628,820],log1p:[88,367,496,628,820],log2:[88,367,496,628,820],log:[761,820,832,843,846,938,991,1065,1082,1176,1177,1178,1179],logarithm:[820,831,832,833,843,846,1065,1075],logdet:[843,846],logic:[31,820,834,835,858,859,860,1063,1064,1182],logical_and:[324,758,1062],logical_not:[88,225,367,496,628,820],logical_or:[88,324,367,496,628,758,820,1062],logit:[1176,1179],logspac:[138,263,412,546,679,938],look:[43,1225,1228],loop:[1078,1079,1080,1081],loss:[1177,1178,1179,1182,1224],loss_fn:[1182,1224],lot:1225,low:[40,41,460,1138,1140,1142],lower:[40,41,43,810,814,938,994,1138,1142],lower_depth:[1211,1212],lowest:[15,18,19,40,41,1126,1135,1138,1140],lstm:[1163,1173,1182,1199],lstm_updat:[43,1163],machin:[816,817,818,856,857,1055,1060,1138,1144,1182,1225,1228],made:43,mai:[820,830,834,835,854,855,938,941,961,965,1182,1225,1228],main:[810,814,843,844,938,980,1182],mainli:1182,maintain:[43,854,855],make:[43,460,864,1082,1182,1225],maml:[1078,1079,1080],maml_step:1078,manag:[864,1082],manhattan:[843,848],mani:[40,41,43,938,1013,1182],manipulation_funct:[849,850],manner:[15,18,19,40,41,43,1126,1135],manual:[1126,1127,1134,1228],map:[40,41,42,864,873,938,988,1082,1126,1131,1132,1135,1199,1210,1224],map_cont:[40,41],map_nest_at_index:1126,map_nest_at_indic:1126,map_sequ:[40,41],mapper:[864,873,874,1082],mark:43,mask:[1163,1174,1175],master:43,match:[40,41,938,992],match_kwarg:938,math:[33,459,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1082,1182],mathbb:[1055,1061],mathbf:[1055,1061],mathemat:[809,843,848],matmul:[43,112,263,391,520,652,843,938,1228],matplotlib:1225,matric:[810,814,843,844,1163,1172],matrix:[40,41,810,814,843,844,845,938,940,951,993,1055,1056,1057,1058,1059,1060,1061,1163,1172,1199,1209],matrix_norm:[40,41,176,319,453,589,751,1055],matter:1182,max:[40,41,362,816,817,818,938,951,952,963,994,1005,1006,1082,1145,1147,1215,1217],max_batch_s:[40,41],max_chunk_s:[864,908,1082],max_depth:[40,41,864,868,871,878,886,890,896,938,978,1082,1126,1135],max_dev_dim_step_ratio:864,max_freq:[938,970],max_length:[40,41],max_node_dim_step_ratio:1082,max_norm:[40,41,938,951,952],max_split_factor_step_s:[864,1082],max_trust_ratio:[1032,1039,1215,1217],maxim:[1182,1225,1228],maximis:1182,maximum:[40,41,42,679,851,852,864,886,890,896,908,938,950,951,952,970,1032,1039,1082,1126,1135,1145,1147],mayb:[15,18,19],mdi:1082,mean:[40,41,460,864,893,894,895,896,908,938,963,1078,1079,1080,1081,1082,1126,1130,1138,1141,1145,1148,1151,1153,1190,1224,1228],measur:[1163,1174,1199,1210],mech:1182,mechan:[1182,1228],medic:1228,member:43,memori:[864,880,903,908,910,913,1082,1163,1173,1182],mention:43,merg:43,merge_with_upstream:43,meshgrid:[263,412,679,938],messag:[1226,1227],meta:[35,1079,1080,1081,1182],method:[40,41,42,43,460,938,944,955,995,1005,1006,1032,1039,1040,1082,1126,1127,1134,1135,1182,1199,1210,1211,1212,1225],might:[938,961,1228],min:[40,41,125,362,404,533,665,816,817,818,843,848,856,938,963,996,1005,1006,1015,1055,1060,1082,1145,1149],min_bas:[938,1016],min_denomin:[938,1015],min_dev_dim_s:864,min_node_dim_s:1082,min_sf_tune_step:[864,1082],min_unit_dev_tune_step:864,min_unit_node_tune_step:1082,mind:1182,mini:[1180,1181,1213,1214],minimum:[40,41,679,856,857,864,914,918,938,941,943,944,950,975,976,1007,1008,1015,1016,1082,1145,1149],miss:[1215,1219],ml_framework:[938,941,1055,1060],mod:[938,969],mod_depth:[1211,1212],mod_height:[1211,1212],mod_with_top_mod_key_chain:[1211,1212],mode:[40,41,453,455,843,847,862,863,864,893,894,895,896,908,1055,1060,1082,1225],model:[1182,1224],modul:[40,41,42,59,938,997,1082,1182,1183,1185,1186,1187,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1213,1214,1221,1222,1228],moment:[1032,1034,1035,1039,1215,1216,1217],more:[43,843,845,849,850,938,1017,1082,1182,1225,1228],more_util_node_str:1082,most:[40,41,1055,1060,1182,1228],move:[40,41,43,864,909,1082],much:[43,1182,1228],multi:[460,938,997,1163,1174,1199,1210],multi_head_attent:1163,multi_index_nest:1126,multi_map:[40,41],multi_nod:1082,multidev:[864,875,876,877,896],multidevcontain:[40,41],multidevic:[864,873],multidevit:[864,867,870,873,874,878],multidevitem:[864,866,869],multidevnest:[864,868,871],multiheadattent:[1182,1199],multinod:[1082,1086],multinodecontain:1082,multinodeit:1082,multinodeitem:1082,multinodenest:1082,multinomi:[182,328,460,595,772,1138],multipl:[40,41,858,859,860,938,992,1013,1055,1057,1145,1147,1148,1149,1150,1151,1153,1180,1181,1199,1209,1225],multipli:[40,41,938,958,1145,1150],multiprocess:[40,41,42,412,679,864,873,938,1082],must:[40,41,42,43,810,811,812,813,814,815,820,821,822,823,824,825,826,827,829,830,831,833,834,835,838,839,840,841,843,844,845,848,849,850,854,855,856,857,858,859,860,864,893,894,895,896,908,938,941,953,955,957,965,994,996,1006,1017,1065,1069,1072,1082,1138,1143,1215,1219],mutabl:[1126,1128,1135],mutlidevic:[864,873],mutlinod:1082,mw_tm1:[1032,1035,1039],mx_concat:1182,mxn:[810,814,843,844],mxnet:[1182,1228],my_func:43,mymodel:1182,name:[43,862,863,1224],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1225],nan:[40,41,43,809,820,821,822,824,825,826,827,828,831,833,838,839,840,858,859,860,938,979,1028],nativ:[15,17,18,19,40,41,43,864,880,882,891,892,903,910,913,914,919,926,927,1082,1182,1183,1188,1189],native_modul:[1188,1189],native_module_class:[1188,1189],nativearrai:[15,18,19,43,810,813,814,816,817,818,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,864,882,908,909,914,918,924,929,930,938,939,940,941,943,944,945,946,948,950,951,952,953,954,956,957,958,959,962,963,964,965,967,968,969,970,972,973,977,979,980,981,988,989,990,991,993,994,995,996,999,1000,1003,1004,1005,1006,1011,1013,1014,1017,1019,1020,1022,1023,1024,1025,1027,1028,1029,1030,1031,1082,1126,1128,1135],natur:[820,832,843,846,1065,1075,1228],ncdhw:[1163,1168,1169,1199,1204,1205],nchw:[1163,1166,1167,1170,1199,1202,1203,1206],ncw:[1163,1164,1165,1199,1200,1201],ndarrai:[356,357,358,359,360,361,362,364,365,460,938,1023],ndhwc:[1163,1168,1169,1199,1204,1205],nearest:[820,837],need:[43,938,951,952,1163,1165,1167,1169,1182,1199,1201,1203,1205,1228],neg:[40,41,88,225,367,496,628,820,827,843,848,849,850,858,859,860,1145,1150,1152,1155,1157],negative_slop:1190,neither:1082,nest:[15,16,17,18,19,40,41,42,864,886,890,896,938,944,1022,1078,1079,1080,1082,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1211,1212,1215,1216,1217,1218,1219,1220],nested_indices_wher:1126,nested_map:[1082,1126],network:[1163,1172,1182,1183,1185,1199,1211,1212,1228],neural:[1163,1182,1185,1199,1224],never:43,new_node_percent_mem:1082,new_node_util:1082,new_node_utils_kei:1082,new_std:[1180,1181,1213,1214],newli:[43,862,863,938,948,949],newlin:[40,41,42],newshap:[938,948,1004],next:[816,817,1082,1211,1212,1215,1216,1217,1218,1219,1220],nhwc:[1163,1166,1167,1170,1199,1202,1203,1206],node:[40,41,1126,1127,1134],node_clon:1082,node_dist:1082,node_dist_arrai:1082,node_dist_it:1082,node_in:1082,node_mapp:1082,node_str:1082,node_to_str:1082,node_util:1082,nodedistit:1082,nodedistitem:1082,nodedistnest:1082,nodemanag:[1082,1093],nodemapp:1082,nodemappermultiproc:1082,noinspect:[865,915,916,917,1033,1082],non:[40,41,820,834,835,843,848,858,859,860,862,863,914,928,1211,1212,1215,1219,1225],none:[40,41,42,43,59,61,64,356,357,358,359,361,410,412,413,415,417,424,425,426,427,434,435,436,437,438,439,440,441,443,453,454,460,461,810,811,812,813,815,816,817,818,843,848,849,850,851,852,856,857,858,859,860,862,863,864,873,874,880,881,906,907,908,909,914,921,922,923,938,941,944,960,961,966,971,972,973,978,980,982,983,984,985,986,990,991,997,999,1000,1003,1005,1006,1007,1008,1013,1014,1015,1016,1025,1026,1031,1032,1035,1037,1039,1040,1041,1047,1048,1052,1055,1058,1060,1078,1079,1080,1081,1082,1126,1127,1130,1134,1135,1138,1139,1140,1141,1142,1145,1147,1148,1149,1150,1151,1152,1153,1163,1165,1167,1169,1172,1173,1174,1175,1180,1181,1188,1189,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222],norm:[40,41,843,848,938,951,952,1055,1058,1181,1182,1214,1215,1217],normal:[1138,1141,1180,1181,1213,1214],normalized_idx:[1180,1181],normalized_shap:[1213,1214],notat:[40,41,1145,1146],note:[43,1055,1060],noth:[40,41,1225],notimplementederror:1082,now:[40,41,43,864,909,938,939,1082,1182,1199,1210,1211,1212,1224,1225,1228],np_concat:1182,np_finfo:362,ns_tune_step:1082,num:[412,434,435,938,990,991],num_arrai:[40,41],num_arrays_in_memori:938,num_arrays_on_dev:864,num_band:[938,970],num_channel:[1199,1206],num_chunk:1082,num_chunks_floor:1082,num_class:[1138,1139],num_cpu_cor:864,num_gpu:[131,410,864,1082],num_head:[1163,1174,1199,1210],num_kei:[1163,1174,1175],num_lay:[1199,1208],num_or_size_split:[40,41,412,439,938,1013],num_output:1082,num_queri:[1163,1174,1175],num_sampl:[412,433,460,461,938,989,1048,1049,1138,1139],num_task:[1078,1079,1080,1081],number:[40,41,42,809,816,817,818,820,824,843,846,847,858,859,860,862,863,864,900,901,902,914,925,929,930,938,941,950,954,967,970,977,980,989,990,991,994,998,1003,1013,1020,1024,1028,1030,1078,1079,1080,1081,1082,1138,1139,1143,1145,1147,1148,1149,1151,1153,1163,1174,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1225,1228],numer:[43,820,824,827,828,829,834,835,836,843,845,938,975,976,1007,1008,1015,1016,1065,1072,1190],numhead:[1163,1174],numpi:[40,41,43,356,357,358,359,360,361,362,364,365,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,843,847,938,1023,1055,1060,1145,1146,1182,1224,1225,1228],nwc:[1163,1164,1165,1199,1200,1201],obj:[40,41],object:[40,41,42,59,362,816,817,864,914,918,938,941,944,1032,1126,1129,1131,1132,1133,1136,1137,1138,1144,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1211,1212],object_in:[412,415,938,944],observ:1082,obvious:43,occupi:[816,817,818,938,1005,1006],off:[843,844,938,941],offer:1182,offset:[843,844,1180,1181],often:1225,old:[40,41],on_init:[1199,1210,1211,1212],onc:[43,864,908,1082,1138,1139,1182],one:[40,41,43,843,845,848,849,850,851,852,864,893,894,895,896,908,914,920,938,980,992,999,1005,1006,1014,1017,1055,1058,1082,1145,1146,1147,1148,1149,1150,1151,1152,1153,1182,1225,1228],one_hot:[138,412,546,679,938],onearrai:[938,967],ones:[40,41,77,214,356,485,617,810,813,938,980,999,1182],ones_lik:[77,214,356,485,617,810],ongo:43,onli:[40,41,43,460,820,834,835,843,845,849,850,864,1055,1060,1082,1126,1127,1128,1134,1215,1216,1217,1218,1219,1220,1224,1225],onlin:[43,1182],onto:[864,893,894,909,1082,1126,1130,1135],oom:[864,1082],open:[938,941,1138,1142,1182,1228],opencv:1225,oper:[40,41,43,938,947,962,963,964,990,991,1018,1032,1035,1037,1039,1040,1041,1062,1063,1064,1163,1164,1165,1166,1167,1168,1169,1170,1172],operand:[40,41,820,821,822,824,825,826,831,833,838,839,840,1145,1146],oppos:[938,970],optim:[864,1032,1035,1037,1039,1040,1041,1078,1079,1080,1081,1082,1182,1216,1217,1218,1220,1224,1228],optimizer_upd:1032,option:[15,18,19,40,41,42,43,356,357,358,359,361,810,811,812,813,815,843,848,849,850,851,852,856,857,858,859,860,862,863,864,873,874,882,886,887,888,889,890,893,894,895,896,903,906,907,908,909,913,914,919,924,928,937,938,940,941,943,944,951,952,953,958,960,961,970,971,972,973,977,979,980,987,989,990,991,992,995,997,999,1000,1003,1005,1006,1009,1011,1013,1014,1015,1016,1017,1025,1027,1028,1031,1032,1035,1037,1038,1039,1040,1041,1043,1048,1052,1055,1058,1060,1078,1079,1080,1081,1082,1126,1127,1128,1130,1134,1135,1138,1139,1145,1147,1148,1149,1150,1151,1152,1153,1155,1156,1160,1163,1171,1172,1174,1175,1176,1177,1178,1179,1180,1181,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1225],ord:[843,847,848],order:[40,41,42,43,843,848,849,850,854,855,1032,1035,1037,1039,1040,1041,1055,1058,1078,1079,1080,1221,1222],ordered_node_util_kei:1082,org:1228,organ:43,origin:[40,41,42,938,1004,1031,1055,1058],other:[40,41,43,862,863,938,940,941,980,1032,1036,1138,1142,1182,1224,1225,1228],otherwis:[15,16,17,18,19,40,41,820,827,828,843,848,851,852,858,859,860,864,881,914,921,922,923,938,947,1025,1026,1029,1032,1038,1043,1047,1078,1079,1080,1082,1145,1147,1148,1149,1151,1153],our:[43,1182,1228],out:[43,460,810,812,814,815,816,817,818,820,821,822,823,824,825,826,827,828,829,831,832,833,834,835,838,839,840,843,844,845,846,848,849,850,851,852,854,855,858,859,860,938,941,1065,1068,1163,1171,1173,1182,1199,1207],out_feat_dim:[1163,1174],out_featur:[1163,1171,1172],out_i:[820,827,828],outdat:1228,outer:[1078,1079,1080,1081],outer_batch_fn:[1078,1079,1080],outer_batch_shap:[1163,1172],outer_cost_fn:[1078,1079,1080],outer_v:[1078,1079,1080],outlin:1225,output:[40,41,43,810,811,812,813,815,849,850,864,873,874,908,938,941,949,971,980,1003,1020,1032,1036,1065,1069,1082,1138,1140,1141,1142,1163,1165,1167,1169,1171,1173,1174,1175,1182,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210],output_ax:[864,908,1082],output_axi:1082,output_channel:[1199,1200,1201,1202,1203,1204,1205,1208,1209],output_queu:1082,output_shap:[1163,1165,1167,1169,1199,1201,1203,1205],outsid:[938,950],over:[40,41,843,848,858,859,860,1055,1058,1138,1142,1145,1147,1148,1149,1151,1153,1180,1181,1213,1214],overal:1225,overflow:[938,941],overhead:1225,overrid:[938,999,1031],overriden:[1215,1219],overwrit:[40,41,864,908,1082],overwrite_at_key_chain:[40,41],own:[1182,1225,1228],packag:[43,1225],pad:[938,954,970,1030,1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206],pad_width:[412,938,954,1030],page:1182,pair:[1163,1175],parallel:[864,873,874,1082],parallelis:[864,873,874,1082],param:[40,41,42,412,425,426,810,811,813,851,852,856,857,864,908,938,939,972,973,999,1000,1082,1211,1212,1224],paramet:[15,16,17,18,19,40,41,42,43,810,811,813,820,830,836,837,841,843,844,847,856,857,862,863,864,873,874,880,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,903,906,907,908,909,910,913,914,918,919,920,924,925,926,927,928,929,930,937,938,940,941,943,944,945,946,947,948,949,950,951,952,953,954,956,957,958,959,961,962,963,964,965,966,967,968,969,970,971,972,973,977,979,980,981,983,984,985,987,988,989,990,991,992,993,994,995,996,997,1000,1003,1004,1005,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1043,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224],parameter:[1138,1141,1142],pardo:1182,pars:[938,955],part:[810,814,1032,1035,1037,1039,1040,1041,1065,1068,1182,1211,1212,1225],partial:[40,41,43,1211,1212],particl:1228,particular:[43,1228],pass:[40,41,42,43,864,873,908,914,919,938,949,1032,1046,1078,1079,1080,1082,1188,1189,1211,1212,1215,1219,1221,1222],pattern:[40,41,938,962,963,964],peopl:43,per:[864,1082,1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206],percent_used_mem_on_dev:864,percent_used_mem_on_nod:1082,percentag:[864,903,1082],perf_count:1082,perform:[40,41,43,858,859,860,864,938,943,958,962,963,964,983,984,985,989,990,991,1032,1035,1037,1039,1040,1041,1048,1049,1078,1079,1080,1081,1082,1126,1131,1132,1145,1147,1148,1149,1150,1151,1152,1153,1155,1160,1163,1171,1173],period:43,permissable_step:1082,permit:43,permut:[460,938,1019,1025],perpendicular:[938,957],person:[43,1182],physci:1228,pickl:[40,41,1082],pickle_filepath:[40,41],pinv:[319,751,1055],pip:1182,pipelin:1224,pkk:1228,pkkm1:1228,pkm1km1:1228,place:[40,41,43,810,811,812,813,815,864,909,938,967,971,983,984,985,1082,1215,1216,1217,1218,1219,1220],placehold:[43,1126,1135],pleas:[43,460,1055,1060],point:[43,809,810,811,812,815,816,817,820,821,822,824,825,826,831,833,838,839,840,841,843,848,914,929,938,941,1065,1072],popul:[40,41,1138,1139],popular:1228,population_s:[460,461,1138,1139],portabl:[1182,1183],posit:[15,16,17,816,817,820,827,858,859,860,864,886,890,896,938,939,941,967,970,1082,1138,1143,1188,1189],possibi:[40,41],possibl:[43,938,992,1022,1048,1053,1228],post:[1180,1181],post_shap:[40,41],power:[938,975,1007,1016,1190],practic:1182,pre:[864,1082,1182],pre_shap:[40,41],precis:[816,817,820,840],pred:[1176,1177,1178,1179],predict:[1176,1177,1178,1179,1228],prepend:[843,845],preprint:1182,present:[40,41],preserv:[40,41,42,849,850,1032,1043],preserve_typ:[40,41,444,447,1032,1043],press:1182,prevent:[43,1032,1034,1035,1039,1082,1215,1216,1217],prevet:43,previou:[1032,1035,1039],previous:[938,949],prime:1182,print:[40,41,42,864,904,938,1001,1182,1224],print_all_arrays_in_memori:938,print_all_arrays_on_dev:864,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1215,1219],prob:[460,461,1138,1139,1163,1171,1199,1207],probabl:[1138,1139,1163,1171,1199,1207],problem:[43,1228],process:[43,864,873,874,903,913,938,997,1082],process_specif:[864,903,913,1082],prod:[40,41,938,963],produc:[864,873,874,1082],product:[40,41,843,845,938,957,958,993,1145,1146,1163,1174,1175,1199,1210],profil:[131,257,410,539,671,864,1082],progress:43,project:[1182,1224,1225,1228],promot:[820,821,822,823,825,826,831,833,838,839,840,843,845,848,1065,1072],prompt:1182,properti:[40,41,362,864,876,1082,1211,1212,1215,1216,1217,1218,1220],provid:[40,41,43,849,850,851,852,858,859,860,862,863,864,881,914,921,922,923,928,937,938,961,999,1006,1031,1032,1035,1037,1039,1040,1041,1047,1082,1182,1199,1208,1215,1216,1217,1218,1219,1220,1225],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1055,1059],pull:[1182,1183],pure:[40,41,1182,1228],purpos:[43,1228],put:1082,pybroadexcept:1082,pyprotectedmemb:1082,pyshadowingnam:[865,915,916,917,1033,1082],python:[40,41,864,903,913,938,941,1082,1182],pytorch:[1032,1035,1037,1039,1040,1041,1055,1060,1182,1215,1216,1217,1218,1219,1220,1224,1225,1228],pyunresolvedrefer:1082,quadrant:[1065,1069],qualiti:43,queri:[40,41,864,897,907,1082,1163,1174,1175,1199,1210],query_dim:[1199,1210],query_kei:[40,41],queue:[40,41,42,864,873,874,938,1002,1009,1082],queue_class:[864,873,874,1082],queue_load_s:[40,41,42],queue_timeout:[40,41,42,938,1082],quick:[460,1182],quickli:[43,1224],radian:[820,825,838,1065,1066,1067,1069,1076],rai:[1065,1066],rais:[40,41,858,859,860,938,947,975,1007,1014,1016,1026,1082,1211,1212,1215,1219],ram:[864,903,910,913,1082],randint:[182,328,460,595,772,1138],random:[37,40,41,461,1139,1140,1141,1142,1143,1144,1182],random_crop:1048,random_norm:[182,328,460,595,772,1138],random_uniform:[182,328,460,595,772,1138],randomli:[460,1048,1052,1163,1171,1199,1207],rang:[460,938,941,990,991,1065,1069,1082,1182,1224,1228],rank:[843,848,858,859,860,938,954,1027,1030],rate:[1032,1035,1037,1039,1040,1041,1078,1079,1080,1081,1199,1210,1215,1216,1217,1218,1219,1220],rather:[40,41,43,864,908,938,941,987,1032,1038,1082],ratio:[864,1032,1039,1048,1053,1082,1215,1217],raw:[40,41,1055,1060],raw_delta:1082,reach:[43,864,886,890,896,1082,1126,1135],read:[40,41],readi:[1082,1224],real:[1065,1066,1068],realiti:1225,rearrang:[40,41,938,962,964],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1078,1080],receiv:[43,864,873,874,938,942,992,1082,1199,1209],receivess:[864,1082],receivng:[1078,1081],recev:[1078,1079,1080],recognit:1228,recommend:[820,834,835,1182],rectifi:[1155,1157,1158],recurr:[1163,1173],recurrent_bia:[1163,1173],recurrent_kernel:[1163,1173],recurs:[40,41,1126,1127,1128,1134,1135],reduc:[40,41,851,852,858,859,860,864,908,938,963,1055,1060,1082,1145,1147,1148,1149,1150,1151,1152,1153],reduce_max:[40,41,189,333,462,600,779,1145],reduce_mean:[40,41,189,333,462,600,779,1145,1182,1224],reduce_min:[40,41,189,333,462,600,779,1145],reduce_prod:[40,41,189,333,462,600,779,1145],reduce_std:[40,41,333,1145],reduce_sum:[40,41,189,333,462,600,779,1082,1145],reduce_var:[40,41,189,333,462,600,779,1145],reduct:[39,40,41,412,437,438,858,859,860,938,963,1005,1006,1146,1147,1148,1149,1150,1151,1152,1153,1182],refactor:43,refer:[43,820,832,858,859,860,1032,1034,1035,1055,1061,1199,1209,1228],reflect:43,reflected_oper:[0,13,14],regard:[864,1082],regardless:[40,41,862,863],register_paramet:1224,reimplement:1228,rel:[843,844,849,850,854,855,1032,1035,1037,1039,1040,1041],rel_slice_obj:1082,relat:43,relev:[1215,1216,1217,1218,1219,1220],relu:[788,1155,1156,1157,1182,1224],remain:[43,938,1004,1126,1130],remaind:[40,41,938,969,1013],remov:[40,41,43,843,844,845,851,852,938,1014,1078,1079,1080],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,849,850],rep:[938,1020],repeat:[40,41,43,263,679,938,964,1020,1082,1225],repeated_config_check:[864,1082],repeatedli:[1126,1133],repetit:[40,41,938,1003,1020],replac:[40,41,43,460,461,938,950,1005,1006,1138,1139],repo:[43,1182],repositori:43,repres:[43,820,821,822,826,839,841,843,846,914,920,925,1163,1172],represent:[40,41,42,43,809,816,817,818,820,823,864,891,892,914,920,926,927,938,1012,1022,1082],reptil:[1078,1081],reptile_step:1078,request:[1182,1183],requir:[43,820,840,862,863,914,918,938,941,944,1188,1189],resampl:[938,989],reserv:43,reshap:[40,41,460,679,938],reshape_lik:[40,41],respect:[820,823,829,830,835,938,965,1032,1034,1035,1036,1037,1039,1040,1041,1055,1060,1065,1072,1078,1079,1080,1081],respond:43,respons:[43,1082],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,838,839,840,843,844,848,851,852,858,859,860,864,873,938,941,965,1005,1006,1017,1055,1058,1062,1063,1064,1065,1072,1082,1145,1147,1148,1149,1150,1151,1152,1153,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1182],ret:1082,ret_dict:1082,ret_fn:[864,873,874,1082],retain:[1032,1036],retain_grad:[444,445,1032,1036],retreiv:1082,retrn:[938,1012],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1078,1079,1080,1081],return_sequ:[1199,1208],return_st:[1199,1208],rev:[938,961],revers:[40,41,849,850,938,961,1025],review:43,right:[40,41,43],rk_e:1228,robot:1182,ronald:1182,root:[43,820,840],round:[88,225,367,496,628,820,824,840,938,941,1082],row:[938,980,1138,1139],rule:[938,941,1065,1072],run:[43,864,873,1032,1034,1035,1039,1078,1079,1080,1081,1082,1182,1183,1199,1210,1211,1212],safe:[864,873,1082],safety_factor:[864,1082],same:[15,16,17,40,41,43,810,813,814,820,824,837,843,844,847,849,850,851,852,854,855,864,873,874,908,909,914,918,938,939,953,968,969,972,973,999,1005,1006,1017,1031,1032,1038,1043,1065,1068,1078,1079,1080,1082,1145,1146,1163,1164,1165,1166,1167,1168,1169,1170,1182,1199,1200,1201,1202,1203,1204,1205,1206,1224,1228],same_arrai:[40,41],sampl:[938,989,1048,1049,1138,1139,1141,1142,1163,1171,1182,1199,1207],satisfi:[938,944,1055,1057,1061],save:[40,41,938,1010,1021,1048,1050,1211,1212],save_dir:[410,411,864,879,1082],save_weight:[1211,1212],scalar:[843,848,938,950,999,1024,1028],scale:[864,906,907,1032,1040,1082,1163,1171,1174,1175,1180,1181,1199,1207,1210,1215,1218],scaled_dot_product_attent:1163,scatter:[938,999,1005,1006],scatter_flat:[138,263,412,546,679,938],scatter_nd:[138,263,412,546,679,938],scene:[1032,1035,1037,1039,1040,1041],schemat:1182,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[851,852],second:[40,41,820,823,829,830,835,843,844,845,864,895,938,945,957,965,1002,1009,1019,1032,1034,1035,1039,1078,1080,1082,1215,1216,1217],secondli:1228,sector:[820,821,822],see:[59,362,410,411,460,820,823,829,835,843,848,858,859,860,864,876,877,878,879,914,938,941,990,991,1032,1065,1072,1182,1190,1192,1193,1195,1196,1198],seed:[40,41,182,460,772,1138],seed_valu:[40,41,460,1138,1143],seem:1182,seen_set:[938,978],select:[938,944,1014,1225,1228],self:[40,41,59,362,410,411,864,876,877,878,879,914,1032,1082,1182,1190,1192,1193,1195,1196,1198,1215,1219,1224,1228],sent:1082,seper:[43,938,970],seq:[40,41,42,1145,1146,1211,1212],sequenc:[15,16,17,40,41,42,43,460,862,863,864,873,874,883,884,885,886,887,888,889,890,893,894,908,914,918,938,941,944,946,948,953,954,980,992,995,1000,1003,1004,1006,1013,1017,1020,1025,1030,1032,1036,1048,1052,1053,1055,1058,1082,1126,1137,1138,1140,1142,1145,1147,1148,1149,1150,1151,1152,1153,1163,1164,1165,1166,1167,1168,1169,1170,1180,1181,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1208,1211,1212,1213,1214,1215,1219,1221,1222],sequenti:1182,seri:43,set:[15,18,19,40,41,851,852,854,855,864,893,894,906,907,908,938,940,960,980,1007,1008,1009,1010,1032,1035,1037,1038,1039,1040,1041,1055,1058,1082,1126,1127,1134,1136,1137,1138,1139,1143,1145,1147,1148,1149,1150,1151,1152,1153,1182,1199,1208,1215,1216,1217,1218,1219,1220,1225,1228],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:864,set_default_dtyp:914,set_default_float_dtyp:914,set_default_int_dtyp:914,set_default_nod:1082,set_exception_debug_mod:44,set_framework:[40,41,43,59,1082,1182,1224,1225,1228],set_ivy_backend:[40,41],set_min_bas:938,set_min_denomin:938,set_nest_at_index:1126,set_nest_at_indic:1126,set_queue_timeout:938,set_split_factor:[864,1082],set_stat:[1215,1216,1217,1218,1219,1220],set_tmp_dir:938,set_with_grad:1032,setter:1082,sever:1228,sgd:[1182,1215],shape0:1082,shape:[40,41,43,356,357,358,361,412,424,438,460,679,810,811,812,813,814,815,820,837,843,844,845,849,850,851,852,854,855,864,876,914,918,938,939,948,953,954,967,968,969,971,973,977,980,999,1000,1003,1004,1005,1006,1012,1014,1017,1030,1031,1048,1052,1055,1057,1060,1065,1068,1069,1082,1138,1140,1141,1142,1145,1146,1163,1165,1167,1169,1199,1201,1202,1203,1204,1205,1206,1213,1214],shape_slic:[40,41],shape_to_tupl:938,share:[40,41,1182,1225],shift:1082,should:[40,41,42,43,460,810,814,820,821,822,823,824,825,826,827,828,829,831,833,834,835,838,839,840,841,843,844,845,848,851,852,862,863,864,938,948,949,955,999,1004,1032,1035,1037,1039,1040,1041,1065,1072,1082,1145,1146,1182],show:[40,41,1182,1228],show_mod_in_top_mod:[1211,1212],show_structur:[1211,1212],show_sub_contain:[40,41],show_v:[1211,1212],show_v_in_top_v:[1211,1212],shown:[40,41],shp:1082,shuffl:[40,41,182,460,772,1138],shuffle_h5_fil:[40,41],side:43,sigmoid:[788,1155,1182,1224],sign:[843,846],signatur:[43,59,362,410,411,412,444,449,453,457,458,460,864,876,877,878,879,914,1032,1190,1192,1193,1195,1196,1198],signific:1228,similar:[43,1163,1174,1199,1210],similarli:[1055,1060],simpl:[43,938,966,1182,1225,1228],simpler:43,simplest:1225,simpli:[40,41,43,1182,1225,1228],simultan:1182,sin:[88,225,367,496,628,820,938,970,1065,1076,1225],sinco:1225,sine:[820,822,838,839,1065,1067],singl:[40,41,862,863,864,873,874,893,894,895,896,938,1014,1024,1028,1048,1053,1082,1138,1141,1142,1145,1147,1148,1149,1150,1151,1152,1153,1182,1225,1228],singleton:[843,848,858,859,860],singular:[843,847],sinh:[88,225,367,496,628,820],siren:[1182,1190],situat:43,size:[40,41,42,412,437,843,844,847,851,852,858,859,860,864,887,888,889,890,906,907,908,938,941,948,990,991,1005,1013,1048,1052,1055,1058,1082,1138,1139,1141,1142,1145,1147,1148,1149,1150,1151,1152,1153,1199,1200,1201],size_ordered_arrai:[40,41],skew:[1055,1061],skinv:1228,skip:[40,41],slice:[40,41,938,972,973,1082,1126,1133],slice_kei:[40,41],slice_obj:[40,41,1082],slice_via_kei:[40,41],slide:[1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206],slodget:843,slogdet:[112,240,391,520,652],slope:[1155,1157],small:[1176,1177,1178,1179,1180,1181,1182,1213,1214,1225],smaller:[938,950],smallest:[40,41,816,817,818,820,824,938,943],smallest_norm:[362,816,817],softmax:[198,471,788,1155,1163,1174,1175],softplu:[788,1155],solut:43,solv:1228,some:[40,41,43,938,941,1032,1034,1035,1037,1039,1040,1041,1046,1163,1171,1182,1199,1207,1225,1228],some_backend:43,some_namespac:43,someth:[43,1228],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,843,847,855,1082],sort_by_kei:[40,41],sorting_funct:[854,855],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,356,357,358,359,360,361,362,364,365,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,458,459,460,461,810,811,812,813,814,815,816,817,818,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,862,863,864,866,867,868,869,870,871,873,874,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1185,1186,1187,1188,1189,1190,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1226,1227,1228],space:[938,941,970,990,991],spars:[1176,1179],sparse_cross_entropi:1176,spawn:[938,997],special:[43,820,821,822,824,825,826,831,833,838,839,840],specif:[40,41,43,820,834,835,864,906,938,955,962,963,964,997,1078,1079,1080,1081,1082,1138,1144,1182,1211,1212,1224,1225],specifc:[1138,1139],specifi:[40,41,810,811,812,814,815,843,844,848,849,850,851,852,854,855,858,859,860,864,883,884,885,886,887,888,889,890,893,894,898,900,904,907,908,909,914,918,920,938,941,943,944,950,953,954,971,972,973,979,990,991,1017,1027,1030,1055,1058,1082,1126,1131,1132,1136,1137,1145,1146,1147,1148,1149,1150,1151,1152,1153],sphinx:43,split:[40,41,138,263,412,546,679,864,873,887,888,889,890,906,907,908,938,992,1082],split_arg:1082,split_factor:[864,873,1082],split_func_cal:[864,1082],split_siz:1082,spread:[864,896,1082],sqrt:[88,225,367,496,628,820,843,848],squar:[820,840,843,846,938,980,1055,1057],squeez:[138,263,412,546,679,938],stabil:[854,855,938,1015,1016],stabl:[854,855,938,975,976,1007,1008,1015,1016],stable_divid:938,stable_pow:938,stack:[40,41,263,679,810,814,843,844,845,938,1048,1053,1126,1127,1134,1199,1208],stack_imag:[172,315,449,585,747,1048],stacked_dim_s:1082,stage:43,standard:[40,41,816,817,1138,1141,1145,1151,1180,1181,1182,1183,1213,1214],start:[40,41,43,410,411,412,413,434,435,460,864,879,938,941,990,991,1082,1182,1225],starting_index:[40,41],starting_split_factor:[864,1082],state:[1082,1163,1173,1182,1185,1186,1187,1188,1189,1190,1192,1193,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224],statement:1225,static_argnam:[412,417,862,863],static_argnum:[412,417,862,863],statistical_funct:[856,857],std:[460,1138,1141],step:[40,41,412,413,864,938,941,990,991,1032,1034,1035,1037,1039,1040,1041,1078,1079,1080,1081,1082,1182,1215,1216,1217,1218,1219,1220,1224,1228],stephen:1182,stick:1182,still:[40,41,43],stochast:[1215,1220],stop:[40,41,410,411,412,413,434,435,864,879,908,938,941,990,991,1032,1035,1037,1039,1040,1041,1043,1078,1079,1080,1081,1082,1215,1216,1217,1218,1219,1220],stop_gradi:[40,41,310,444,580,741,864,908,1032,1035,1037,1039,1040,1041,1078,1079,1080,1081,1082,1215,1216,1217,1218,1219,1220],stopiter:1082,store:[40,41,938,970,1013,1032,1046,1211,1212],store_var:[1211,1212],str:[15,16,17,40,41,42,43,356,357,358,359,361,362,364,365,810,813,816,817,818,862,863,864,873,874,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,908,914,919,920,925,926,927,928,929,930,937,938,944,960,962,963,964,995,997,1000,1005,1006,1055,1058,1060,1078,1079,1080,1081,1082,1126,1130,1145,1146,1188,1189,1199,1210,1211,1212],str_to_nod:1082,straight:1225,strength:[1182,1228],stride:[1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206],string:[40,41,43,864,880,882,891,892,897,903,909,910,913,914,918,924,926,927,928,937,938,941,944,960,980,1000,1031,1082,1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206,1211,1212],structur:[40,41,42,43,938,955],structural_diff:[40,41],style:43,sub:[40,41,43,843,844,864,887,888,893,894,895,896,938,1013,1078,1079,1080,1081,1082],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1082,sub_mod:[1211,1212],sub_modul:[1221,1222],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1182,1183,1213,1214,1221,1222],subsequ:43,subset:43,substr:[40,41],suffici:[1055,1060],suggest:1182,suitabl:[1048,1053],sum:[40,41,412,437,438,843,848,864,893,894,895,896,908,938,959,963,1005,1006,1082,1145,1146,1152],summat:[40,41,1145,1146],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,119,121,124,126,128,129,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,234,235,236,237,238,241,242,243,244,246,248,251,254,255,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,316,317,318,320,321,322,323,325,326,329,330,331,332,334,335,336,337,338,339,340,341,344,346,347,348,349,350,351,352,357,358,359,360,361,363,364,365,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,392,393,394,395,396,398,400,403,405,407,408,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,445,446,447,448,450,451,452,454,455,456,459,461,463,464,465,466,467,468,469,472,473,475,476,477,478,479,480,481,486,487,488,489,490,492,493,494,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,521,522,523,524,525,527,529,532,534,536,537,540,541,542,543,544,545,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,581,582,583,584,586,587,588,590,591,592,596,597,598,599,601,602,603,604,605,606,607,611,612,613,618,619,620,621,622,624,625,626,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,653,654,655,656,657,659,661,664,666,668,669,672,673,674,675,676,677,678,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,742,743,744,745,746,748,749,750,752,753,754,755,756,757,759,760,762,763,764,765,766,767,768,769,770,771,773,774,775,776,777,778,780,781,782,783,784,785,786,789,790,791,792,793,794,795,797,798,800,801,802,803,804,805,806,811,812,813,814,815,817,818,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,850,852,855,857,859,860,863,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1063,1064,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1177,1178,1179,1181,1182,1186,1187,1189,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1216,1217,1218,1219,1220,1222,1223,1224,1225,1227,1228],supports_inplac:938,suppos:1228,sure:43,svd:[112,240,391,520,652,843],swap:[40,41,938,1019],swapax:[40,41,546,679,938,1228],symmetr:[1055,1061],syntax:[410,412,444,449,453,457,458,460],tab:1182,take:[43,938,989],taken:[43,843,844,1145,1147,1148,1149,1151,1153],tan:[761,1065,1068],tangent:[820,841,1065,1068,1069,1070,1076,1077,1155,1162],tanh:[88,225,367,496,628,788,820,1065,1155],target:[40,41,864,880,883,884,885,886,887,888,889,890,893,894,895,896,909,1082,1182],target_dict:[40,41],task:[43,1078,1079,1080,1081],team:[43,1228],templat:1182,temporari:[938,1010,1021],tensor:[40,41,43,412,437,438,864,882,914,924,938,941,943,948,990,991,994,996,999,1000,1004,1005,1006,1013,1031,1082,1138,1139,1140,1163,1171,1173,1182,1199,1207,1209,1215,1216,1217,1218,1219,1220,1224,1225],tensorflow:[43,1055,1060,1163,1165,1167,1169,1182,1199,1201,1203,1205,1225,1228],term:[40,41,43,1163,1173,1182,1199,1209],termcolor:[40,41,42],termin:[40,41,42,1082],test:[43,820,827,828,858,859,860,914,929,930],test_array_api:43,tf_concat:1182,than:[40,41,43,816,817,820,821,824,831,833,840,843,845,848,849,850,864,908,938,941,950,968,987,994,1014,1017,1032,1038,1082,1138,1142,1182,1225],thei:[40,41,1065,1069,1078,1079,1080,1138,1139,1182,1221,1222,1225],them:[1182,1228],themselv:[1126,1127],therefor:43,thi:[40,41,42,43,820,834,835,843,846,851,852,864,886,890,896,903,908,913,938,941,970,1002,1004,1009,1032,1035,1037,1038,1039,1040,1041,1046,1055,1058,1082,1126,1130,1135,1145,1147,1148,1149,1150,1151,1152,1153,1163,1172,1182,1211,1212,1215,1216,1217,1218,1219,1220,1224,1225,1228],thing:[43,1182],those:[40,41,43,843,847,938,950,1032,1046,1082],though:43,thought:43,threshold:[938,994,996],through:[40,41,43],tick:43,tickbox:43,tile:[263,546,679,938],time:[43,938,1020,1032,1035,1039,1078,1079,1080,1081,1082,1138,1139,1163,1173,1199,1210,1211,1212,1228],timeout:[40,41,42,864,873,874,938,1002,1009,1082],timestep:[1163,1173,1199,1208],titl:[43,1182],tmp_dir:938,tmp_dr:[938,1010],to_appli:[40,41],to_clon:[864,1082],to_dev:[40,41,131,257,410,539,671,864],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[864,1082],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1182],to_ivy_modul:[200,796,1182,1188],to_json:[40,41],to_kv_fn:[1163,1174],to_kv_v:[1163,1174],to_list:[40,41,412,679,938],to_multi_dev:[40,41],to_mut:[1126,1128,1135],to_n:[15,40,41,1182],to_nod:1082,to_numpi:[40,41,412,679,938,1182,1224],to_out_fn:[1163,1174],to_out_v:[1163,1174],to_q_fn:[1163,1174],to_q_v:[1163,1174],to_raw:[40,41],to_scalar:[412,679,938],todo:[1082,1182,1183],togeth:[40,41,1221,1222],tool:[1182,1225],top_mod:[1211,1212],topic:1228,torch:[43,862,863,1182,1224,1225,1228],torch_concat:1182,torchfcmodel:1224,total:[40,41,42,864,910,1082],total_mem_on_dev:864,total_mem_on_nod:1082,tpu:[864,911,1082],tpu_is_avail:[410,539,671,864,1082],trace:[40,41,938,987],track:[43,864,1082,1126,1135,1211,1212],track_submod_call_ord:[1211,1212],track_submod_ret:[1211,1212],trail:[1213,1214],train:[1032,1034,1035,1039,1182,1183],trainabl:[1032,1038,1182,1183,1188,1189,1211,1212,1221],trainer:1182,tran:1228,transform:[1163,1171,1172],transpos:[40,41,138,263,412,679,864,895,938,1082,1163,1165,1167,1169,1199,1201,1203,1205],travers:[15,18,19,40,41,1126,1135],treat:[40,41,862,863],tri:[40,41],triangular:[810,814],trigonometr:[1065,1066,1068],tril:[77,214,356,485,617,810],trim_kei:[40,41],trust:[1032,1039,1215,1217],truth:[820,829,830,938,965,1062,1063,1064],try_else_non:938,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[864,1082],tune_dev_alloc:864,tune_dev_split:864,tune_node_alloc:1082,tune_node_split:1082,tune_step:[864,1082],tupl:[15,16,17,18,19,40,41,43,356,357,358,361,810,811,812,815,843,847,848,849,850,856,857,858,859,860,862,863,938,954,970,971,1012,1030,1082,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1140,1145,1147,1148,1149,1150,1151,1152,1153],tutori:43,two:[40,41,810,814,843,844,845,846,847,938,941,945,957,993,1019,1055,1058],type:[15,18,40,41,42,43,59,364,365,410,411,810,811,812,813,814,815,817,818,820,821,822,823,824,825,826,827,828,829,830,831,833,834,835,837,838,839,840,841,843,844,845,848,849,850,854,855,858,859,860,864,876,877,878,879,891,892,896,908,914,918,919,920,924,925,926,927,928,929,930,937,938,939,941,944,953,955,965,968,969,971,980,987,999,1000,1018,1028,1031,1032,1038,1043,1065,1072,1082,1182,1190,1192,1193,1195,1196,1198,1211,1212,1225],types_to_iteratively_nest:[40,41,42],uint8:[1048,1050,1054],uint8_img_to_float_img:1048,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[820,823],underwai:43,unecessari:43,unfairli:43,unif:1082,unifi:[40,41,864,893,894,895,896,908,1082,1182],uniform:[40,41,1138,1139,1141,1142,1190,1192,1193,1196,1197],uniformli:[1138,1140,1142],unify_arrai:1082,unify_it:1082,unify_nest:1082,uniniti:[810,811],union:[15,18,19,40,41,43,356,357,358,359,361,362,364,365,810,811,812,813,814,815,816,817,818,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,862,863,864,882,887,888,889,890,908,909,914,918,919,920,924,925,926,927,928,929,930,937,938,939,940,941,943,944,945,946,948,950,951,952,953,954,956,957,958,959,962,963,964,965,967,968,969,970,971,972,973,977,979,980,981,988,989,990,991,993,994,995,996,999,1000,1003,1004,1005,1006,1011,1012,1013,1014,1017,1019,1020,1022,1023,1024,1025,1027,1028,1029,1030,1031,1082,1126,1127,1128,1134,1135],uniqu:[864,873,874,1078,1079,1080,1081,1082,1126,1130],unique_kwarg:1082,unit:[43,864,1065,1066,1067,1082,1155,1156,1157,1158],unitari:[843,847],unless:[938,999,1031],unlik:[864,1082],unnorm:[1138,1139],unpack:[938,1027],unrol:[1163,1173],unset:1225,unset_debug_mod:44,unset_default_devic:864,unset_default_dtyp:914,unset_default_float_dtyp:914,unset_default_int_dtyp:914,unset_framework:[59,1225],unset_with_grad:1032,unstack:[40,41,138,263,412,546,679,938],until:43,unus:[862,863],updat:[40,41,412,437,438,864,873,938,985,1005,1006,1032,1034,1035,1037,1039,1040,1041,1078,1079,1080,1082,1126,1131,1132,1136,1137,1163,1173,1182,1183,1188,1189,1215,1216,1217,1218,1219,1220,1225,1228],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1138,1142],upper_depth:[1211,1212],upstream:43,usabl:[1182,1228],usag:[864,908,1082],use:[40,41,42,43,460,864,873,874,899,911,938,1003,1015,1016,1055,1060,1082,1163,1174,1180,1181,1182,1213,1214,1225,1228],used:[40,41,43,460,843,844,864,873,903,906,907,913,914,925,938,975,976,992,1005,1006,1007,1008,1031,1032,1039,1040,1055,1058,1078,1079,1080,1081,1082,1126,1135,1199,1210,1215,1217,1218,1224,1225],used_dev:[864,873],used_mem_on_dev:864,used_mem_on_nod:1082,used_node_str:1082,used_node_strs_dict:1082,useful:[40,41,864,908,1082,1163,1172,1182,1225],user:[1182,1199,1210,1211,1212,1225,1228],uses:1182,using:[40,41,43,1032,1034,1035,1126,1129,1133,1145,1146,1163,1171,1175,1182,1199,1207,1224,1225,1228],util:[864,897,1082],utility_funct:[858,859,860],v_with_top_v_key_chain:[1211,1212],val:[40,41,412,429,430,431,938,983,984,985,1007,1008],valid:[858,859,860,914,919,938,1015,1016,1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206],valid_dtyp:914,valu:[40,41,412,820,824,829,830,837,843,846,847,848,851,852,854,855,856,857,864,876,907,908,938,939,941,943,950,951,952,954,955,961,965,970,971,972,973,988,990,991,994,996,1002,1003,1004,1005,1006,1007,1008,1009,1025,1028,1029,1030,1032,1036,1039,1048,1054,1062,1063,1064,1065,1073,1074,1075,1078,1079,1080,1082,1126,1130,1131,1132,1136,1137,1138,1141,1142,1145,1147,1149,1163,1174,1175,1180,1181,1199,1210,1213,1214,1215,1217],value_is_nan:938,vanilla:[1078,1080],var_shap:1190,variabl:[15,16,17,18,19,40,41,310,444,580,741,938,947,983,984,985,986,987,1018,1032,1035,1036,1037,1038,1039,1040,1041,1043,1046,1078,1079,1080,1081,1163,1174,1180,1181,1188,1189,1190,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222],variable_data:[444,741,1032],varianc:[40,41,1145,1153,1228],varieti:1225,variou:[43,1182],vector:[40,41,453,456,843,845,847,848,938,952,957,1055,1061,1163,1172,1199,1209],vector_norm:[40,41,112,240,391,520,652,843],vector_to_skew_symmetric_matrix:[176,319,453,589,751,1055],verbos:1227,veri:[43,1182],verifi:43,via:[1126,1127,1134,1225],view:[1048,1053],vision:1182,visual:1225,volum:[1163,1168],vw_tm1:[1032,1035,1039],wai:[1225,1228],wait:[40,41,42,43],want:[43,1182,1225,1228],warn:[59,66,67,68,69,70],warp:[449,450,1048,1049],watch:1224,websit:43,weight:[1032,1034,1035,1037,1039,1040,1041,1163,1172,1173,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1211,1212,1215,1217,1218],weight_initi:[1199,1200,1201,1202,1203,1204,1205,1206,1208,1209],weights_path:[1211,1212],well:[40,41,938,979],were:[40,41,1082],what:[43,1182],when:[40,41,42,43,843,847,864,938,949,1016,1029,1082,1182,1211,1212,1225,1228],where:[40,41,43,263,412,679,820,832,843,847,858,859,860,938,941,948,950,954,967,981,988,999,1030,1126,1127,1134,1138,1139],wherea:43,wherebi:[1126,1135],whether:[15,18,19,40,41,42,820,828,858,859,860,862,863,864,882,895,899,903,908,911,913,914,924,928,929,930,937,938,940,945,946,958,961,966,970,977,979,982,986,987,992,1011,1018,1027,1028,1032,1035,1036,1037,1038,1039,1040,1041,1043,1078,1079,1080,1081,1082,1126,1127,1128,1130,1134,1135,1138,1139,1155,1156,1163,1171,1182,1188,1189,1199,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220],which:[40,41,42,43,460,810,811,812,813,814,815,816,817,818,843,844,848,849,850,851,852,854,855,856,857,858,859,860,862,863,864,873,874,882,887,888,889,890,893,894,895,896,898,900,904,906,907,908,914,919,924,928,937,938,941,944,953,955,957,958,959,961,971,972,973,974,980,981,989,990,991,998,999,1000,1001,1003,1005,1006,1013,1017,1027,1029,1031,1032,1035,1036,1037,1039,1040,1041,1043,1045,1046,1048,1050,1055,1058,1065,1069,1082,1126,1130,1131,1132,1136,1137,1138,1139,1140,1141,1142,1145,1147,1148,1149,1150,1151,1152,1153,1155,1160,1163,1174,1175,1182,1188,1189,1199,1200,1201,1202,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1221,1222,1224,1225],whilst:43,whitespac:[40,41,42],who:43,whose:[810,814,820,821,822,825,826,838,839,841,843,844,849,850,938,944,949,1145,1146,1147,1148,1149,1151,1153],why:[1182,1183],width:[1048,1053],wiki:1228,wikipedia:1228,window:[1048,1053,1163,1164,1165,1166,1167,1168,1169,1170,1199,1200,1201,1202,1203,1204,1205,1206],wise:[40,41,820,823,829,830,834,835,837,938,950,965,968,969,994,996,1032,1035,1037,1039,1041,1062,1063,1064,1065,1066,1067,1068,1069,1072,1073,1074,1075,1076,1155,1156,1157,1158,1159,1160,1161,1162],wish:1225,with_bia:[1199,1209],with_cal:[938,961],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1032,1042],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1082,with_partial_v:[1211,1212],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,412,439,938,1013,1082],with_to_kv_fn:[1199,1210],with_to_out_fn:[1199,1210],with_to_q_fn:[1199,1210],within:[15,18,19,43,843,847,938,941,1138,1142],without:[40,41,43,938,1002,1004,1009,1126,1128,1225],wonder:1182,word:[15,16,17,938,941,1138,1142,1188,1189],work:[43,1224],worker:[864,873,874,1082],worker_class:[864,873,874,1082],worker_kwarg:1082,would:[43,1155,1160,1182,1225,1228],wrap:[15,40,41,42,43,410,412,444,449,453,457,458,460,938,949,1032,1046,1182],write:[40,41,43,1182,1183,1228],written:[43,1182,1228],ws_new:[1032,1035,1037,1039,1040,1041],x1_i:[820,823,829,830,835,938,965,1065,1072],x2_i:[820,823,829,830,835,938,965,1065,1072],x_feat_dim:[1163,1174],x_i:[820,821,822,824,825,826,827,828,831,833,834,838,839,840,841],x_in:[1182,1224],x_inv:[1055,1057],x_max:[412,938,950],x_min:[412,938,950],x_sub:1082,xkk:1228,xkkm1:1228,xkm1km1:1228,xs0:1082,xs_t:1082,year:[1182,1228],yet:[1126,1135,1228],yield:[938,1029],you:[43,1182,1224,1225,1228],your:[1182,1183,1224,1225,1228],your_awesome_project:1225,yourself:[43,1182],yourslef:43,youtub:43,zero:[40,41,77,214,356,485,617,810,811,814,820,834,835,843,845,848,858,859,860,938,954,999,1005,1006,1030,1031,1032,1034,1035,1039,1040,1163,1171,1182,1190,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1215,1216,1217,1218],zero_pad:[263,412,546,679,938],zeros_lik:[138,263,412,546,679,938],zip:1082,zk_e:1228},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","round","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","round","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","round","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","round","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","round","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","round","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":961,"function":[77,83,88,111,118,120,122,123,125,127,214,220,225,239,245,247,249,250,252,253,356,362,367,390,397,399,401,402,404,406,485,491,496,519,526,528,530,531,533,535,617,623,628,651,658,660,662,663,665,667,810,816,820,842,849,851,853,854,856,858],Ones:1195,Using:1225,abs:[264,547,680,939],aco:[762,1066],acosh:[89,226,368,497,629,821],activ:[198,343,471,609,788,1155,1185],adam:1216,adam_step:1034,adam_upd:1035,algebra:[112,176,240,319,391,453,520,589,652,751,843],all:[128,254,407,536,668,859],all_equ:940,all_nested_indic:1127,ani:[129,255,408,537,669,860],api:[0,43,75,212,354,483,615,808],arang:[139,265,413,548,681,941],arg_nam:942,argmax:[121,248,400,529,661,852],argmin:[140,414,549,682,943],args_to_ivi:16,args_to_n:17,argsort:[124,251,403,532,664,855],arithmet:1,arrai:[0,3,43,75,141,212,266,354,415,483,550,615,683,808,944],array_equ:[267,684,945],arrays_equ:946,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[763,1067],asinh:[90,369,498,630,822],assert_supports_inplac:947,atan2:[765,1069],atan:[764,1068],atanh:[766,1070],attribut:5,backend:[43,73],bilinear_resampl:[173,316,450,586,748,1049],binary_cross_entropi:1177,bitwis:7,bitwise_and:[91,227,370,499,631,823],broadcast_to:[268,685,948],builder:51,cache_fn:949,cast:[142,269,416,551,686,918],ceil:[92,228,371,500,632,824],choleski:[752,1056],choose_random_framework:61,citat:1182,clear_framework_stack:62,clear_mem_on_dev:[673,880],clip:[270,687,950],clip_matrix_norm:951,clip_vector_norm:952,clone:1097,clone_arrai:1098,clone_it:1099,clone_nest:1100,clonedit:1084,cloneditem:1083,clonednest:1085,closest_valid_dtyp:919,code:1228,comparison:9,compil:[271,417,688,862,863],concaten:[143,272,418,552,689,953],constant:[76,213,355,484,616,809],constant_pad:[273,553,690,954],contain:[40,41],container_typ:[691,955],content:1182,contribut:43,conv1d:[204,346,475,800,1164,1200],conv1d_transpos:[205,347,476,801,1165],conv1dtranspos:1201,conv2d:[206,348,477,611,802,1166,1202],conv2d_transpos:[207,349,478,803,1167],conv2dtranspos:1203,conv3d:[208,350,479,612,804,1168,1204],conv3d_transpos:[209,351,480,805,1169],conv3dtranspos:1205,convers:15,convert:[200,796,1188],convert_dtyp:920,copy_arrai:[692,956],copy_nest:1128,core:[130,256,409,538,670,861],cos:[93,372,501,633,825],cosh:[94,373,502,634,767,826,1071],cprint:1227,creat:43,creation:[77,214,356,485,617,810],cross:[274,693,957],cross_entropi:1178,cumprod:[144,275,419,694,958],cumsum:[695,959],current_framework:63,current_framework_str:[696,960],data:[83,87,220,224,362,366,491,495,623,627,816,819],debug_mod:45,debugg:44,default_devic:881,default_dtyp:921,default_float_dtyp:922,default_int_dtyp:923,default_nod:1101,depthwise_conv2d:[210,352,481,613,806,1170],depthwiseconv2d:1206,design:43,dev:[133,259,541,674,882],dev_clon:883,dev_clone_arrai:884,dev_clone_it:885,dev_clone_nest:886,dev_dist:887,dev_dist_arrai:888,dev_dist_it:889,dev_dist_nest:890,dev_from_str:[134,260,542,675,891],dev_to_str:[135,261,543,676,892],dev_unifi:893,dev_unify_arrai:894,dev_unify_it:895,dev_unify_nest:896,dev_util:897,devclonedit:867,devcloneditem:866,devclonednest:868,devdistit:870,devdistitem:869,devdistnest:871,devic:[20,131,257,410,539,671,864],devmapp:873,devmappermultiproc:874,diagon:[113,241,392,521,653,844],distribute_nest:1102,divid:1072,document:1182,dropout:[1171,1207],dtype:[145,276,420,554,697,914,924],dtype_bit:[146,277,421,555,698,925],dtype_from_str:[147,278,422,556,699,926],dtype_to_str:[148,279,423,557,700,927],ecosystem:52,einops_rearrang:962,einops_reduc:963,einops_repeat:964,einsum:[190,334,463,601,780,1146],elementwis:[88,225,367,496,628,820],empti:[78,215,357,486,618,811],equal:[95,374,503,635,965],erf:[459,768,1073],execute_with_gradi:[170,311,445,581,742,1036],exist:966,exp:[769,1074],expand_dim:[280,701,967],finfo:[85,222,364,493,625,817],firstlayersiren:1192,flip:[119,246,398,527,659,850],float_img_to_uint8_img:1050,floor:[281,702,968],floormod:[282,703,969],fomaml_step:1079,fork:43,fourier_encod:970,framework:59,full:[149,283,424,558,704,971],func:72,gather:[150,284,425,559,705,972],gather_nd:[151,285,426,560,706,973],geglu:1186,gelu:[344,472,789,1156,1187],gener:[22,138,263,412,546,679,938],get_all_arrays_in_memori:974,get_all_arrays_on_dev:898,get_framework:64,get_min_bas:975,get_min_denomin:976,get_num_dim:[707,977],get_referrers_recurs:978,glorotuniform:1193,gpu_is_avail:[899,1103],gradient:[24,169,310,444,580,741,1032],gradient_descent_upd:1037,gradient_imag:[174,317,451,587,749,1051],gym:53,handler:59,has_nan:979,ident:[152,286,427,561,708,980],iinfo:[86,223,365,494,626,818],imag:[26,172,315,449,585,747,1048],index_nest:1129,indices_wher:[153,287,428,709,981],initi:1190,inplac:11,inplace_arrays_support:982,inplace_decr:[154,288,429,562,710,983],inplace_incr:[155,289,430,563,711,984],inplace_upd:[156,290,431,564,712,985],inplace_variables_support:986,inv:[753,1057],invalid_dtyp:928,is_arrai:[157,291,432,565,713,987],is_float_dtyp:929,is_int_dtyp:930,is_vari:[171,312,446,582,743,1038],isfinit:[96,229,375,504,636,827],isinf:[292,566,714,988],isnan:[97,230,376,505,637,828],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,807,1224,1225,1228],ivymodul:[201,797],jax:74,keep:43,lamb:1217,lamb_upd:1039,lar:1218,lars_upd:1040,layer:[203,345,474,610,799,1163,1199],layer_norm:1181,layernorm:1214,leaky_relu:[790,1157],less:[98,231,377,506,638,829],less_equ:[99,378,507,639,830],linalg:[28,1055],linear:[112,176,240,319,391,453,520,589,652,751,843,1172,1209],linear_resampl:[158,293,433,567,715,989],linspac:[159,294,434,568,716,990],list:43,log10:[100,379,508,640,831],log1p:[101,380,509,641,832],log2:[102,381,510,642,833],log:[770,1075],logic:[30,180,324,457,593,758,1062],logical_and:[325,759,1063],logical_not:[103,232,382,511,643,834],logical_or:[104,326,383,512,644,760,835,1064],logspac:[160,295,435,569,717,991],loss:1176,lstm:1208,lstm_updat:1173,maml_step:1080,manipul:[118,245,397,526,658,849],map:1130,map_nest_at_index:1131,map_nest_at_indic:1132,match_kwarg:992,math:[32,181,327,458,594,761,1065],matmul:[114,296,393,522,654,845,993],matrix_norm:[177,320,454,590,754,1058],maximum:[718,994],mech:54,memori:55,meshgrid:[297,719,995],meta:[34,1078],method:[111,239,390,519,651,842],min:[126,405,534,666,857],minimum:[720,996],model:56,modul:[1211,1212,1224],multi:1082,multi_head_attent:1174,multi_index_nest:1133,multidevcontain:42,multidevit:877,multidevitem:876,multidevnest:878,multiheadattent:1210,multinodeit:1088,multinodeitem:1087,multinodenest:1089,multinomi:[183,329,461,596,773,1139],multiprocess:[721,997],mxnet:211,nativ:1224,neg:[105,233,384,513,645,836],nest:1126,nested_indices_wher:1134,nested_map:1135,network:1224,next:1182,node:[1082,1104],node_dist:1105,node_dist_arrai:1106,node_dist_it:1107,node_str:1108,node_to_str:1109,node_util:1110,nodedistit:1091,nodedistitem:1090,nodedistnest:1092,nodemapp:1094,nodemappermultiproc:1095,norm:[1180,1213],num_arrays_in_memori:998,num_arrays_on_dev:900,num_cpu_cor:901,num_gpu:[136,902,1111],numpi:353,nutshel:1182,one_hot:[161,436,570,722,999],ones:[79,216,358,487,619,812,1000],ones_lik:[80,217,359,488,620,813],oper:[1,3,7,9,11,13],optim:[1215,1219],optimizer_upd:1041,overview:1182,percent_used_mem_on_dev:903,percent_used_mem_on_nod:1112,pinv:[321,755,1059],portabl:1228,print_all_arrays_in_memori:1001,print_all_arrays_on_dev:904,profil:[132,258,411,540,672,879,1096],pull:43,queue_timeout:1002,randint:[184,330,597,774,1140],random:[36,182,328,460,595,772,1138],random_crop:1052,random_norm:[185,331,598,775,1141],random_uniform:[186,332,599,776,1142],reduce_max:[191,335,464,602,781,1147],reduce_mean:[192,336,465,603,782,1148],reduce_min:[193,337,466,604,783,1149],reduce_prod:[194,338,467,605,784,1150],reduce_std:[339,1151],reduce_sum:[195,340,468,606,785,1152],reduce_var:[196,341,469,607,786,1153],reduct:[38,189,333,462,600,779,1145],reflect:13,relu:[791,1158],repeat:[298,723,1003],reptile_step:1081,request:43,reshap:[724,1004],robot:57,round:[106,234,385,514,646,837],run:1225,scaled_dot_product_attent:1175,scatter_flat:[162,299,437,571,725,1005],scatter_nd:[163,300,438,572,726,1006],search:[120,247,399,528,660,851],seed:[187,777,1143],sequenti:[1221,1222],set:[122,249,401,530,662,853],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:905,set_default_dtyp:931,set_default_float_dtyp:932,set_default_int_dtyp:933,set_default_nod:1113,set_exception_debug_mod:48,set_framework:65,set_min_bas:1007,set_min_denomin:1008,set_nest_at_index:1136,set_nest_at_indic:1137,set_queue_timeout:1009,set_split_factor:[906,1114],set_tmp_dir:1010,set_with_grad:1042,sgd:1220,shape:[727,1011],shape_to_tupl:1012,shuffl:[188,778,1144],sigmoid:[792,1159],signatur:[111,239,390,519,651,842],sin:[107,235,386,515,647,838],sinh:[108,236,387,516,648,839],siren:1196,slodget:846,slogdet:[115,242,394,523,655],softmax:[199,473,793,1160],softplu:[794,1161],sort:[123,250,402,531,663,854],sparse_cross_entropi:1179,split:[164,301,439,573,728,1013],split_factor:[907,1115],split_func_cal:[908,1116],sqrt:[109,237,388,517,649,840],squeez:[165,302,440,574,729,1014],stable_divid:1015,stable_pow:1016,stack:[303,730,1017],stack_imag:[175,318,452,588,750,1053],standard:43,statist:[125,252,404,533,665,856],stop_gradi:[313,447,583,744,1043],str_to_nod:1117,submodul:43,supports_inplac:1018,svd:[116,243,395,524,656,847],swapax:[575,731,1019],tan:[771,1076],tanh:[110,238,389,518,650,795,841,1077,1162],tensorflow:482,tile:[304,576,732,1020],tmp_dir:1021,to_dev:[137,262,544,677,909],to_ivi:18,to_ivy_modul:[202,798,1189],to_list:[733,1022],to_n:19,to_nod:1118,to_numpi:[734,1023],to_scalar:[735,1024],todo:43,torch:614,total_mem_on_dev:910,total_mem_on_nod:1119,tpu_is_avail:[545,678,911,1120],train:1224,trainabl:1224,transpos:[166,305,441,736,1025],tree:1182,tril:[81,218,360,489,621,814],try_else_non:1026,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,220,224,362,366,491,495,623,627,816,819],uint8_img_to_float_img:1054,unifi:1121,unify_arrai:1122,unify_it:1123,unify_nest:1124,unset_debug_mod:49,unset_default_devic:912,unset_default_dtyp:934,unset_default_float_dtyp:935,unset_default_int_dtyp:936,unset_framework:71,unset_with_grad:1044,unstack:[167,306,442,577,737,1027],updat:43,used_mem_on_dev:913,used_mem_on_nod:1125,util:[127,253,406,535,667,858],valid_dtyp:937,value_is_nan:1028,variabl:[314,448,584,745,1045],variable_data:[746,1046],vector_norm:[117,244,396,525,657,848],vector_to_skew_symmetric_matrix:[179,323,456,592,757,1061],verbos:1226,vision:58,where:[307,738,1029,1182],why:1228,with_grad:1047,wrapper:72,write:1225,your:43,zero:[82,219,361,490,622,815,1198],zero_pad:[308,578,739,1030],zeros_lik:[168,309,443,579,740,1031]}})