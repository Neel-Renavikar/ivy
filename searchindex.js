Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/round","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/round","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/round","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/round","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/round","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/round","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/round.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/round.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/round.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/round.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/round.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/round.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[801,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[352,0,0,"-"],creation_functions:[353,0,0,"-"],data_type_functions:[359,0,0,"-"],data_types:[363,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[354,2,1,""],ones:[355,2,1,""],ones_like:[356,2,1,""],tril:[357,2,1,""],zeros:[358,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[359,1,1,""],finfo:[361,2,1,""],iinfo:[362,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[359,3,1,""],bits:[359,3,1,""],eps:[359,3,1,""],max:[359,3,1,""],min:[359,3,1,""],smallest_normal:[359,3,1,""]},"ivy.functional.backends.numpy.core":{device:[405,0,0,"-"],general:[407,0,0,"-"],gradients:[439,0,0,"-"],image:[444,0,0,"-"],linear_algebra:[448,0,0,"-"],logic:[452,0,0,"-"],math:[453,0,0,"-"],random:[455,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[406,1,1,""],clear_mem_on_dev:[405,2,1,""],dev:[405,2,1,""],dev_from_str:[405,2,1,""],dev_to_str:[405,2,1,""],gpu_is_available:[405,2,1,""],num_gpus:[405,2,1,""],to_dev:[405,2,1,""],tpu_is_available:[405,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[406,3,1,""],start:[406,3,1,""],stop:[406,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[407,2,1,""],arange:[408,2,1,""],argmin:[409,2,1,""],array:[410,2,1,""],asarray:[407,2,1,""],astype:[407,2,1,""],cast:[411,2,1,""],clip:[407,2,1,""],compile:[412,2,1,""],concatenate:[413,2,1,""],constant_pad:[407,2,1,""],container_types:[407,2,1,""],copy_array:[407,2,1,""],cumprod:[414,2,1,""],current_framework_str:[407,2,1,""],dtype:[415,2,1,""],dtype_bits:[416,2,1,""],dtype_from_str:[417,2,1,""],dtype_to_str:[418,2,1,""],floor:[407,2,1,""],floormod:[407,2,1,""],full:[419,2,1,""],gather:[420,2,1,""],gather_nd:[421,2,1,""],get_num_dims:[407,2,1,""],identity:[422,2,1,""],indices_where:[423,2,1,""],inplace_arrays_supported:[407,2,1,""],inplace_decrement:[424,2,1,""],inplace_increment:[425,2,1,""],inplace_update:[426,2,1,""],inplace_variables_supported:[407,2,1,""],is_array:[427,2,1,""],linear_resample:[428,2,1,""],linspace:[429,2,1,""],logspace:[430,2,1,""],matmul:[407,2,1,""],meshgrid:[407,2,1,""],multiprocessing:[407,2,1,""],one_hot:[431,2,1,""],scatter_flat:[432,2,1,""],scatter_nd:[433,2,1,""],shape:[407,2,1,""],split:[434,2,1,""],squeeze:[435,2,1,""],to_list:[407,2,1,""],to_numpy:[407,2,1,""],to_scalar:[407,2,1,""],transpose:[436,2,1,""],unstack:[437,2,1,""],where:[407,2,1,""],zero_pad:[407,2,1,""],zeros_like:[438,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[440,2,1,""],is_variable:[441,2,1,""],stop_gradient:[442,2,1,""],variable:[443,2,1,""],variable_data:[439,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[445,2,1,""],gradient_image:[446,2,1,""],stack_images:[447,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[449,2,1,""],qr:[450,2,1,""],vector_to_skew_symmetric_matrix:[451,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[454,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[456,2,1,""],randint:[455,2,1,""],random_normal:[455,2,1,""],random_uniform:[455,2,1,""],seed:[455,2,1,""],shuffle:[455,2,1,""]},"ivy.functional.ivy":{array_api:[802,0,0,"-"],core:[853,0,0,"-"],nn:[1147,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[803,0,0,"-"],creation_functions:[804,0,0,"-"],data_type_functions:[810,0,0,"-"],data_types:[813,0,0,"-"],elementwise_functions:[814,0,0,"-"],function_and_method_signatures:[835,0,0,"-"],linear_algebra:[836,0,0,"-"],manipulation_functions:[841,0,0,"-"],searching_functions:[843,0,0,"-"],set_functions:[845,0,0,"-"],sorting_functions:[846,0,0,"-"],statistical_functions:[848,0,0,"-"],utility_functions:[850,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[803,4,1,""],nan:[803,4,1,""],pi:[803,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[805,2,1,""],ones:[806,2,1,""],ones_like:[807,2,1,""],tril:[808,2,1,""],zeros:[809,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[811,2,1,""],iinfo:[812,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[815,2,1,""],asinh:[816,2,1,""],bitwise_and:[817,2,1,""],ceil:[818,2,1,""],cos:[819,2,1,""],cosh:[820,2,1,""],isfinite:[821,2,1,""],isnan:[822,2,1,""],less:[823,2,1,""],less_equal:[824,2,1,""],log10:[825,2,1,""],log1p:[826,2,1,""],log2:[827,2,1,""],logical_not:[828,2,1,""],logical_or:[829,2,1,""],negative:[830,2,1,""],round:[831,2,1,""],sin:[832,2,1,""],sqrt:[833,2,1,""],tanh:[834,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[837,2,1,""],slodget:[838,2,1,""],svd:[839,2,1,""],vector_norm:[840,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[842,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[844,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[847,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[849,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[851,2,1,""],any:[852,2,1,""]},"ivy.functional.ivy.core":{compilation:[854,0,0,"-"],device:[856,0,0,"-"],dtype:[906,0,0,"-"],general:[930,0,0,"-"],gradients:[1024,0,0,"-"],image:[1040,0,0,"-"],linalg:[1047,0,0,"-"],logic:[1054,0,0,"-"],math:[1057,0,0,"-"],meta:[1071,0,0,"-"],multi_node:[1075,0,0,"-"],nest:[1119,0,0,"-"],random:[1131,0,0,"-"],reductions:[1138,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[855,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[856,1,1,""],DevClonedItem:[858,1,1,""],DevClonedIter:[859,1,1,""],DevClonedNest:[860,1,1,""],DevDistItem:[861,1,1,""],DevDistIter:[862,1,1,""],DevDistNest:[863,1,1,""],DevManager:[856,1,1,""],DevMapper:[865,1,1,""],DevMapperMultiProc:[866,1,1,""],MultiDev:[856,1,1,""],MultiDevItem:[868,1,1,""],MultiDevIter:[869,1,1,""],MultiDevNest:[870,1,1,""],Profiler:[871,1,1,""],clear_mem_on_dev:[872,2,1,""],default_device:[873,2,1,""],dev:[874,2,1,""],dev_clone:[875,2,1,""],dev_clone_array:[876,2,1,""],dev_clone_iter:[877,2,1,""],dev_clone_nest:[878,2,1,""],dev_dist:[879,2,1,""],dev_dist_array:[880,2,1,""],dev_dist_iter:[881,2,1,""],dev_dist_nest:[882,2,1,""],dev_from_str:[883,2,1,""],dev_to_str:[884,2,1,""],dev_unify:[885,2,1,""],dev_unify_array:[886,2,1,""],dev_unify_iter:[887,2,1,""],dev_unify_nest:[888,2,1,""],dev_util:[889,2,1,""],get_all_arrays_on_dev:[890,2,1,""],gpu_is_available:[891,2,1,""],num_arrays_on_dev:[892,2,1,""],num_cpu_cores:[893,2,1,""],num_gpus:[894,2,1,""],percent_used_mem_on_dev:[895,2,1,""],print_all_arrays_on_dev:[896,2,1,""],set_default_device:[897,2,1,""],set_split_factor:[898,2,1,""],split_factor:[899,2,1,""],split_func_call:[900,2,1,""],to_dev:[901,2,1,""],total_mem_on_dev:[902,2,1,""],tpu_is_available:[903,2,1,""],unset_default_device:[904,2,1,""],used_mem_on_dev:[905,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[856,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[856,3,1,""],da_tune_step:[856,3,1,""],dim_size:[856,3,1,""],ds_tune_step:[856,3,1,""],map:[856,3,1,""],repeated_config_check:[856,3,1,""],tune_step:[856,3,1,""],tuned:[856,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[865,3,1,""],map:[865,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[866,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[856,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[868,3,1,""],items:[868,3,1,""],keys:[868,3,1,""],shape:[868,3,1,""],values:[868,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[869,3,1,""],at_dev:[869,3,1,""],at_devs:[869,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[870,3,1,""],at_dev:[870,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[871,3,1,""],start:[871,3,1,""],stop:[871,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[906,1,1,""],DefaultFloatDtype:[906,1,1,""],DefaultIntDtype:[906,1,1,""],astype:[906,2,1,""],cast:[910,2,1,""],closest_valid_dtype:[911,2,1,""],convert_dtype:[912,2,1,""],default_dtype:[913,2,1,""],default_float_dtype:[914,2,1,""],default_int_dtype:[915,2,1,""],dtype:[916,2,1,""],dtype_bits:[917,2,1,""],dtype_from_str:[918,2,1,""],dtype_to_str:[919,2,1,""],invalid_dtype:[920,2,1,""],is_float_dtype:[921,2,1,""],is_int_dtype:[922,2,1,""],set_default_dtype:[923,2,1,""],set_default_float_dtype:[924,2,1,""],set_default_int_dtype:[925,2,1,""],unset_default_dtype:[926,2,1,""],unset_default_float_dtype:[927,2,1,""],unset_default_int_dtype:[928,2,1,""],valid_dtype:[929,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[906,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[906,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[906,3,1,""]},"ivy.functional.ivy.core.general":{"default":[953,2,1,""],abs:[931,2,1,""],all_equal:[932,2,1,""],arange:[933,2,1,""],arg_names:[934,2,1,""],argmin:[935,2,1,""],array:[936,2,1,""],array_equal:[937,2,1,""],arrays_equal:[938,2,1,""],asarray:[930,2,1,""],assert_supports_inplace:[939,2,1,""],broadcast_to:[940,2,1,""],cache_fn:[941,2,1,""],clip:[942,2,1,""],clip_matrix_norm:[943,2,1,""],clip_vector_norm:[944,2,1,""],concatenate:[945,2,1,""],constant_pad:[946,2,1,""],container_types:[947,2,1,""],copy_array:[948,2,1,""],cross:[949,2,1,""],cumprod:[950,2,1,""],cumsum:[951,2,1,""],current_framework_str:[952,2,1,""],einops_rearrange:[954,2,1,""],einops_reduce:[955,2,1,""],einops_repeat:[956,2,1,""],equal:[957,2,1,""],exists:[958,2,1,""],expand_dims:[959,2,1,""],floor:[960,2,1,""],floormod:[961,2,1,""],fourier_encode:[962,2,1,""],full:[963,2,1,""],gather:[964,2,1,""],gather_nd:[965,2,1,""],get_all_arrays_in_memory:[966,2,1,""],get_min_base:[967,2,1,""],get_min_denominator:[968,2,1,""],get_num_dims:[969,2,1,""],get_referrers_recursive:[970,2,1,""],has_nans:[971,2,1,""],identity:[972,2,1,""],indices_where:[973,2,1,""],inplace_arrays_supported:[974,2,1,""],inplace_decrement:[975,2,1,""],inplace_increment:[976,2,1,""],inplace_update:[977,2,1,""],inplace_variables_supported:[978,2,1,""],is_array:[979,2,1,""],isinf:[980,2,1,""],linear_resample:[981,2,1,""],linspace:[982,2,1,""],logspace:[983,2,1,""],match_kwargs:[984,2,1,""],matmul:[985,2,1,""],maximum:[986,2,1,""],meshgrid:[987,2,1,""],minimum:[988,2,1,""],multiprocessing:[989,2,1,""],num_arrays_in_memory:[990,2,1,""],one_hot:[991,2,1,""],ones:[992,2,1,""],print_all_arrays_in_memory:[993,2,1,""],queue_timeout:[994,2,1,""],repeat:[995,2,1,""],reshape:[996,2,1,""],scatter_flat:[997,2,1,""],scatter_nd:[998,2,1,""],set_min_base:[999,2,1,""],set_min_denominator:[1000,2,1,""],set_queue_timeout:[1001,2,1,""],set_tmp_dir:[1002,2,1,""],shape:[1003,2,1,""],shape_to_tuple:[1004,2,1,""],split:[1005,2,1,""],squeeze:[1006,2,1,""],stable_divide:[1007,2,1,""],stable_pow:[1008,2,1,""],stack:[1009,2,1,""],supports_inplace:[1010,2,1,""],swapaxes:[1011,2,1,""],tile:[1012,2,1,""],tmp_dir:[1013,2,1,""],to_list:[1014,2,1,""],to_numpy:[1015,2,1,""],to_scalar:[1016,2,1,""],transpose:[1017,2,1,""],try_else_none:[1018,2,1,""],unstack:[1019,2,1,""],value_is_nan:[1020,2,1,""],where:[1021,2,1,""],zero_pad:[1022,2,1,""],zeros_like:[1023,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1024,1,1,""],adam_step:[1026,2,1,""],adam_update:[1027,2,1,""],execute_with_gradients:[1028,2,1,""],gradient_descent_update:[1029,2,1,""],is_variable:[1030,2,1,""],lamb_update:[1031,2,1,""],lars_update:[1032,2,1,""],optimizer_update:[1033,2,1,""],set_with_grads:[1034,2,1,""],stop_gradient:[1035,2,1,""],unset_with_grads:[1036,2,1,""],variable:[1037,2,1,""],variable_data:[1038,2,1,""],with_grads:[1039,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1024,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1041,2,1,""],float_img_to_uint8_img:[1042,2,1,""],gradient_image:[1043,2,1,""],random_crop:[1044,2,1,""],stack_images:[1045,2,1,""],uint8_img_to_float_img:[1046,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1048,2,1,""],inv:[1049,2,1,""],matrix_norm:[1050,2,1,""],pinv:[1051,2,1,""],qr:[1052,2,1,""],vector_to_skew_symmetric_matrix:[1053,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1055,2,1,""],logical_or:[1056,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1058,2,1,""],asin:[1059,2,1,""],atan2:[1061,2,1,""],atan:[1060,2,1,""],atanh:[1062,2,1,""],cosh:[1063,2,1,""],divide:[1064,2,1,""],erf:[1065,2,1,""],exp:[1066,2,1,""],log:[1067,2,1,""],sinh:[1068,2,1,""],tan:[1069,2,1,""],tanh:[1070,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1072,2,1,""],maml_step:[1073,2,1,""],reptile_step:[1074,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1075,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1120,2,1,""],copy_nest:[1121,2,1,""],index_nest:[1122,2,1,""],map:[1123,2,1,""],map_nest_at_index:[1124,2,1,""],map_nest_at_indices:[1125,2,1,""],multi_index_nest:[1126,2,1,""],nested_indices_where:[1127,2,1,""],nested_map:[1128,2,1,""],set_nest_at_index:[1129,2,1,""],set_nest_at_indices:[1130,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1132,2,1,""],randint:[1133,2,1,""],random_normal:[1134,2,1,""],random_uniform:[1135,2,1,""],seed:[1136,2,1,""],shuffle:[1137,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1139,2,1,""],reduce_max:[1140,2,1,""],reduce_mean:[1141,2,1,""],reduce_min:[1142,2,1,""],reduce_prod:[1143,2,1,""],reduce_std:[1144,2,1,""],reduce_sum:[1145,2,1,""],reduce_var:[1146,2,1,""]},"ivy.functional.ivy.nn":{activations:[1148,0,0,"-"],layers:[1156,0,0,"-"],losses:[1169,0,0,"-"],norms:[1173,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1149,2,1,""],leaky_relu:[1150,2,1,""],relu:[1151,2,1,""],sigmoid:[1152,2,1,""],softmax:[1153,2,1,""],softplus:[1154,2,1,""],tanh:[1155,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1157,2,1,""],conv1d_transpose:[1158,2,1,""],conv2d:[1159,2,1,""],conv2d_transpose:[1160,2,1,""],conv3d:[1161,2,1,""],conv3d_transpose:[1162,2,1,""],depthwise_conv2d:[1163,2,1,""],dropout:[1164,2,1,""],linear:[1165,2,1,""],lstm_update:[1166,2,1,""],multi_head_attention:[1167,2,1,""],scaled_dot_product_attention:[1168,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1170,2,1,""],cross_entropy:[1171,2,1,""],sparse_cross_entropy:[1172,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1174,2,1,""]},"ivy.stateful":{activations:[1178,0,0,"-"],converters:[1181,0,0,"-"],initializers:[1183,0,0,"-"],layers:[1192,0,0,"-"],module:[1204,0,0,"-"],norms:[1206,0,0,"-"],optimizers:[1208,0,0,"-"],sequential:[1214,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1179,1,1,""],GELU:[1180,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1179,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1180,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1182,2,1,""]},"ivy.stateful.initializers":{Constant:[1183,1,1,""],FirstLayerSiren:[1185,1,1,""],GlorotUniform:[1186,1,1,""],KaimingNormal:[1183,1,1,""],Ones:[1188,1,1,""],Siren:[1189,1,1,""],Uniform:[1183,1,1,""],Zeros:[1191,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1183,3,1,""],create_variables:[1183,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1185,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1186,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1183,3,1,""],create_variables:[1183,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1188,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1189,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1183,3,1,""],create_variables:[1183,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1191,3,1,""]},"ivy.stateful.layers":{Conv1D:[1193,1,1,""],Conv1DTranspose:[1194,1,1,""],Conv2D:[1195,1,1,""],Conv2DTranspose:[1196,1,1,""],Conv3D:[1197,1,1,""],Conv3DTranspose:[1198,1,1,""],DepthwiseConv2D:[1199,1,1,""],Dropout:[1200,1,1,""],LSTM:[1201,1,1,""],Linear:[1202,1,1,""],MultiHeadAttention:[1203,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1193,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1194,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1195,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1196,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1197,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1198,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1199,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1200,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1201,3,1,""],get_initial_state:[1201,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1202,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1203,3,1,""]},"ivy.stateful.module":{Module:[1205,1,1,""]},"ivy.stateful.module.Module":{__init__:[1205,3,1,""],build:[1205,3,1,""],build_mode:[1205,3,1,""],built:[1205,3,1,""],check_submod_rets:[1205,3,1,""],get_mod_key:[1205,3,1,""],mod_depth:[1205,3,1,""],mod_height:[1205,3,1,""],mod_with_top_mod_key_chain:[1205,3,1,""],save_weights:[1205,3,1,""],show_mod_in_top_mod:[1205,3,1,""],show_structure:[1205,3,1,""],show_v_in_top_v:[1205,3,1,""],sub_mods:[1205,3,1,""],track_submod_call_order:[1205,3,1,""],track_submod_rets:[1205,3,1,""],v_with_top_v_key_chains:[1205,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1207,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1207,3,1,""]},"ivy.stateful.optimizers":{Adam:[1209,1,1,""],LAMB:[1210,1,1,""],LARS:[1211,1,1,""],Optimizer:[1212,1,1,""],SGD:[1213,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1209,3,1,""],set_state:[1209,3,1,""],state:[1209,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1210,3,1,""],set_state:[1210,3,1,""],state:[1210,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1211,3,1,""],set_state:[1211,3,1,""],state:[1211,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1212,3,1,""],set_state:[1212,3,1,""],step:[1212,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1213,3,1,""],set_state:[1213,3,1,""],state:[1213,3,1,""]},"ivy.stateful.sequential":{Sequential:[1215,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1215,3,1,""]},"ivy.verbosity":{cprint:[1220,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1219,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1208,1209,1210],"02886":1175,"100":[1075,1175,1217],"141592653589793":803,"2021":1175,"2102":1175,"360":[1057,1069],"718281828459045":803,"754":[803,810,811,814,833],"999":[1024,1026,1027,1031,1208,1209,1210],"abstract":[856,871,1175,1208,1212],"boolean":[40,41,814,817,828,829,856,891,903,906,920,929,930,932,937,938,971,973,974,978,979,980,1010,1020,1024,1030,1054,1055,1056,1071,1072,1073,1075],"break":43,"case":[15,18,19,40,41,42,43,814,815,816,818,819,820,825,827,832,833,856,895,902,905,930,933,996,997,998,1047,1050,1052,1075,1119,1122,1126,1175,1192,1203,1204,1205,1208,1212,1221],"catch":[930,953],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,359,405,406,810,812,856,858,859,860,861,862,863,865,866,868,869,870,871,883,884,906,930,934,984,1024,1038,1075,1119,1121,1128,1169,1171,1172,1175,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1221],"default":[15,18,19,40,41,42,43,804,805,806,807,808,809,836,837,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,865,866,873,874,878,879,880,881,882,885,886,887,888,895,898,899,900,905,906,913,914,915,916,930,932,933,935,943,944,945,946,949,950,951,962,963,964,969,971,972,981,983,984,987,989,992,994,995,997,998,1001,1003,1005,1007,1008,1017,1019,1020,1024,1027,1029,1030,1031,1032,1033,1035,1039,1047,1050,1052,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1131,1132,1134,1135,1138,1140,1141,1142,1143,1144,1145,1146,1148,1149,1153,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],"final":[40,41,43,930,962,982,983,1075,1192,1203,1218],"float":[40,41,42,803,804,805,806,809,810,811,814,815,816,818,819,820,825,827,832,833,834,836,840,856,865,866,889,895,898,902,905,906,914,921,930,933,943,944,946,962,963,967,968,983,999,1000,1001,1007,1008,1024,1026,1027,1029,1031,1032,1033,1040,1042,1046,1057,1064,1071,1072,1073,1074,1075,1131,1134,1135,1148,1150,1156,1164,1167,1168,1169,1170,1171,1172,1173,1174,1192,1200,1203,1206,1207,1208,1209,1210,1211,1212,1213],"function":[15,40,41,43,354,355,356,357,358,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,803,805,806,807,808,809,811,812,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,842,844,847,849,851,852,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1178,1179,1180,1208,1211,1212,1213,1217,1218,1221],"import":[43,1175,1218,1221],"int":[40,41,42,43,353,354,355,357,358,455,804,805,806,808,809,810,811,812,836,837,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,878,879,880,881,882,885,886,887,888,893,894,900,906,915,917,922,930,935,940,945,946,950,951,954,955,956,959,962,963,964,969,972,981,982,983,991,992,995,996,997,998,1003,1004,1005,1006,1009,1011,1012,1017,1019,1022,1024,1026,1027,1031,1040,1044,1045,1047,1050,1071,1072,1073,1074,1075,1119,1128,1131,1132,1133,1135,1136,1138,1140,1141,1142,1143,1144,1145,1146,1148,1153,1156,1157,1158,1159,1160,1161,1162,1163,1167,1169,1171,1172,1173,1174,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1206,1207],"long":[43,1156,1166],"new":[40,41,43,455,804,805,806,807,809,814,826,906,910,930,931,940,954,955,956,959,962,963,964,965,992,996,997,998,999,1000,1007,1008,1009,1024,1027,1029,1031,1032,1033,1040,1042,1044,1046,1057,1062,1063,1068,1070,1075,1119,1129,1130,1131,1132,1173,1174,1175,1181,1182,1192,1202,1206,1207,1208,1209,1210,1211,1212,1213,1218,1221],"public":[930,947],"return":[15,16,17,18,19,40,41,42,43,455,804,805,806,807,808,809,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,836,837,838,839,840,843,844,846,847,848,849,850,851,852,854,855,856,865,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,894,895,899,900,901,902,903,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,929,930,931,932,933,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,969,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,995,996,997,998,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1181,1182,1192,1201,1202,1208,1212,1217,1218,1221],"short":[43,1156,1166,1175,1221],"static":[40,41,854,855],"super":1075,"true":[40,41,42,407,412,439,442,455,456,814,821,822,828,829,836,839,840,843,844,846,847,850,851,852,854,855,856,930,932,939,941,958,962,971,973,1020,1021,1024,1027,1029,1030,1031,1032,1033,1035,1047,1050,1071,1072,1073,1074,1075,1119,1120,1127,1131,1132,1138,1140,1141,1142,1143,1144,1145,1146,1148,1149,1156,1164,1169,1170,1171,1172,1192,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],"try":[40,41,930,1018,1075],"var":[40,41,1071,1072,1073,1221],"while":[40,41,42,814,828,829,1075],AND:[814,817,850,851,1054,1055],But:1221,For:[43,814,815,816,818,819,820,825,827,832,833,930,933,942,1009,1024,1030,1038,1047,1052,1057,1058,1175,1181,1182,1218,1221],Its:[1057,1060],NOT:[814,828],Not:803,One:[40,41,43,930,955,996,1131,1133,1221],Ones:[1175,1183],PRs:43,Such:[930,947],That:1218,The:[15,16,17,18,19,40,41,42,43,804,808,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,832,833,834,836,837,838,839,840,841,842,846,847,850,851,852,854,855,856,865,866,872,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,895,898,899,900,901,902,905,906,910,911,912,917,918,919,920,929,930,933,936,937,940,941,943,944,945,946,948,949,952,953,957,962,964,965,972,975,976,977,979,981,983,985,987,989,992,995,996,997,998,999,1000,1001,1004,1005,1006,1007,1008,1009,1012,1020,1023,1024,1026,1027,1029,1031,1032,1033,1035,1038,1040,1042,1044,1046,1047,1050,1052,1057,1058,1059,1060,1064,1065,1066,1067,1069,1071,1072,1073,1074,1075,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1134,1135,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1175,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1218,1221],There:[43,1175,1218],These:[43,1175],Use:43,Used:[1119,1120,1127,1204,1205],Using:[1175,1176,1221],With:[40,41,843,844,1047,1050,1138,1140,1141,1142,1143,1144,1145,1146,1175,1217,1221],__array__:[930,936],__call__:[1192,1203,1204,1205],__del__:1075,__dict__:[1075,1218],__enter__:1075,__exit__:1075,__getitem__:1075,__getstate__:1075,__init__:[40,41,42,43,59,60,84,219,359,360,405,406,487,618,856,857,864,865,866,867,868,869,870,871,906,907,908,909,1024,1025,1075,1079,1086,1175,1178,1179,1180,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1221],__iter__:1075,__len__:1075,__next__:1075,__repr__:1075,_assign_vari:1217,_axi:1075,_base:[1119,1120,1127],_compute_node_da_ratio:1075,_compute_node_strs_da:1075,_concat_unify_arrai:1075,_counter:1075,_cur_framework:[43,1075],_da_direct:1075,_da_directions_flip:1075,_da_step_tim:1075,_da_tim:1075,_da_tune_count:1075,_data:1075,_delta_da_dim_s:1075,_delta_sf:1075,_dict:1075,_dim_siz:1075,_first_da_tune_step:1075,_first_ns_tune_step:1075,_fn:1075,_forward:[1175,1217],_get_kalman_param:1221,_get_prior:1221,_get_some_model:1221,_index:[1119,1120,1127],_input_queu:1075,_length:1075,_max_depth:1075,_max_node_dim_step_ratio:1075,_max_node_dim_step_s:1075,_max_split_factor_step_s:1075,_mean_unify_arrai:1075,_min_bas:[930,1008,1173,1174,1206,1207],_min_denomin:[930,1007],_min_node_dim_s:1075,_min_sf_tune_step:1075,_min_unit_node_tune_step:1075,_model:1221,_node_mapp:1075,_node_percent_mem:1075,_node_str:1075,_node_str_da_ratio:1075,_node_strs_da:1075,_node_strs_kei:1075,_node_strs_n:1075,_node_util:1075,_ns_step_tim:1075,_ns_time:1075,_ns_tune_count:1075,_num_nod:1075,_num_work:1075,_observed_config:1075,_output_queu:1075,_paramet:1217,_percent_mem_inc_per_sf:1075,_percent_mem_inc_per_unit_da_dim:1075,_percent_util_inc_per_unit_da_dim:1075,_ret_fn:1075,_safety_factor:1075,_save_dir:1075,_shift_da_split:1075,_shift_n:1075,_slice:1075,_step:[1208,1212],_sum_unify_arrai:1075,_timeout:1075,_tune:1075,_tune_da:1075,_tune_n:1075,_tune_step:1075,_unit_da_tune_count:1075,_unroll_step:1221,_with_node_mappig:1075,_worker:1075,_worker_class:1075,_worker_fn:1075,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,856,865,871,1075,1204,1205,1208,1212],abil:1175,abl:[40,41],about:[810,811,812],abov:[43,804,808,836,837,1131,1133],above_height:[40,41],abs:[260,407,539,671,836,840,930,1075],absolut:[40,41,836,838,930,931],abstractmethod:1075,accept:[15,43,814,828,829,1175],access:[40,41,43,1218],accord:[40,41,810,811,930,946,964,997,998,1017,1022],accordingli:[836,840,850,851,852],accur:[59,359,405,406,856,868,869,870,871,906,1024,1183,1185,1186,1188,1189,1191],aco:[754,1057],acosh:[88,223,364,491,622,814],across:[40,41,856,865,866,875,876,878,879,880,881,882,888,898,899,930,935,937,938,1075,1119,1123],act:43,activ:[1149,1150,1151,1152,1153,1154,1155,1175,1179,1180],actual:1218,adam:[1024,1026,1027,1031,1175,1208,1210,1217],adam_step:1024,adam_upd:1024,adapt:[1024,1032,1208,1211],add:[40,41,43,1075,1169,1170,1171,1172,1173,1174,1175,1206,1207,1218],added:[43,930,1007,1008,1214,1215],adding:[43,930,940],addit:[40,41,43,930,954,955,956,1173,1174,1192,1202],addition:43,address:43,adher:43,adjac:[930,933],adopt:[43,930,947],affect:[930,933],affin:[1206,1207],after:[814,833,930,981,1024,1027,1028,1029,1031,1032,1033,1040,1041,1173,1174,1208,1209,1210,1211,1212,1213,1221],after_1:[930,946,1022],after_n:[930,946,1022],again:43,against:[40,41,843,844,1047,1050,1138,1140,1141,1142,1143,1144,1145,1146],agnost:[43,1175,1217,1218],aim:1221,algebra:1047,algorithm:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199,1221],align:[40,41,43,930,940],aliv:[856,890,892,896,930,966,990,993],all:[15,16,17,18,19,40,41,43,125,250,401,528,659,804,808,836,840,841,842,850,854,855,856,865,890,896,930,931,932,937,938,947,966,972,993,1006,1047,1052,1071,1072,1073,1074,1075,1119,1120,1121,1127,1128,1131,1132,1135,1138,1140,1141,1142,1143,1144,1145,1146,1156,1166,1175,1218,1221],all_depth:[40,41],all_equ:930,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1119,all_tru:[40,41],alloc:[43,804,808,856,1075],allow:[930,982,983,984,1204,1205],allow_dupl:[930,984],alon:[856,895,905,1075,1175],along:[40,41,43,455,836,840,841,842,843,844,846,847,848,849,850,851,852,856,879,880,881,882,885,886,887,888,900,930,945,950,951,964,981,982,983,995,1005,1009,1012,1019,1047,1050,1071,1072,1073,1074,1075,1131,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146],alongsid:[1217,1218],alpha:[1148,1150],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,814,818,856,1075],also:[40,41,43,930,933,1024,1027,1071,1072,1073,1074,1119,1120,1121,1127,1128,1156,1165,1175,1192,1202,1217],altern:1217,alwai:[40,41,43,1024,1030,1035],among:[40,41],amount:[856,902,1075,1175],angl:[814,820,834,1057,1058,1061],ani:[15,16,17,18,19,40,41,43,125,250,401,528,659,814,824,850,854,855,856,858,861,865,866,868,877,878,881,882,887,930,932,933,936,953,954,955,956,957,958,971,979,984,1007,1008,1024,1028,1075,1119,1120,1123,1127,1128,1129,1130,1131,1135,1175,1181,1182,1204,1205,1217,1218,1221],anoth:[40,41,43,906,912,1175],another_backend:43,anyth:[43,1221],anywai:43,apart:43,api:[1175,1176],appear:[43,930,959],append:[40,41,836,837,1075],appli:[15,18,19,40,41,836,839,930,954,955,956,1024,1031,1032,1054,1055,1056,1071,1072,1073,1119,1123,1126,1128,1148,1149,1150,1151,1152,1153,1154,1155,1156,1165,1167,1168,1173,1174,1175,1178,1179,1180,1206,1207],applic:[1119,1123,1128,1156,1167,1168,1175,1221],appropri:[843,844],approxim:[814,815,816,819,820,825,826,827,832,834,1148,1149],arang:[136,260,407,455,539,671,930,982,983],arbitrari:[40,41,856,885,886,888,1075],arc:[1057,1061],arcco:[1057,1058],arctan:[1057,1060],area:[814,815,816,1175],arg:[15,16,17,40,41,43,59,63,856,865,878,882,888,900,930,954,955,956,998,1075,1181,1182,1204,1205],arg_nam:930,arg_stateful_idx:[1204,1205],argmax:[118,244,394,521,652,843],argmin:[136,407,539,671,930],args_clon:1075,args_dist:1075,args_to_ivi:[15,1175],args_to_n:[15,1175],args_uni:1075,argsort:[121,247,397,524,655,846],argument:[15,16,17,18,19,40,41,42,43,59,63,854,855,856,865,866,878,882,888,930,933,934,941,953,984,998,1057,1058,1075,1119,1123,1181,1182,1204,1205],aris:[1175,1221],arithmet:[1138,1141,1144,1146],arithmetic_oper:[0,1,2],around:[40,41,42],arr:455,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,136,260,407,455,539,671,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,852,856,874,875,876,879,880,881,882,885,886,887,888,890,892,896,900,901,906,910,916,921,922,930,931,932,933,935,937,938,939,940,942,943,944,945,946,948,949,950,951,954,955,956,957,959,960,961,962,963,964,965,966,969,971,972,973,974,975,976,977,979,980,981,982,983,985,986,987,988,990,991,992,993,995,996,997,998,1003,1005,1006,1009,1010,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1026,1027,1030,1031,1035,1037,1038,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1075,1119,1121,1128,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1192,1200,1201,1203,1208,1212,1217,1218],arrang:[930,954],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,353,354,355,356,357,358,359,361,362,803,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,852],array_api_methods_to_test:43,array_equ:[260,671,930],array_lik:[455,930,936],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,930],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1175],arraywithgener:[22,1175],arraywithgradi:[24,1175],arraywithimag:[26,1175],arraywithlinalg:[28,1175],arraywithlog:[30,1175],arraywithmath:[32,1175],arraywithmeta:[34,1175],arraywithrandom:[36,1175],arraywithreduct:[38,1175],arriv:[40,41,42],articl:1175,arxiv:1175,as_arrai:[40,41,930,969,1003],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[405,407,415,856,874,906,913,914,915,916],as_tensor:407,as_vari:[40,41],as_zero:[40,41],asarrai:[407,930],ascend:[846,847],asin:[754,1057],asinh:[88,364,491,622,814],aspect:[1040,1045],assert:[40,41,930,939,1075],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:930,associ:[43,1047,1053],assum:[814,819,832,1218,1221],astyp:[407,906],asynchron:[40,41,42],at_dev:[40,42,856,869,870],at_kei:[40,41],at_key_chain:[40,41],at_nod:1075,atan2:[754,1057],atan:[754,1057],atanh:[754,1057],attent:[43,1156,1167,1168,1192,1203],attribut:[0,6,40,41,810,811,812,930,1023],audienc:[1175,1218],author:1175,automat:43,avail:[40,41,43,856,891,893,894,903,930,955,1075],averag:[1024,1026,1027,1031,1071,1072,1073,1138,1141],average_across_step:[1071,1072,1073],avoid:[43,856,1075,1218],axes:[40,41,43,407,436,448,449,836,840,841,842,843,844,848,849,850,851,852,856,900,930,935,946,959,1011,1017,1022,1047,1050,1075,1138,1140,1141,1142,1143,1144,1145,1146],axes_length:[40,41,930,954,955,956],axi:[40,41,407,409,413,414,420,428,429,430,434,435,437,836,837,840,841,842,843,844,846,847,848,849,850,851,852,856,858,861,868,879,880,881,882,885,886,887,888,900,930,935,945,946,949,950,951,959,964,981,982,983,995,1005,1006,1009,1011,1012,1019,1022,1075,1131,1137,1138,1140,1141,1142,1143,1144,1145,1146,1148,1153,1169,1171,1172],axis0:[40,41,930,1011],axis1:[40,41,836,837,930,1011],axis2:[836,837],back:[43,1204,1205,1208,1212],backend:[15,17,19,40,41,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,856,891,894,903,906,912,920,929,930,974,978,1024,1027,1029,1031,1032,1033,1038,1075,1175,1176,1181,1182,1208,1209,1210,1211,1212,1213,1217,1218,1221],backend_nam:43,background:[1175,1218],backprop:1221,backward:[850,851,852,1217],band:[930,962],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,359,405,406,407,430,814,825,826,827,856,858,859,860,861,862,863,865,866,868,869,870,871,906,930,967,983,999,1008,1024,1075,1138,1139,1175,1178,1179,1180,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1221],basi:43,batch:[40,41,836,839,840,856,898,899,930,962,972,1040,1044,1071,1072,1073,1074,1075,1156,1165,1173,1174,1206,1207],batch_shap:[407,422,930,972,991,1040,1041,1042,1043,1044,1045,1046,1047,1053,1131,1132,1156,1166,1167,1168,1192,1201],batch_siz:[455,456,1075,1131,1132,1156,1157,1158,1159,1160,1161,1162,1163],bayesian:1221,becaus:[43,930,933],becom:[43,930,942,1057,1061,1221],been:[930,954,955,956,1131,1132],befor:[40,41,43,856,900,1071,1072,1073,1075,1119,1128,1138,1140,1141,1142,1143,1144,1145,1146,1156,1167,1168,1221],before_1:[930,946,1022],before_n:[930,946,1022],begin:[1119,1120,1127,1218],behaviour:[43,1221],behind:[1024,1027,1029,1031,1032,1033,1175],being:[40,41,43,930,933,994,1001,1075],believ:43,belong:[40,41],below:[43,804,808,836,837,1175,1218,1221],below_depth:[40,41],benefit:1175,bernoul:[1156,1164,1192,1200],best:[43,930,984,1175],beta1:[1024,1026,1027,1031,1208,1209,1210],beta2:[1024,1026,1027,1031,1208,1209,1210],beta:[1173,1174],between:[40,41,42,810,811,930,933,1047,1052,1119,1123,1131,1133,1169,1171,1172,1208,1210],bia:[1156,1165,1166,1192,1193,1194,1195,1196,1197,1198,1199,1202],bias_initi:[1192,1193,1194,1195,1196,1197,1198,1199,1202],bilinear:[1040,1041],bilinear_resampl:[170,312,444,579,740,1040],bilinearli:[1040,1041],binari:[814,817,1169,1170],binary_cross_entropi:1169,bit:[359,810,811,812,906,917,1040,1042,1046,1175],bitwis:[814,817],bitwise_and:[88,223,364,491,622,814],bitwise_oper:[0,7,8],block:[1175,1218],bool:[15,18,19,40,41,42,43,814,821,822,823,824,828,829,836,839,840,843,844,846,847,848,849,850,851,852,854,855,856,874,887,891,895,900,903,905,906,916,930,932,937,938,950,953,957,958,962,969,971,979,984,1003,1005,1019,1020,1021,1024,1027,1028,1029,1030,1031,1032,1033,1035,1047,1050,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1131,1132,1138,1140,1141,1142,1143,1144,1145,1146,1148,1149,1156,1164,1181,1182,1192,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],both:[43,930,949],bottom:1175,boundari:[40,41,1131,1135],branch:[43,854,855],brittl:43,broadcast:[40,41,814,817,823,824,829,836,840,843,844,850,851,852,930,940,957,986,987,988,995,1047,1050,1057,1061,1064,1138,1140,1141,1142,1143,1144,1145,1146],broadcast_to:[260,671,930],build:[1075,1175,1192,1203,1204,1205],build_mod:[1192,1203,1204,1205],builder:[43,1175],built:[856,930,933,1075,1192,1203,1204,1205],busi:43,bypass:1218,cach:[856,872,930,941],cache_fn:930,calcul:[40,41,42,814,815,816,819,820,825,826,827,832,833,834,1057,1064],call:[43,856,900,930,994,1001,1018,1024,1028,1075,1119,1120,1123,1127,1192,1203,1204,1205,1208,1212,1218,1221],callabl:[40,41,854,855,856,865,866,900,930,941,953,955,984,1018,1071,1072,1073,1074,1075,1119,1123,1124,1125,1127,1128,1156,1167],can:[43,856,898,899,900,930,996,1040,1042,1075,1175,1217,1218,1221],cancel_join_thread:1075,cannot:43,captur:1175,cast:[40,41,136,260,407,539,671,906,930,945,1040,1042,1046],catch_except:[930,953],categori:43,caus:43,ceil:[88,223,364,491,622,814,930,933],cell:[1156,1166,1192,1201],certain:[40,41,930,933,982,983],chain:[40,41,1071,1072,1073,1214,1215],chang:[43,856,930,996,1075,1119,1121,1128,1175,1217],channel:[930,962,1040,1042,1043,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202],check:[15,16,17,18,19,40,41,43,856,895,905,906,911,920,929,930,939,958,971,979,1010,1020,1024,1030,1075,1119,1120,1127,1175,1218],check_nest:[1119,1127],check_shap:[40,41],check_submod_ret:[1204,1205],check_typ:[40,41],choic:[1175,1218],choleski:[744,1047],choos:[814,828,829,930,1021,1047,1052,1057,1061,1175],choose_random_framework:59,chosen:[40,41,930,933,1021],chunk:[856,898,899,900,1075],chunk_siz:[856,900,1075],circl:[1057,1058,1059],clark:1175,clear:[43,856,872,1075],clear_framework_stack:59,clear_mem_on_dev:[405,663,856],click:1175,clip:[40,41,260,407,671,930,943,944,986,988,1175],clip_matrix_norm:930,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,930],clipped_delta:1075,clone:[40,41,856,875,876,877,878,1075],clone_arrai:1075,clone_it:1075,clone_nest:1075,clonedit:1075,cloneditem:1075,clonednest:1075,close:[43,1040,1045,1057,1059,1075,1221],closest:[814,818,906,911],closest_valid_dtyp:906,code:[40,41,42,43,455,1175,1176,1217,1218],codebas:[856,898,899,1075,1175,1218,1221],codomain:[814,815,816,819,820,825,827,832,833,834],colab:1175,collect:[15,40,41,405,407,439,444,448,452,453,455,854,856,906,930,1024,1040,1047,1054,1057,1075,1119,1131,1138,1148,1156,1169,1173,1178,1192,1206,1208],color:[40,41,42,1219,1220],column:[930,972],combin:[40,41,42,1040,1045,1175,1221],combined_batch_s:1075,come:1218,command:1175,comment:43,commit:1221,common:[40,41,43,1057,1061],common_key_chain:[40,41],commun:[43,1175,1218],communuti:43,compar:[40,41,846,847,930,932,937,938],comparison_oper:[0,9,10],compat:[814,817,823,824,829,836,840,850,851,852,930,957,996,1057,1064,1175,1221],compil:[260,407,671,1204,1205,1208,1209,1210,1211,1212,1213],compile_on_next_step:[1204,1205,1208,1209,1210,1211,1212,1213],complet:[40,41,43,1047,1052,1075],complex:[1218,1221],compliant:[814,828,829],compon:[930,949],composit:43,comput:[40,41,814,817,823,824,828,829,830,836,838,840,848,849,856,900,930,943,944,950,951,957,985,1024,1026,1027,1028,1029,1031,1032,1033,1035,1037,1040,1043,1047,1048,1049,1050,1051,1052,1054,1055,1056,1057,1058,1059,1060,1061,1065,1066,1067,1069,1119,1123,1138,1139,1140,1141,1142,1143,1144,1145,1146,1156,1157,1158,1159,1160,1161,1162,1163,1165,1167,1169,1170,1171,1172],concat:[40,41,856,885,886,887,888,900,930,962,1075],concaten:[40,41,136,260,407,539,671,930,962,1075,1175],concatten:[40,41,856,885,886,887,888,900,1075],condit:[407,854,855,930,1021,1119,1127],conditon:[1119,1127],config:[40,41,1075],config_list:1075,configur:[40,41],conflict:43,conform:43,conjunct:1218,connect:[1192,1202,1203],consid:[40,41,814,828,829,1047,1052,1217,1221],consist:[40,41,856,888,1075,1138,1139,1204,1205,1218],constant:[856,865,866,930,946,1075,1119,1123,1169,1170,1171,1172,1173,1174,1183,1184,1188,1191,1204,1205,1206,1207,1218],constant_kwarg:1075,constant_pad:[260,407,539,671,930],constitu:[40,41],construct:[930,1012,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217],constructor:[40,41,42,930,934,1214,1215],consum:[856,1075],cont_feat_dim:[1156,1167],contaienr:[40,41],contain:[15,18,19,42,804,806,808,809,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,840,848,849,850,851,852,856,875,879,900,906,910,930,931,935,942,943,944,947,957,971,986,988,1007,1008,1024,1026,1027,1029,1031,1032,1033,1057,1064,1071,1072,1073,1074,1075,1131,1132,1138,1140,1141,1142,1144,1146,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[407,671,930],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[407,930,989,1156,1167,1192,1203],context_dim:[1192,1203],contextmanag:[59,60],continu:[43,1075,1218],contract:[40,41,1138,1139],contribut:[1175,1176],contributor:[43,1175],control:1175,conv1d:[201,342,469,793,1156,1175,1192],conv1d_transpos:[201,342,469,793,1156],conv1dtranspos:[1175,1192],conv2d:[201,342,469,604,793,1156,1175,1192],conv2d_transpos:[201,342,469,793,1156],conv2dtranspos:[1175,1192],conv3d:[201,342,469,604,793,1156,1175,1192],conv3d_transpos:[201,342,469,793,1156],conv3dtranspos:[1175,1192],convent:[40,41,1138,1139],conver:[856,872,883,895,902,905,1075],convers:[16,17,18,19,40,41,1075,1175],convert:[15,16,17,18,19,40,41,43,856,883,884,906,912,918,919,930,1004,1015,1016,1040,1042,1046,1047,1053,1075,1119,1121,1128,1175,1182],convert_dtyp:906,convolut:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],cool:43,cooler:43,coordin:[930,987,1057,1058,1059,1061],copi:[40,41,43,455,930,948,1075,1119,1121],copy_arrai:[407,671,930],copy_nest:1119,core:[405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1175],corner:43,correct:[43,1175,1218],correctli:[40,41,43,843,844,1047,1050,1057,1061,1138,1140,1141,1142,1143,1144,1145,1146],correspond:[40,41,930,945,1131,1132],cos:[88,364,491,622,814,930,962,1057,1058,1069,1218],cosh:[88,364,491,622,754,814,1057],cosin:[814,815,819,820,1057,1058,1063],cost:[1024,1026,1027,1029,1031,1032,1033,1071,1072,1073,1074],cost_fn:[1071,1074],could:1221,count:[40,41,841,842,850,851,852,1075,1138,1143,1145],cours:43,cprint:1219,cpu:[40,41,43,856,893,895,901,902,905,930,933,936,964,965,972,982,983,991,992,997,998,1023,1075,1131,1132,1133,1134,1135,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1217,1218],creat:[40,41,804,805,806,807,809,856,865,866,930,933,936,963,964,965,972,982,983,991,992,997,998,1014,1023,1024,1037,1075,1131,1132,1133,1134,1135,1175,1176,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1221],create_if_abs:[40,41],create_vari:1183,creation:[40,41,42,43],creation_funct:[353,354,355,356,357,358,804,805,806,807,808,809],crop:[1040,1044],crop_siz:[1040,1044],cross:[260,671,930,1169,1170,1171,1172],cross_entropi:1169,cuda:[40,41,856,865,884,901,930,933,936,964,965,972,982,983,991,992,997,998,1023,1075,1131,1132,1133,1134,1135,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215],cumprod:[136,260,407,671,930],cumsum:[671,930],cumul:[930,950,951],current:[40,41,42,43,856,865,889,890,892,896,906,912,920,929,930,952,966,974,978,990,993,1075,1119,1120,1127,1175,1221],current_framework:59,current_framework_str:[407,671,930,1075],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1156,1157,1158,1159,1160,1161,1162],d_out:[1156,1157,1158,1159,1160,1161,1162],da_can_termin:1075,da_dim_s:[856,1075],da_direct:1075,da_tune_step:[856,1075],dai:[43,1221],daniel:1175,data:[40,41,42,43,804,805,806,807,808,809,811,812,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,832,833,834,836,837,840,841,842,846,847,850,851,852,856,858,859,860,861,862,863,868,869,870,884,906,910,911,912,916,917,918,919,920,921,922,929,930,933,936,957,963,972,979,992,996,1006,1010,1023,1024,1030,1038,1057,1064,1075,1156,1165,1175],data_format:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],data_type_funct:[359,361,362,810,811,812],dataset:[40,41],datatyp:[40,41,906,911,921,922],dcdw:[1024,1026,1027,1029,1031,1032],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1024,1031,1032,1208,1210,1211],decay_lambda:[1024,1031,1032,1208,1210,1211],decid:[40,41,1221],decompos:[1047,1048,1052],decomposit:[836,839,1047,1048,1052],decrement:[930,975],dedic:[1024,1038,1181,1182],deep:[40,41,1175],deep_copi:[40,41],deeper:[856,878,882,888,1075,1119,1128,1175],deepli:[1119,1121],def:[43,60,84,219,360,487,618,857,864,867,907,908,909,1025,1075,1079,1086,1175,1184,1187,1190,1217,1218,1221],default_dev:43,default_devic:856,default_dtyp:[43,906],default_float_dtyp:906,default_int_dtyp:906,default_key_color:[40,41,42],default_nod:1075,default_rng:455,default_v:[930,953],defaultdevic:[856,857],defaultdtyp:[906,907],defaultfloatdtyp:[906,908],defaultintdtyp:[906,909],defin:[43,930,949,991,1023,1131,1133],definit:43,degre:[1057,1069],del:1075,delai:43,delet:43,delta:[1024,1026,1075],delta_dim_s:1075,delta_percent_mem:1075,delta_sf:1075,delta_util:1075,demo:1175,denomin:[930,961,968,1000,1007,1008,1173,1174,1206,1207],denot:43,dens:[1192,1202],depend:[814,815,816,819,820,825,826,827,832,834,836,839,846,847,930,1021,1175],depth:[40,41,407,431,856,878,882,888,930,970,991,1075,1119,1128,1204,1205],depth_cutoff:[40,41],depthwis:[1156,1163,1192,1199],depthwise_conv2d:[201,342,469,604,793,1156],depthwiseconv2d:[1175,1192],deriv:[804,807,1024,1026,1027,1029,1031,1032,1033,1119,1121,1128,1175,1204,1208,1212,1214],descend:[836,839,846,847],descent:[1024,1029,1208,1213],describ:[40,41,1138,1139],descript:[836,840],design:[1175,1176],desir:[40,41,856,901,906,910,930,933,936,972,973,992,1023,1040,1045,1075,1138,1140,1141,1142,1144,1146],desired_aspect_ratio:[444,447,1040,1045],desired_percent_increas:1075,detail:1221,detect:[40,41,1119,1120,1127],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,814,815,816,817,819,820,821,822,825,827,832,833,836,837,838,840,850,851,852,856,891,893,894,903,906,910,911,917,920,921,922,929,930,932,933,936,937,938,971,974,978,979,1010,1020,1024,1030,1057,1064,1071,1072,1073,1074,1075,1156,1167],dev:[40,41,42,43,129,254,353,356,405,407,408,410,420,421,422,429,430,431,432,433,438,455,456,532,663,804,807,856,859,860,862,863,865,866,869,870,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,892,895,896,897,898,899,900,901,902,905,930,933,936,964,965,972,982,983,991,992,997,998,1023,1024,1039,1131,1132,1133,1134,1135,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215],dev_clon:[40,41,856],dev_clone_arrai:856,dev_clone_it:856,dev_clone_nest:856,dev_dist:[40,41,856],dev_dist_arrai:856,dev_dist_it:856,dev_dist_nest:856,dev_from_str:[43,129,254,405,532,663,856],dev_mapp:856,dev_str:[40,41],dev_to_str:[129,254,405,532,663,856],dev_unifi:856,dev_unify_arrai:856,dev_unify_it:856,dev_unify_nest:856,dev_util:856,devclonedit:856,devcloneditem:856,devclonednest:856,devdistit:856,devdistitem:856,devdistnest:856,develop:[43,1175,1218,1221],deviat:[40,41,1131,1134,1138,1144,1173,1174,1206,1207],devic:[21,40,41,43,353,354,355,358,406,407,419,804,805,806,807,808,809,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,930,933,936,963,964,965,972,982,983,991,992,997,998,1023,1024,1039,1131,1132,1133,1134,1135,1175,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215],devmanag:[856,864],devmapp:[856,866],devmappermultiproc:856,diag:[836,839],diagon:[111,237,387,514,645,804,808,836,930,972],dict:[15,16,17,18,19,40,41,42,856,858,861,865,866,868,878,879,880,881,882,930,954,955,956,984,1071,1072,1073,1075,1119,1121,1122,1123,1126,1128,1181,1182],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,810,811,856,875,876,879,880,1047,1052,1075,1156,1165,1175,1218,1221],differenti:[1175,1218],dilat:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],dim:[40,41,836,839,930,991,1040,1041,1045,1075,1192,1203],dim_siz:[40,41,856,1075],dimens:[40,41,42,804,808,836,837,839,840,841,842,843,844,850,851,852,856,887,930,940,945,949,954,955,956,959,962,969,981,991,995,996,1005,1006,1009,1017,1019,1040,1044,1047,1050,1071,1072,1073,1074,1075,1131,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1153,1156,1157,1158,1159,1160,1161,1162,1163,1166,1169,1171,1172,1192,1193,1194,1195,1196,1197,1198,1199,1202,1203],dimension:[40,41,455,836,839,840,850,851,852,930,1005,1006],direct:1075,directli:[43,1119,1128,1218,1221],directori:[930,1002,1013],discord:43,discret:[1169,1171],discuss:43,disk:[40,41,1040,1042],distanc:[930,933],distribut:[40,41,856,875,879,880,881,882,1075,1131,1132,1133,1134,1135,1156,1164,1192,1200,1204,1205],distribute_nest:1075,distributedarrai:[40,41],distrubt:[1169,1171],dive:[1175,1218],divid:[40,41,930,1005,1007,1057],dividend:[1057,1064],divis:[930,961,968,1000,1007,1008,1024,1026,1027,1031,1057,1064,1208,1209,1210],divisor:[1024,1026,1027,1031,1057,1064,1208,1209,1210],doc:1175,docstr:43,document:43,doe:[40,41,43,930,933,1005,1217],doesn:[1047,1052,1175],doing:43,domain:[814,815,816,819,820,825,827,832,833,834,1057,1058],don:[43,1175],done:43,door:1221,dot:[1047,1049,1156,1167,1168,1192,1203],down:1217,downscal:[930,943,944],drag:[1175,1221],draw:[1131,1132,1134,1135],drawn:[1131,1132,1133,1134,1135],drop:[1175,1221],dropout:[1156,1175,1192,1203],dropout_r:[1192,1203],ds_tune_step:856,dtype:[40,41,43,136,260,353,354,355,356,358,359,361,362,407,408,410,411,419,422,438,539,671,804,805,806,807,809,810,811,812,843,844,910,911,912,913,914,915,917,918,919,920,921,922,923,924,925,926,927,928,929,930,933,936,963,972,991,992,1023],dtype_bit:[136,260,407,539,671,906],dtype_from_str:[43,136,260,407,539,671,906],dtype_in:[407,416,417,418,906,912,917,918,919,920,921,922,929],dtype_to_str:[136,260,407,539,671,906],duplic:[40,41,43],dure:[40,41,43,854,855,930,1018,1024,1026,1027,1031,1071,1072,1073,1074,1204,1205,1208,1209,1210,1212],dynam:[43,407,412,854,855],each:[40,41,42,43,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,834,836,839,856,865,866,875,876,877,878,879,880,881,887,899,900,930,931,932,946,957,995,1005,1009,1012,1022,1024,1027,1029,1031,1032,1033,1040,1043,1057,1059,1064,1066,1067,1075,1119,1123,1131,1132,1138,1139,1156,1157,1158,1159,1160,1161,1162,1163,1164,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1218],eager:1218,easi:1221,easili:1175,econom:1221,ecosystem:1175,edg:[930,942,946,1022],effect:[1024,1033],effective_grad:[1024,1033],effici:1221,einop:[40,41,930,954,955,956],einops_rearrang:[40,41,930],einops_reduc:[40,41,930],einops_repeat:[40,41,930],einstein:[40,41,1138,1139],einsum:[40,41,187,330,457,594,773,1138],either:[40,41,43,814,825,827,832,930,953,984,987,989,1071,1072,1073,1074,1075,1192,1203,1204,1205,1218],eleg:1075,element:[40,41,455,804,808,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,841,842,848,849,850,851,852,856,877,881,887,906,910,930,931,933,935,937,938,942,943,944,950,951,957,960,961,972,973,986,988,995,1005,1016,1021,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1075,1138,1139,1141,1143,1145,1148,1149,1150,1151,1152,1153,1154,1155,1156,1164,1192,1200],elementwis:[40,41],elementwise_affin:[1206,1207],elementwise_funct:[814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834],elemtn:[1131,1132],elif:1075,els:[43,930,939,953,958,1075],elsewher:[930,1021],emphas:1175,empti:[40,41,77,212,353,480,611,804,850,851,852,1047,1052,1075],enabl:[40,41,42,43,1175],encapsul:[810,812],encod:[930,962,1040,1042],end:[930,933,1175,1218],engag:43,ensur:43,entir:[40,41,850,851,852,856,900,1075,1175,1192,1201],entri:[40,41,930,982,983,1005,1006],entropi:[1169,1170,1171,1172],enumer:1075,environ:1175,eps:[359,810,811],epsilon:[1024,1026,1027,1031,1169,1170,1171,1172,1173,1174,1206,1207,1208,1209,1210],equal:[40,41,88,364,491,622,814,821,836,837,846,847,930,932,937,938,946,1005,1022,1057,1069,1131,1135],equality_matrix:[930,932],equat:[40,41,1138,1139],equival:[814,828,829,836,840,930,933,1057,1069],erf:[453,754,1057],error:[40,41,43,856,930,1006,1057,1065,1075,1148,1149,1204,1205,1208,1212],etc:[40,41,43,856,901,930,933,936,964,965,972,982,983,991,992,997,998,1023,1075,1131,1132,1133,1134,1135,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1221],euclidean:[836,840],euler:803,evalu:[40,41,814,825,826,827,830,850,851,852,930,987,1119,1120,1127],even:[43,1221],evenli:[40,41,930,933,982,983,1005],everi:[43,930,932,1221],exact:[40,41],exampl:[43,854,855,930,942,1009,1047,1052,1175,1217,1218,1221],example_input:[407,412,854,855],exc_tb:1075,exc_typ:1075,exc_val:1075,exce:[930,988],except:[40,41,44,47,850,851,852,930,933,939,945,953,1018,1075],excess_s:1075,excit:[1175,1218],exclud:[59,61,930,933,1131,1135],exclus:[40,41,407,414,427,439,441,930,950,979,1024,1030,1131,1133],execut:[43,930,1018,1218],execute_with_gradi:[167,307,439,574,734,1024,1175,1217],exist:[40,41,930,953,1075,1175,1208,1212,1221],exp:[754,1057],expand:[40,41,930,959,962],expand_dim:[40,41,260,671,930,1075],expect:[930,934],explain:[43,1218],explicitli:[43,1192,1201,1203,1204,1205,1218],expon:[930,1008],exponenti:[1057,1065,1066],expos:[930,936,947],express:[814,819,832,930,987],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1024,1028],eye:[1047,1049],fabian:1175,fabio:1175,factor:[836,839,856,865,898,899,900,1024,1026,1027,1031,1032,1075,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199,1208,1209,1210,1211],fail:43,falck:1175,fall:[1204,1205,1208,1212],fallback_to_non_compil:[1204,1205,1208,1212],fals:[15,18,19,40,41,42,59,66,67,68,69,70,405,407,414,415,427,434,437,439,440,441,448,449,814,821,822,828,829,836,840,843,844,846,847,848,849,850,851,852,856,874,887,895,900,905,906,913,914,915,916,930,932,950,953,958,962,969,979,984,1003,1005,1019,1021,1024,1027,1028,1029,1030,1031,1032,1033,1047,1050,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1138,1140,1141,1142,1143,1144,1145,1146,1181,1182,1204,1205,1208,1209,1210,1211,1212,1213],fan_in:1183,fan_mod:1183,fan_out:1183,far:[1119,1120,1127,1217],faster:[854,855],favourit:[1175,1217],feasibl:1221,feat_dim:[1156,1167,1168],fed:[856,900,1075],feed:[856,900,1075],few:43,field:1221,file:[40,41,43,930,1002,1013,1204,1205],filepath:[40,41],fill:[40,41,804,805,806,807,809,930,963,992,1131,1133],fill_valu:[407,419,930,963],filter:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199,1221],filter_s:[1192,1193,1194],filter_shap:[1192,1195,1196,1197,1198,1199],find:[40,41,43,1221],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,218,219,359,360,486,487,617,618,810],finish:[1175,1221],finit:[814,821],first:[40,41,43,455,814,817,823,824,829,836,837,839,854,855,856,887,930,937,945,949,957,982,983,1009,1011,1024,1028,1071,1072,1073,1074,1075,1119,1120,1127,1131,1137,1138,1143,1145,1192,1203,1204,1205,1208,1212,1218,1221],firstlayersiren:[1175,1183],firstli:[1218,1221],fist:[856,900,1075],fit:[40,41,405,407,439,444,448,452,453,455,930,995,1040,1045],fix:43,fkt:1221,flag:[40,41,43,1024,1030],flat:[40,41,930,995,997],flat_list:[40,41],flatten:[40,41,836,840,843,844,930,962,995,1138,1140,1141,1142,1144,1146],flatten_key_chain:[40,41,1204,1205],flexibl:[1175,1218],flip:[40,41,116,242,392,519,650,841],float32:[43,407,422,906,910,918,919,930,933,936,972,992,1023],float_dtyp:[906,914,924],float_img_to_uint8_img:1040,floor:[260,407,671,930,961,1075],floormod:[260,407,671,930],fluid:1221,folder:[43,1175],follow:[40,41,43,810,812,836,840,856,900,930,975,976,977,1007,1008,1024,1027,1029,1031,1032,1033,1075,1119,1123,1128,1156,1167,1168,1175,1192,1202,1208,1212],followng:[810,811],fomaml_step:1071,forget:[1024,1026,1027,1031,1208,1209,1210],fork:[930,989,1175,1176],forkserv:[930,989,1075],form:[15,16,17,18,19,40,41,804,808,836,837,930,936,1024,1027,1029,1031,1032,1033,1119,1121,1128,1156],format:[40,41,43,856,874,906,910,912,916,930,933,936,972,992,1023,1075,1138,1139,1175,1217,1218],format_fn:[40,41],format_key_chain:[40,41],forward:[1204,1205,1208,1212,1217],found:[40,41,42],fourier:[930,962],fourier_encod:930,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,117,119,122,124,126,127,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,175,176,177,181,182,183,184,185,186,188,189,190,191,192,193,194,197,199,200,202,203,204,205,206,207,208,213,214,215,216,217,219,220,221,224,225,226,227,228,229,230,231,232,233,234,235,238,239,240,241,243,245,248,251,252,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,313,314,315,317,318,319,320,322,323,326,327,328,329,331,332,333,334,335,336,337,338,341,343,344,345,346,347,348,349,354,355,356,357,358,360,361,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,388,389,390,391,393,395,398,400,402,403,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,445,446,447,449,450,451,454,456,458,459,460,461,462,463,464,467,468,470,471,472,473,474,475,476,481,482,483,484,485,487,488,489,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,515,516,517,518,520,522,525,527,529,530,533,534,535,536,537,538,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,575,576,577,578,580,581,582,584,585,586,590,591,592,593,595,596,597,598,599,600,601,605,606,607,612,613,614,615,616,618,619,620,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,646,647,648,649,651,653,656,658,660,661,664,665,666,667,668,669,670,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,735,736,737,738,739,741,742,743,745,746,747,748,749,750,752,753,755,756,757,758,759,760,761,762,763,764,765,767,768,769,770,771,772,774,775,776,777,778,779,780,783,784,785,786,787,788,789,791,792,794,795,796,797,798,799,800,805,806,807,808,809,811,812,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,837,838,839,840,842,844,847,848,849,851,852,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1170,1171,1172,1174,1175,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1220,1221],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1075,framewrk:[930,989],free:43,freed:43,freeli:43,frequenc:[930,962],from:[40,41,42,43,804,807,814,833,836,837,841,842,848,849,850,851,852,856,865,866,900,906,912,930,953,964,965,972,996,1006,1014,1021,1024,1027,1031,1040,1044,1047,1052,1071,1072,1073,1074,1075,1119,1121,1128,1131,1132,1133,1134,1135,1138,1143,1145,1156,1164,1167,1175,1181,1182,1192,1200,1203,1208,1212,1217,1218],from_cal:[1204,1205],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,136,260,407,539,671,810,811,930,1047,1052,1175],full_matric:[836,839],fulli:[43,1175,1192,1202,1203,1217],func:[40,41,407,412,439,440,854,855,856,900,930,941,1024,1028,1075],further:[43,1221],furthermor:1221,futur:1221,gain:1183,gamma:[1173,1174],gather:[40,41,136,260,407,539,671,930,965],gather_nd:[40,41,136,260,407,539,671,930],gauss:[1057,1065],gaussian:[1148,1149],geglu:[1175,1178],gelu:[340,466,782,1148,1175,1178],gener:[23,40,41,43,405,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,455,854,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1030,1131,1133,1135,1136,1175,1208,1212],geometr:[930,962],get:[40,41,43,810,811,812,856,865,866,874,889,890,895,899,902,905,906,916,917,930,934,966,967,968,994,1075,1175,1192,1201,1221],get_all_arrays_in_memori:930,get_all_arrays_on_dev:856,get_framework:59,get_initial_st:[1192,1201],get_min_bas:930,get_min_denomin:930,get_mod_kei:[1204,1205],get_num_dim:[407,671,930],get_referrers_recurs:930,getfullargspec:1075,gist:1175,give:[43,930,996,1218],given:[40,41,43,804,805,841,842,856,889,895,898,899,900,902,905,906,910,930,933,936,942,950,951,965,982,983,992,995,997,998,1005,1012,1017,1019,1023,1024,1026,1027,1029,1031,1032,1033,1047,1049,1053,1057,1058,1075,1119,1124,1125,1131,1134,1135,1137,1138,1141,1143,1144,1145,1146,1156,1157,1158,1159,1160,1161,1162,1163,1181,1182,1221],global:[40,41,42,856,865,866,873,898,899,900,906,913,914,915,930,952,967,968,994,999,1000,1001,1007,1008,1024,1039,1075,1173,1174,1206,1207],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1175,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202],good:43,googl:1175,got:[43,1175],gpu0:43,gpu2:43,gpu:[856,891,894,1075],gpu_is_avail:[405,856,1075],grad:[1175,1208,1212,1217],gradient:[25,40,41,440,441,442,443,856,900,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1043,1071,1072,1073,1074,1175,1208,1209,1210,1211,1212,1213,1217,1221],gradient_descent_upd:[1024,1071,1072,1073,1074],gradient_imag:[170,312,444,579,740,1040],gradienttrack:[1024,1025],graph:[1024,1027,1029,1031,1032,1033,1204,1205],greater:[40,41,930,933,960,1006,1131,1135],green:[40,41,42,1219,1220],grid:[930,987],group:[1040,1045],guid:[43,1175,1176,1221],gym:1175,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1221,half:[930,933,1075,1131,1135],hand:1175,handl:[40,41,42,43,854,855,856,872,874,883,884,895,902,905,1024,1027,1029,1031,1032,1033,1075,1208,1209,1210,1211,1212,1213],happen:43,has:[40,41,43,836,838,843,844,930,1009,1047,1052,1057,1060],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,930],hasattr:1075,have:[40,41,43,804,805,806,807,808,809,810,811,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,832,833,834,836,837,839,840,841,842,843,844,846,847,850,851,852,930,945,949,954,955,956,957,963,1009,1024,1030,1038,1057,1064,1075,1175,1217,1218],haven:43,hdf5:[40,41,1204,1205],head:[1156,1167,1192,1203],head_dim:[1192,1203],height:[1040,1045],height_cutoff:[40,41],help:[43,59,359,405,406,856,868,869,870,871,906,1024,1175,1183,1185,1186,1188,1189,1191],here:[43,1175],hidden:[1156,1166,1192,1201],hierarch:[930,947],hierarchi:[40,41],high:[40,41,455,1131,1133,1135],higher:[836,839,1024,1027,1029,1031,1032,1033],highest:[1131,1133],highest_util:1075,highest_util_nod:1075,highli:1175,highlight:1221,hint:43,hkt:1221,hold:[906,910,930,933,936,997,998],host:1175,hot:[930,991],how:[1175,1192,1203,1204,1205,1218,1221],howev:[43,1218],http:1221,hyperbol:[814,815,816,820,834,1057,1062,1063,1068,1070,1148,1155],hypothet:[43,1221],icon:1175,idea:1175,ident:[40,41,43,136,260,407,539,671,930],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[803,810,811,814,833],if_exist:[40,41],ignor:[40,41,1208,1212],ignore_key_error:[40,41],ignore_miss:[1208,1212],ignore_non:[40,41],iii:43,iinfo:[83,218,359,486,617,810],imag:[27,445,446,447,930,981,1041,1042,1043,1044,1045,1046,1156,1157,1158,1159,1160,1162,1163,1175,1221],image_dim:[1040,1044],imkkhk:1221,immedi:[1175,1218,1221],implement:[43,814,815,816,819,820,825,826,827,832,834,846,847,1175,1218,1221],in_featur:[1156,1165],inadvert:43,includ:[40,41,43,836,840,850,851,852,930,933,971,1007,1008,1020,1119,1120,1131,1135,1192,1202,1203,1206,1207,1217],include_deriv:[1119,1121,1128],include_empti:[40,41],include_inf:[40,41,930,971,1020],include_nest:[1119,1120],include_self:[40,41],inclus:[43,1131,1133],incom:[1156,1165],increas:[856,878,882,888,930,946,959,1022,1075,1119,1128],increasingli:1221,increment:[930,976,1075],inde:1175,indent:[40,41,42],independ:[1131,1132],index:[40,41,407,455,843,844,846,847,930,935,964,965,987,1006,1009,1119,1122,1124,1125,1126,1129],index_nest:1119,indic:[40,41,407,420,421,431,432,433,836,840,843,844,846,847,930,935,964,965,973,991,997,998,1119,1120,1122,1124,1125,1126,1127,1129,1130,1131,1132,1148,1153,1156,1157,1158,1159,1160,1161,1162,1163,1173,1174,1192,1193,1194,1195,1196,1197,1198,1199,1204,1205],indices_wher:[136,260,407,671,930],indistinguish:[814,833],inevit:1221,inf:[40,41,836,840,930,971,980,1020,1057,1060],infer:[804,807,848,849,854,855,930,969,972,996,1003,1040,1044,1047,1052,1218,1221],infin:[814,815,816,818,819,820,821,825,827,832,833,834,836,840,850,851,852,930,980],infinit:[814,833],inform:[810,811,812,1024,1035],init_c:[1156,1166],init_h:[1156,1166],init_on_first_step:[1208,1212],initi:[40,41,42,43,59,359,405,406,856,868,869,870,871,906,1024,1075,1156,1166,1175,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1208,1212],initialz:[1204,1205],inner:[1071,1072,1073,1074],inner_batch_fn:[1071,1072,1073],inner_batch_shap:[1156,1165],inner_cost_fn:[1071,1072,1073],inner_grad_step:[1071,1072,1073,1074],inner_learning_r:[1071,1072,1073,1074],inner_optimization_step:[1071,1072,1073,1074],inner_v:[1071,1072,1073],innermost:[804,808,836,837],inp:1075,inplac:[40,41,930,939,974,978,1010,1024,1027,1029,1031,1032,1033,1181,1182,1208,1209,1210,1211,1212,1213],inplace_arrays_support:[407,930],inplace_decr:[136,260,407,539,671,930],inplace_incr:[136,260,407,539,671,930],inplace_oper:[0,11,12],inplace_upd:[40,41,136,260,407,539,671,930,1181,1182],inplace_variables_support:[407,930],input:[15,18,19,40,41,42,43,804,807,808,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,839,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,865,866,873,874,875,878,879,882,888,900,901,906,910,911,913,914,915,916,917,921,922,930,931,932,935,937,938,939,940,942,943,944,945,946,948,950,951,953,954,955,956,957,958,959,960,961,962,969,971,972,973,975,976,977,979,980,981,985,986,987,988,995,1003,1004,1006,1009,1010,1011,1012,1014,1015,1016,1017,1019,1020,1022,1024,1028,1030,1035,1039,1040,1041,1042,1043,1044,1046,1047,1050,1052,1054,1055,1056,1057,1060,1062,1063,1064,1068,1069,1070,1071,1072,1073,1074,1075,1131,1132,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1173,1174,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1206,1207,1218],input_ax:[856,900,1075],input_channel:[1192,1193,1194,1195,1196,1197,1198,1201,1202],input_queu:1075,inputs_split:1075,insert:[843,844,930,959],insid:43,inspect:1075,inspir:1221,instal:1175,instanc:[15,16,17,18,19,40,41,43,455,856,865,1075,1181,1182,1214,1215],instead:[40,41,43,455,1138,1140,1141,1142,1143,1144,1145,1146,1221],int32:43,int64:[906,910,930,933,936,972,992,1023],int_dtyp:[906,915,925],integ:[40,41,455,810,812,814,817,818,831,836,840,850,851,852,906,922,930,933,960,1005,1131,1133,1136],integr:1175,intend:43,inter:1175,interact:1175,interchang:[40,41,930,1011],interest:1175,interfac:[930,936,1218],intermedi:[40,41],intern:[40,41,856,1024,1038,1075,1119,1120,1127,1128,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1214,1215],interpol:[930,981],intersect:[1057,1058],interv:[40,41,850,851,852,930,933,942,982,983,1057,1059,1131,1135],introduc:1221,inv:[744,1047,1221],invalid:[850,851,852],invalid_dtyp:906,invers:[814,815,816,1047,1049,1051,1057,1058,1059,1060,1062,1221],invert:[1047,1049,1051],invest:1221,investig:43,invoc:[854,855],irrespect:1175,is_al:1075,is_arrai:[136,260,407,539,671,930,1075],is_float_dtyp:906,is_int_dtyp:906,is_mean:1075,is_sum:1075,is_vari:[167,307,439,574,734,1024],isfinit:[88,223,364,491,622,814],isinf:[260,539,671,930],isinst:1075,isnan:[88,223,364,491,622,814],isnumer:1075,issu:[1175,1176],issue_numb:43,item:[15,19,40,41,856,865,866,868,875,877,879,881,887,906,913,930,947,970,1007,1008,1075,1119,1123,1124,1125,1128,1129,1130,1175,1204,1205,1217],iter:[15,16,17,18,19,40,41,42,854,855,856,859,860,862,863,865,866,869,870,877,879,880,881,882,887,900,930,932,940,945,946,972,987,992,995,996,998,1003,1005,1009,1012,1017,1022,1075,1119,1120,1121,1123,1127,1128],iterbal:[856,877,881,887,1075],its:[455,856,900,930,972,996,1011,1017,1075,1175],itself:[1119,1128],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,803,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1219,1220],ivy_backend:[40,41],ivy_bay:1221,ivy_test:43,ivyfcmodel:1217,ivyh:[40,41,42],ivymodul:[198,790],jame:1175,jax:[43,1024,1030,1175,1221],jax_concat:1175,jnp:1175,join:[40,41,930,945,1009,1075],journal:1175,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1175,1192,1201,1221],kaimingnorm:[1183,1187],kalman:1221,kalman_filt:1221,kalman_filter_step:1221,kalman_filter_upd:1221,keep:[40,41,856,901,930,1019,1075,1175,1176,1221],keep_inner_v:[1071,1072,1073],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1071,1072,1073],keepdim:[40,41,407,437,448,449,836,840,843,844,848,849,850,851,852,930,1019,1047,1050,1138,1140,1141,1142,1143,1144,1145,1146],kei:[15,16,17,40,41,42,43,856,868,930,947,1071,1072,1073,1075,1119,1122,1126,1156,1167,1168,1175,1181,1182,1192,1203,1208,1212],kept:[40,41,42,1071,1072,1073],kera:1221,kernel:[1156,1166],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,856,865,866,878,882,888,930,934,954,955,956,984,1075,1119,1123,1204,1205],keyword_color_dict:[40,41,42],kind:[810,811,812,1221],kwarg:[15,16,17,40,41,42,59,63,856,865,878,882,888,930,984,1075,1181,1182,1204,1205],kwarg_stateful_idx:[1204,1205],kwargs_clon:1075,kwargs_dist:1075,kwargs_uni:1075,label:[43,1169,1170,1171,1172],lamb:[1024,1031,1175,1208],lamb_upd:1024,lambda:[1075,1208,1211,1213,1217],lar:[1024,1031,1032,1175,1208],larger:[810,811,930,942],largest:[40,41,810,811,812,930,960],lars_upd:1024,last:[40,41,836,837,839,841,842,846,847,850,851,852,930,933,949,981,1005,1009,1047,1050,1138,1143,1145,1148,1153,1156,1166,1192,1202],later:[40,41,930,941],latest:[1192,1201],layer:[1024,1027,1029,1031,1033,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1173,1174,1175,1183,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1221],layer_norm:1173,layernorm:[1175,1206],layerwis:[1024,1032,1208,1211],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1119,1120,1127],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1148,1149,1150],leaky_relu:[782,1148],learn:[848,849,1024,1027,1029,1031,1032,1033,1047,1052,1071,1072,1073,1074,1131,1137,1175,1208,1209,1210,1211,1212,1213,1218,1221],learnabl:[1173,1174,1206,1207],least:43,leav:[15,18,19,40,41,1119,1120,1121,1127,1128],left:[40,41,43,843,844,1047,1050,1138,1140,1141,1142,1143,1144,1145,1146,1175],leftmost:[40,41],len:1075,length:[40,41,42,930,933,996,1006,1017],lenton2021ivi:1175,lenton:1175,less:[40,41,43,88,223,364,491,622,814,815,818,825,827,833,836,840,1075,1131,1135],less_equ:[88,364,491,622,814],less_util_node_str:1075,let:[1218,1221],level:1175,librari:[814,828,829,1175,1217,1221],lightweight:1175,like:[43,1024,1030,1131,1135,1175,1217,1218,1221],likewis:43,limit:[40,41,42,43,810,811,812,930,942,943,944],linalg:[29,1048,1049,1050,1051,1052,1053,1175],line:43,linear0:[1175,1217],linear1:1175,linear2:1217,linear:[930,962,981,1047,1148,1149,1150,1151,1156,1164,1175,1192,1193,1194,1195,1196,1197,1198,1199,1217],linear_algebra:[448,449,450,451,836,837,838,839,840],linear_resampl:[136,260,407,539,671,930],linearli:[930,962],link:[43,1175],linspac:[136,260,407,539,671,930,933],list:[15,18,19,40,41,353,354,355,358,804,805,806,809,841,842,850,851,852,856,865,866,875,876,878,879,880,882,885,886,900,930,933,936,938,987,1004,1005,1014,1019,1071,1072,1073,1075,1119,1120,1121,1123,1127,1128,1156,1157,1158,1159,1160,1161,1162,1163,1175,1176,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199],list_join:[40,41,42],list_stack:[40,41],liter:[836,840],littl:1218,load:[40,41],loaded_kwarg:1075,loader:1175,local:43,local_set:[930,970],locat:[43,930,980,1131,1132],log10:[88,364,491,622,814],log1p:[88,364,491,622,814],log2:[88,364,491,622,814],log:[754,814,826,836,838,930,983,1057,1075,1169,1170,1171,1172],logarithm:[814,825,826,827,836,838,1057,1067],logdet:[836,838],logic:[31,814,828,829,850,851,852,1055,1056,1175],logical_and:[321,751,1054],logical_not:[88,223,364,491,622,814],logical_or:[88,321,364,491,622,751,814,1054],logit:[1169,1172],logspac:[136,260,407,539,671,930],look:[43,1218,1221],loop:[1071,1072,1073,1074],loss:[1170,1171,1172,1175,1217],loss_fn:[1175,1217],lot:1218,low:[40,41,455,1131,1133,1135],lower:[40,41,43,804,808,930,986,1131,1135],lower_depth:[1204,1205],lowest:[15,18,19,40,41,1119,1128,1131,1133],lstm:[1156,1166,1175,1192],lstm_updat:[43,1156],machin:[810,811,812,848,849,1047,1052,1131,1137,1175,1218,1221],made:43,mai:[814,824,828,829,846,847,930,933,953,957,1175,1218,1221],main:[804,808,836,837,930,972,1175],mainli:1175,maintain:[43,846,847],make:[43,455,856,1075,1175,1218],maml:[1071,1072,1073],maml_step:1071,manag:[856,1075],manhattan:[836,840],mani:[40,41,43,930,1005,1175],manipulation_funct:[841,842],manner:[15,18,19,40,41,43,1119,1128],manual:[1119,1120,1127,1221],map:[40,41,42,856,865,930,980,1075,1119,1124,1125,1128,1192,1203,1217],map_cont:[40,41],map_nest_at_index:1119,map_nest_at_indic:1119,map_sequ:[40,41],mapper:[856,865,866,1075],mark:43,mask:[1156,1167,1168],master:43,match:[40,41,930,984],match_kwarg:930,math:[33,454,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1075,1175],mathbb:[1047,1053],mathbf:[1047,1053],mathemat:[803,836,840],matmul:[43,260,407,539,671,930,1221],matplotlib:1218,matric:[804,808,836,837,1156,1165],matrix:[40,41,804,808,836,837,930,932,943,985,1047,1048,1049,1050,1051,1052,1053,1156,1165,1192,1202],matrix_norm:[40,41,174,316,448,583,744,1047],matter:1175,max:[40,41,359,810,811,812,930,943,944,955,986,997,998,1075,1138,1140,1208,1210],max_batch_s:[40,41],max_chunk_s:[856,900,1075],max_depth:[40,41,856,860,863,870,878,882,888,930,970,1075,1119,1128],max_dev_dim_step_ratio:856,max_freq:[930,962],max_length:[40,41],max_node_dim_step_ratio:1075,max_norm:[40,41,930,943,944],max_split_factor_step_s:[856,1075],max_trust_ratio:[1024,1031,1208,1210],maxim:[1175,1218,1221],maximis:1175,maximum:[40,41,42,671,843,844,856,878,882,888,900,930,942,943,944,962,1024,1031,1075,1119,1128,1138,1140],mayb:[15,18,19],mdi:1075,mean:[40,41,455,856,885,886,887,888,900,930,955,1071,1072,1073,1074,1075,1119,1123,1131,1134,1138,1141,1144,1146,1183,1217,1221],measur:[1156,1167,1192,1203],mech:1175,mechan:[1175,1221],medic:1221,member:43,memori:[856,872,895,900,902,905,1075,1156,1166,1175],mention:43,merg:43,merge_with_upstream:43,meshgrid:[260,407,671,930],messag:[1219,1220],meta:[35,1072,1073,1074,1175],method:[40,41,42,43,455,930,936,947,987,997,998,1024,1031,1032,1075,1119,1120,1127,1128,1175,1192,1203,1204,1205,1218],might:[930,953,1221],min:[40,41,123,359,399,526,657,810,811,812,836,840,848,930,955,988,997,998,1007,1047,1052,1075,1138,1142],min_bas:[930,1008],min_denomin:[930,1007],min_dev_dim_s:856,min_node_dim_s:1075,min_sf_tune_step:[856,1075],min_unit_dev_tune_step:856,min_unit_node_tune_step:1075,mind:1175,mini:[1173,1174,1206,1207],minimum:[40,41,671,848,849,856,906,910,930,933,935,936,942,967,968,999,1000,1007,1008,1075,1138,1142],miss:[1208,1212],ml_framework:[930,933,1047,1052],mod:[930,961],mod_depth:[1204,1205],mod_height:[1204,1205],mod_with_top_mod_key_chain:[1204,1205],mode:[40,41,448,450,836,839,854,855,856,885,886,887,888,900,1047,1052,1075,1218],model:[1175,1217],modul:[40,41,42,59,930,989,1075,1175,1176,1178,1179,1180,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1206,1207,1214,1215,1221],moment:[1024,1026,1027,1031,1208,1209,1210],more:[43,841,842,930,1009,1075,1175,1218,1221],more_util_node_str:1075,most:[40,41,1047,1052,1175,1221],move:[40,41,43,856,901,1075],much:[43,1175,1221],multi:[455,930,989,1156,1167,1192,1203],multi_head_attent:1156,multi_index_nest:1119,multi_map:[40,41],multi_nod:1075,multidev:[856,867,868,869,888],multidevcontain:[40,41],multidevic:[856,865],multidevit:[856,859,862,865,866,870],multidevitem:[856,858,861],multidevnest:[856,860,863],multiheadattent:[1175,1192],multinod:[1075,1079],multinodecontain:1075,multinodeit:1075,multinodeitem:1075,multinodenest:1075,multinomi:[180,325,455,589,766,1131],multipl:[40,41,850,851,852,930,984,1005,1047,1049,1138,1140,1141,1142,1143,1144,1146,1173,1174,1192,1202,1218],multipli:[40,41,930,950,1138,1143],multiprocess:[40,41,42,407,671,856,865,930,1075],must:[40,41,42,43,804,805,806,807,808,809,814,815,816,817,818,819,820,821,823,824,825,827,828,829,832,833,834,836,837,840,841,842,846,847,848,849,850,851,852,856,885,886,887,888,900,930,933,945,947,949,957,986,988,998,1009,1057,1061,1064,1075,1131,1136,1208,1212],mutabl:[1119,1121,1128],mutlidevic:[856,865],mutlinod:1075,mw_tm1:[1024,1027,1031],mx_concat:1175,mxn:[804,808,836,837],mxnet:[1175,1221],my_func:43,mymodel:1175,name:[43,854,855,1217],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1218],nan:[40,41,43,803,814,815,816,818,819,820,821,822,825,827,832,833,850,851,852,930,971,1020],nativ:[15,17,18,19,40,41,43,856,872,874,883,884,895,902,905,906,911,918,919,1075,1175,1176,1181,1182],native_modul:[1181,1182],native_module_class:[1181,1182],nativearrai:[15,18,19,43,804,807,808,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,838,839,840,841,842,843,844,846,847,848,849,850,851,852,856,874,900,901,906,910,916,921,922,930,931,932,933,935,936,937,938,940,942,943,944,945,946,948,949,950,951,954,955,956,957,959,960,961,962,964,965,969,971,972,973,980,981,982,983,985,986,987,988,991,992,995,996,997,998,1003,1005,1006,1009,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1075,1119,1121,1128],natur:[814,826,836,838,1057,1067,1221],ncdhw:[1156,1161,1162,1192,1197,1198],nchw:[1156,1159,1160,1163,1192,1195,1196,1199],ncw:[1156,1157,1158,1192,1193,1194],ndarrai:[353,354,355,356,357,358,359,361,362,455,930,1015],ndhwc:[1156,1161,1162,1192,1197,1198],nearest:[814,831],need:[43,930,943,944,1156,1158,1160,1162,1175,1192,1194,1196,1198,1221],neg:[40,41,88,223,364,491,622,814,821,836,840,841,842,850,851,852,1138,1143,1145,1148,1150],negative_slop:1183,neither:1075,nest:[15,16,17,18,19,40,41,42,856,878,882,888,930,936,1014,1071,1072,1073,1075,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1204,1205,1208,1209,1210,1211,1212,1213],nested_indices_wher:1119,nested_map:[1075,1119],network:[1156,1165,1175,1176,1178,1192,1204,1205,1221],neural:[1156,1175,1178,1192,1217],never:43,new_node_percent_mem:1075,new_node_util:1075,new_node_utils_kei:1075,new_std:[1173,1174,1206,1207],newli:[43,854,855,930,940,941],newlin:[40,41,42],newshap:[930,940,996],next:[810,811,1075,1204,1205,1208,1209,1210,1211,1212,1213],nhwc:[1156,1159,1160,1163,1192,1195,1196,1199],node:[40,41,1119,1120,1127],node_clon:1075,node_dist:1075,node_dist_arrai:1075,node_dist_it:1075,node_in:1075,node_mapp:1075,node_str:1075,node_to_str:1075,node_util:1075,nodedistit:1075,nodedistitem:1075,nodedistnest:1075,nodemanag:[1075,1086],nodemapp:1075,nodemappermultiproc:1075,noinspect:[857,907,908,909,1025,1075],non:[40,41,814,828,829,836,840,850,851,852,854,855,906,920,1204,1205,1208,1212,1218],none:[40,41,42,43,59,61,64,353,354,355,356,358,405,407,408,410,412,419,420,421,422,429,430,431,432,433,434,435,436,438,448,449,455,456,804,805,806,807,809,810,811,812,836,840,841,842,843,844,848,849,850,851,852,854,855,856,865,866,872,873,898,899,900,901,906,913,914,915,930,933,936,952,953,958,963,964,965,970,972,974,975,976,977,978,982,983,989,991,992,995,997,998,999,1000,1005,1006,1007,1008,1017,1018,1023,1024,1027,1029,1031,1032,1033,1039,1040,1044,1047,1050,1052,1071,1072,1073,1074,1075,1119,1120,1123,1127,1128,1131,1132,1133,1134,1135,1138,1140,1141,1142,1143,1144,1145,1146,1156,1158,1160,1162,1165,1166,1167,1168,1173,1174,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],norm:[40,41,836,840,930,943,944,1047,1050,1174,1175,1207,1208,1210],normal:[1131,1134,1173,1174,1206,1207],normalized_idx:[1173,1174],normalized_shap:[1206,1207],notat:[40,41,1138,1139],note:[43,1047,1052],noth:[40,41,1218],notimplementederror:1075,now:[40,41,43,856,901,930,931,1075,1175,1192,1203,1204,1205,1217,1218,1221],np_concat:1175,np_finfo:359,ns_tune_step:1075,num:[407,429,430,930,982,983],num_arrai:[40,41],num_arrays_in_memori:930,num_arrays_on_dev:856,num_band:[930,962],num_channel:[1192,1199],num_chunk:1075,num_chunks_floor:1075,num_class:[1131,1132],num_cpu_cor:856,num_gpu:[129,405,856,1075],num_head:[1156,1167,1192,1203],num_kei:[1156,1167,1168],num_lay:[1192,1201],num_or_size_split:[40,41,407,434,930,1005],num_output:1075,num_queri:[1156,1167,1168],num_sampl:[407,428,455,456,930,981,1040,1041,1131,1132],num_task:[1071,1072,1073,1074],number:[40,41,42,803,810,811,812,814,818,836,838,839,850,851,852,854,855,856,892,893,894,906,917,921,922,930,933,942,946,959,962,969,972,981,982,983,986,990,995,1005,1012,1016,1020,1022,1071,1072,1073,1074,1075,1131,1132,1136,1138,1140,1141,1142,1144,1146,1156,1167,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1218,1221],numer:[43,814,818,821,822,823,828,829,830,930,967,968,999,1000,1007,1008,1057,1064,1183],numhead:[1156,1167],numpi:[40,41,43,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,836,839,930,1015,1047,1052,1138,1139,1175,1217,1218,1221],nwc:[1156,1157,1158,1192,1193,1194],obj:[40,41],object:[40,41,42,59,359,810,811,856,906,910,930,933,936,1024,1119,1122,1124,1125,1126,1129,1130,1131,1137,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205],object_in:[407,410,930,936],observ:1075,obvious:43,occupi:[810,811,812,930,997,998],off:[836,837,930,933],offer:1175,offset:[836,837,1173,1174],often:1218,old:[40,41],on_init:[1192,1203,1204,1205],onc:[43,856,900,1075,1131,1132,1175],one:[40,41,43,836,840,841,842,843,844,856,885,886,887,888,900,906,912,930,972,984,991,997,998,1006,1009,1047,1050,1075,1138,1139,1140,1141,1142,1143,1144,1145,1146,1175,1218,1221],one_hot:[136,407,539,671,930],onearrai:[930,959],ones:[40,41,77,212,353,480,611,804,807,930,972,991,1175],ones_lik:[77,212,353,480,611,804],ongo:43,onli:[40,41,43,455,814,828,829,841,842,856,1047,1052,1075,1119,1120,1121,1127,1208,1209,1210,1211,1212,1213,1217,1218],onlin:[43,1175],onto:[856,885,886,901,1075,1119,1123,1128],oom:[856,1075],open:[930,933,1131,1135,1175,1221],opencv:1218,oper:[40,41,43,930,939,954,955,956,982,983,1010,1024,1027,1029,1031,1032,1033,1054,1055,1056,1156,1157,1158,1159,1160,1161,1162,1163,1165],operand:[40,41,814,815,816,818,819,820,825,827,832,833,1138,1139],oppos:[930,962],optim:[856,1024,1027,1029,1031,1032,1033,1071,1072,1073,1074,1075,1175,1209,1210,1211,1213,1217,1221],optimizer_upd:1024,option:[15,18,19,40,41,42,43,353,354,355,356,358,804,805,806,807,809,836,840,841,842,843,844,848,849,850,851,852,854,855,856,865,866,874,878,879,880,881,882,885,886,887,888,895,898,899,900,901,905,906,911,916,920,929,930,932,933,935,936,943,944,945,950,952,953,962,963,964,965,969,971,972,979,981,982,983,984,987,989,991,992,995,997,998,1001,1003,1005,1006,1007,1008,1009,1017,1019,1020,1023,1024,1027,1029,1030,1031,1032,1033,1035,1040,1044,1047,1050,1052,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1131,1132,1138,1140,1141,1142,1143,1144,1145,1146,1148,1149,1153,1156,1164,1165,1167,1168,1169,1170,1171,1172,1173,1174,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1218],ord:[836,839,840],order:[40,41,42,43,836,840,841,842,846,847,1024,1027,1029,1031,1032,1033,1047,1050,1071,1072,1073,1214,1215],ordered_node_util_kei:1075,org:1221,organ:43,origin:[40,41,42,930,996,1023,1047,1050],other:[40,41,43,854,855,930,932,933,972,1024,1028,1131,1135,1175,1217,1218,1221],otherwis:[15,16,17,18,19,40,41,814,821,822,836,840,843,844,850,851,852,856,873,906,913,914,915,930,939,1017,1018,1021,1024,1030,1035,1039,1071,1072,1073,1075,1138,1140,1141,1142,1144,1146],our:[43,1175,1221],out:[43,455,804,806,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,825,826,827,828,829,832,833,836,837,838,840,841,842,843,844,846,847,850,851,852,930,933,1057,1060,1156,1164,1166,1175,1192,1200],out_feat_dim:[1156,1167],out_featur:[1156,1164,1165],out_i:[814,821,822],outdat:1221,outer:[1071,1072,1073,1074],outer_batch_fn:[1071,1072,1073],outer_batch_shap:[1156,1165],outer_cost_fn:[1071,1072,1073],outer_v:[1071,1072,1073],outlin:1218,output:[40,41,43,804,805,806,807,809,841,842,856,865,866,900,930,933,941,963,972,995,1012,1024,1028,1057,1061,1075,1131,1133,1134,1135,1156,1158,1160,1162,1164,1166,1167,1168,1175,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203],output_ax:[856,900,1075],output_axi:1075,output_channel:[1192,1193,1194,1195,1196,1197,1198,1201,1202],output_queu:1075,output_shap:[1156,1158,1160,1162,1192,1194,1196,1198],outsid:[930,942],over:[40,41,836,840,850,851,852,1047,1050,1131,1135,1138,1140,1141,1142,1144,1146,1173,1174,1206,1207],overal:1218,overflow:[930,933],overhead:1218,overrid:[930,991,1023],overriden:[1208,1212],overwrit:[40,41,856,900,1075],overwrite_at_key_chain:[40,41],own:[1175,1218,1221],packag:[43,1218],pad:[930,946,962,1022,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],pad_width:[407,930,946,1022],page:1175,pair:[1156,1168],parallel:[856,865,866,1075],parallelis:[856,865,866,1075],param:[40,41,42,407,420,421,804,805,807,843,844,848,849,856,900,930,931,964,965,991,992,1075,1204,1205,1217],paramet:[15,16,17,18,19,40,41,42,43,804,805,807,814,824,830,831,834,836,837,839,848,849,854,855,856,865,866,872,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,895,898,899,900,901,902,905,906,910,911,912,916,917,918,919,920,921,922,929,930,932,933,935,936,937,938,939,940,941,942,943,944,945,946,948,949,950,951,953,954,955,956,957,958,959,960,961,962,963,964,965,969,971,972,973,975,976,977,979,980,981,982,983,984,985,986,987,988,989,992,995,996,997,998,999,1000,1001,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1035,1037,1038,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217],parameter:[1131,1134,1135],pardo:1175,pars:[930,947],part:[804,808,1024,1027,1029,1031,1032,1033,1057,1060,1175,1204,1205,1218],partial:[40,41,43,1204,1205],particl:1221,particular:[43,1221],pass:[40,41,42,43,856,865,900,906,911,930,941,1024,1038,1071,1072,1073,1075,1181,1182,1204,1205,1208,1212,1214,1215],pattern:[40,41,930,954,955,956],peopl:43,per:[856,1075,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],percent_used_mem_on_dev:856,percent_used_mem_on_nod:1075,percentag:[856,895,1075],perf_count:1075,perform:[40,41,43,850,851,852,856,930,935,950,954,955,956,975,976,977,981,982,983,1024,1027,1029,1031,1032,1033,1040,1041,1071,1072,1073,1074,1075,1119,1124,1125,1138,1140,1141,1142,1143,1144,1145,1146,1148,1153,1156,1164,1166],period:43,permissable_step:1075,permit:43,permut:[455,930,1011,1017],perpendicular:[930,949],person:[43,1175],physci:1221,pickl:[40,41,1075],pickle_filepath:[40,41],pinv:[316,744,1047],pip:1175,pipelin:1217,pkk:1221,pkkm1:1221,pkm1km1:1221,place:[40,41,43,804,805,806,807,809,856,901,930,959,963,975,976,977,1075,1208,1209,1210,1211,1212,1213],placehold:[43,1119,1128],pleas:[43,455,1047,1052],point:[43,803,804,805,806,809,810,811,814,815,816,818,819,820,825,827,832,833,834,836,840,906,921,930,933,1057,1064],popul:[40,41,1131,1132],popular:1221,population_s:[455,456,1131,1132],portabl:[1175,1176],posit:[15,16,17,810,811,814,821,850,851,852,856,878,882,888,930,931,933,959,962,1075,1131,1136,1181,1182],possibi:[40,41],possibl:[43,930,984,1014,1040,1045,1221],post:[1173,1174],post_shap:[40,41],power:[930,967,999,1008,1183],practic:1175,pre:[856,1075,1175],pre_shap:[40,41],precis:[810,811,814,833],pred:[1169,1170,1171,1172],predict:[1169,1170,1171,1172,1221],preprint:1175,present:[40,41],preserv:[40,41,42,841,842,1024,1035],preserve_typ:[40,41,439,442,1024,1035],press:1175,prevent:[43,1024,1026,1027,1031,1075,1208,1209,1210],prevet:43,previou:[1024,1027,1031],previous:[930,941],prime:1175,print:[40,41,42,856,896,930,993,1175,1217],print_all_arrays_in_memori:930,print_all_arrays_on_dev:856,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1208,1212],prob:[455,456,1131,1132,1156,1164,1192,1200],probabl:[1131,1132,1156,1164,1192,1200],problem:[43,1221],process:[43,856,865,866,895,905,930,989,1075],process_specif:[856,895,905,1075],prod:[40,41,930,955],produc:[856,865,866,1075],product:[40,41,930,949,950,985,1138,1139,1156,1167,1168,1192,1203],profil:[129,254,405,532,663,856,1075],progress:43,project:[1175,1217,1218,1221],promot:[814,815,816,817,819,820,825,827,832,833,836,840,1057,1064],prompt:1175,properti:[40,41,359,856,868,1075,1204,1205,1208,1209,1210,1211,1213],provid:[40,41,43,841,842,843,844,850,851,852,854,855,856,873,906,913,914,915,920,929,930,953,991,998,1023,1024,1027,1029,1031,1032,1033,1039,1075,1175,1192,1201,1208,1209,1210,1211,1212,1213,1218],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1047,1051],pull:[1175,1176],pure:[40,41,1175,1221],purpos:[43,1221],put:1075,pybroadexcept:1075,pyprotectedmemb:1075,pyshadowingnam:[857,907,908,909,1025,1075],python:[40,41,856,895,905,930,933,1075,1175],pytorch:[1024,1027,1029,1031,1032,1033,1047,1052,1175,1208,1209,1210,1211,1212,1213,1217,1218,1221],pyunresolvedrefer:1075,quadrant:[1057,1061],qualiti:43,queri:[40,41,856,889,899,1075,1156,1167,1168,1192,1203],query_dim:[1192,1203],query_kei:[40,41],queue:[40,41,42,856,865,866,930,994,1001,1075],queue_class:[856,865,866,1075],queue_load_s:[40,41,42],queue_timeout:[40,41,42,930,1075],quick:[455,1175],quickli:[43,1217],radian:[814,819,832,1057,1058,1059,1061,1069],rai:[1057,1058],rais:[40,41,850,851,852,930,939,967,999,1006,1008,1018,1075,1204,1205,1208,1212],ram:[856,895,902,905,1075],randint:[180,325,455,589,766,1131],random:[37,40,41,456,1132,1133,1134,1135,1136,1137,1175],random_crop:1040,random_norm:[180,325,455,589,766,1131],random_uniform:[180,325,455,589,766,1131],randomli:[455,1040,1044,1156,1164,1192,1200],rang:[455,930,933,982,983,1057,1061,1075,1175,1217,1221],rank:[836,840,850,851,852,930,946,1019,1022],rate:[1024,1027,1029,1031,1032,1033,1071,1072,1073,1074,1192,1203,1208,1209,1210,1211,1212,1213],rather:[40,41,43,856,900,930,933,979,1024,1030,1075],ratio:[856,1024,1031,1040,1045,1075,1208,1210],raw:[40,41,1047,1052],raw_delta:1075,reach:[43,856,878,882,888,1075,1119,1128],read:[40,41],readi:[1075,1217],real:[1057,1058,1060],realiti:1218,rearrang:[40,41,930,954,956],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1071,1073],receiv:[43,856,865,866,930,934,984,1075,1192,1202],receivess:[856,1075],receivng:[1071,1074],recev:[1071,1072,1073],recognit:1221,recommend:[814,828,829,1175],rectifi:[1148,1150,1151],recurr:[1156,1166],recurrent_bia:[1156,1166],recurrent_kernel:[1156,1166],recurs:[40,41,1119,1120,1121,1127,1128],reduc:[40,41,843,844,850,851,852,856,900,930,955,1047,1052,1075,1138,1140,1141,1142,1143,1144,1145,1146],reduce_max:[40,41,187,330,457,594,773,1138],reduce_mean:[40,41,187,330,457,594,773,1138,1175,1217],reduce_min:[40,41,187,330,457,594,773,1138],reduce_prod:[40,41,187,330,457,594,773,1138],reduce_std:[40,41,330,1138],reduce_sum:[40,41,187,330,457,594,773,1075,1138],reduce_var:[40,41,187,330,457,594,773,1138],reduct:[39,40,41,407,432,433,850,851,852,930,955,997,998,1139,1140,1141,1142,1143,1144,1145,1146,1175],refactor:43,refer:[43,814,826,850,851,852,1024,1026,1027,1047,1053,1192,1202,1221],reflect:43,reflected_oper:[0,13,14],regard:[856,1075],regardless:[40,41,854,855],register_paramet:1217,reimplement:1221,rel:[836,837,841,842,846,847,1024,1027,1029,1031,1032,1033],rel_slice_obj:1075,relat:43,relev:[1208,1209,1210,1211,1212,1213],relu:[782,1148,1149,1150,1175,1217],remain:[43,930,996,1119,1123],remaind:[40,41,930,961,1005],remov:[40,41,43,836,837,843,844,930,1006,1071,1072,1073],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,841,842],rep:[930,1012],repeat:[40,41,43,260,671,930,956,1012,1075,1218],repeated_config_check:[856,1075],repeatedli:[1119,1126],repetit:[40,41,930,995,1012],replac:[40,41,43,455,456,930,942,997,998,1131,1132],repo:[43,1175],repositori:43,repres:[43,814,815,816,820,834,836,838,906,912,917,1156,1165],represent:[40,41,42,43,803,810,811,812,814,817,856,883,884,906,912,918,919,930,1004,1014,1075],reptil:[1071,1074],reptile_step:1071,request:[1175,1176],requir:[43,814,833,854,855,906,910,930,933,936,1181,1182],resampl:[930,981],reserv:43,reshap:[40,41,455,671,930],reshape_lik:[40,41],respect:[814,817,823,824,829,930,957,1024,1026,1027,1028,1029,1031,1032,1033,1047,1052,1057,1064,1071,1072,1073,1074],respond:43,respons:[43,1075],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,836,837,840,843,844,850,851,852,856,865,930,933,957,997,998,1009,1047,1050,1054,1055,1056,1057,1064,1075,1138,1140,1141,1142,1143,1144,1145,1146,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1175],ret:1075,ret_dict:1075,ret_fn:[856,865,866,1075],retain:[1024,1028],retain_grad:[439,440,1024,1028],retreiv:1075,retrn:[930,1004],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1071,1072,1073,1074],return_sequ:[1192,1201],return_st:[1192,1201],rev:[930,953],revers:[40,41,841,842,930,953,1017],review:43,right:[40,41,43],rk_e:1221,robot:1175,ronald:1175,root:[43,814,833],round:[88,223,364,491,622,814,818,833,930,933,1075],row:[930,972,1131,1132],rule:[930,933,1057,1064],run:[43,856,865,1024,1026,1027,1031,1071,1072,1073,1074,1075,1175,1176,1192,1203,1204,1205],safe:[856,865,1075],safety_factor:[856,1075],same:[15,16,17,40,41,43,804,807,808,814,818,831,836,837,839,841,842,843,844,846,847,856,865,866,900,901,906,910,930,931,945,960,961,964,965,991,997,998,1009,1023,1024,1030,1035,1057,1060,1071,1072,1073,1075,1138,1139,1156,1157,1158,1159,1160,1161,1162,1163,1175,1192,1193,1194,1195,1196,1197,1198,1199,1217,1221],same_arrai:[40,41],sampl:[930,981,1040,1041,1131,1132,1134,1135,1156,1164,1175,1192,1200],satisfi:[930,936,1047,1049,1053],save:[40,41,930,1002,1013,1040,1042,1204,1205],save_dir:[405,406,856,871,1075],save_weight:[1204,1205],scalar:[836,840,930,942,991,1016,1020],scale:[856,898,899,1024,1032,1075,1156,1164,1167,1168,1173,1174,1192,1200,1203,1208,1211],scaled_dot_product_attent:1156,scatter:[930,991,997,998],scatter_flat:[136,260,407,539,671,930],scatter_nd:[136,260,407,539,671,930],scene:[1024,1027,1029,1031,1032,1033],schemat:1175,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[843,844],second:[40,41,814,817,823,824,829,836,837,856,887,930,937,949,957,994,1001,1011,1024,1026,1027,1031,1071,1073,1075,1208,1209,1210],secondli:1221,sector:[814,815,816],see:[59,359,405,406,455,814,817,823,829,836,840,850,851,852,856,868,869,870,871,906,930,933,982,983,1024,1057,1064,1175,1183,1185,1186,1188,1189,1191],seed:[40,41,180,455,766,1131],seed_valu:[40,41,455,1131,1136],seem:1175,seen_set:[930,970],select:[930,936,1006,1218,1221],self:[40,41,59,359,405,406,856,868,869,870,871,906,1024,1075,1175,1183,1185,1186,1188,1189,1191,1208,1212,1217,1221],sent:1075,seper:[43,930,962],seq:[40,41,42,1138,1139,1204,1205],sequenc:[15,16,17,40,41,42,43,455,854,855,856,865,866,875,876,877,878,879,880,881,882,885,886,900,906,910,930,933,936,938,940,945,946,972,984,987,992,995,996,998,1005,1009,1012,1017,1022,1024,1028,1040,1044,1045,1047,1050,1075,1119,1130,1131,1133,1135,1138,1140,1141,1142,1143,1144,1145,1146,1156,1157,1158,1159,1160,1161,1162,1163,1173,1174,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1201,1204,1205,1206,1207,1208,1212,1214,1215],sequenti:1175,seri:43,set:[15,18,19,40,41,843,844,846,847,856,885,886,898,899,900,930,932,952,972,999,1000,1001,1002,1024,1027,1029,1030,1031,1032,1033,1047,1050,1075,1119,1120,1127,1129,1130,1131,1132,1136,1138,1140,1141,1142,1143,1144,1145,1146,1175,1192,1201,1208,1209,1210,1211,1212,1213,1218,1221],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:856,set_default_dtyp:906,set_default_float_dtyp:906,set_default_int_dtyp:906,set_default_nod:1075,set_exception_debug_mod:44,set_framework:[40,41,43,59,1075,1175,1217,1218,1221],set_ivy_backend:[40,41],set_min_bas:930,set_min_denomin:930,set_nest_at_index:1119,set_nest_at_indic:1119,set_queue_timeout:930,set_split_factor:[856,1075],set_stat:[1208,1209,1210,1211,1212,1213],set_tmp_dir:930,set_with_grad:1024,setter:1075,sever:1221,sgd:[1175,1208],shape0:1075,shape:[40,41,43,353,354,355,358,407,419,433,455,671,804,805,806,807,808,809,814,831,836,837,841,842,843,844,846,847,856,868,906,910,930,931,940,945,946,959,960,961,963,965,969,972,991,992,995,996,997,998,1004,1006,1009,1022,1023,1040,1044,1047,1049,1052,1057,1060,1061,1075,1131,1133,1134,1135,1138,1139,1156,1158,1160,1162,1192,1194,1195,1196,1197,1198,1199,1206,1207],shape_slic:[40,41],shape_to_tupl:930,share:[40,41,1175,1218],shift:1075,should:[40,41,42,43,455,804,808,814,815,816,817,818,819,820,821,822,823,825,827,828,829,832,833,834,836,837,840,843,844,854,855,856,930,940,941,947,991,996,1024,1027,1029,1031,1032,1033,1057,1064,1075,1138,1139,1175],show:[40,41,1175,1221],show_mod_in_top_mod:[1204,1205],show_structur:[1204,1205],show_sub_contain:[40,41],show_v:[1204,1205],show_v_in_top_v:[1204,1205],shown:[40,41],shp:1075,shuffl:[40,41,180,455,766,1131],shuffle_h5_fil:[40,41],side:43,sigmoid:[782,1148,1175,1217],sign:[836,838],signatur:[43,59,359,405,406,407,439,444,448,452,453,455,856,868,869,870,871,906,1024,1183,1185,1186,1188,1189,1191],signific:1221,similar:[43,1156,1167,1192,1203],similarli:[1047,1052],simpl:[43,930,958,1175,1218,1221],simpler:43,simplest:1218,simpli:[40,41,43,1175,1218,1221],simultan:1175,sin:[88,223,364,491,622,814,930,962,1057,1069,1218],sinco:1218,sine:[814,816,832,1057,1059,1068],singl:[40,41,854,855,856,865,866,885,886,887,888,930,1006,1016,1020,1040,1045,1075,1131,1134,1135,1138,1140,1141,1142,1143,1144,1145,1146,1175,1218,1221],singleton:[836,840,850,851,852],singular:[836,839],sinh:[754,1057],siren:[1175,1183],situat:43,size:[40,41,42,407,432,836,837,839,843,844,850,851,852,856,879,880,881,882,898,899,900,930,933,940,982,983,997,1005,1040,1044,1047,1050,1075,1131,1132,1134,1135,1138,1140,1141,1142,1143,1144,1145,1146,1192,1193,1194],size_ordered_arrai:[40,41],skew:[1047,1053],skinv:1221,skip:[40,41],slice:[40,41,930,964,965,1075,1119,1126],slice_kei:[40,41],slice_obj:[40,41,1075],slice_via_kei:[40,41],slide:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],slodget:836,slogdet:[111,237,387,514,645],slope:[1148,1150],small:[1169,1170,1171,1172,1173,1174,1175,1206,1207,1218],smaller:[930,942],smallest:[40,41,810,811,812,814,818,930,935],smallest_norm:[359,810,811],softmax:[196,466,782,1148,1156,1167,1168],softplu:[782,1148],solut:43,solv:1221,some:[40,41,43,930,933,1024,1026,1027,1029,1031,1032,1033,1038,1156,1164,1175,1192,1200,1218,1221],some_backend:43,some_namespac:43,someth:[43,1221],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,836,839,847,1075],sort_by_kei:[40,41],sorting_funct:[846,847],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,353,354,355,356,357,358,359,361,362,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,858,859,860,861,862,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1219,1220,1221],space:[930,933,962,982,983],spars:[1169,1172],sparse_cross_entropi:1169,spawn:[930,989],special:[43,814,815,816,818,819,820,825,827,832,833],specif:[40,41,43,814,828,829,856,898,930,947,954,955,956,989,1071,1072,1073,1074,1075,1131,1137,1175,1204,1205,1217,1218],specifc:[1131,1132],specifi:[40,41,804,805,806,808,809,836,837,840,841,842,843,844,846,847,850,851,852,856,875,876,877,878,879,880,881,882,885,886,890,892,896,899,900,901,906,910,912,930,933,935,936,942,945,946,963,964,965,971,982,983,1009,1019,1022,1047,1050,1075,1119,1124,1125,1129,1130,1138,1139,1140,1141,1142,1143,1144,1145,1146],sphinx:43,split:[40,41,136,260,407,539,671,856,865,879,880,881,882,898,899,900,930,984,1075],split_arg:1075,split_factor:[856,865,1075],split_func_cal:[856,1075],split_siz:1075,spread:[856,888,1075],sqrt:[88,223,364,491,622,814,836,840],squar:[814,833,836,838,930,972,1047,1049],squeez:[136,260,407,539,671,930],stabil:[846,847,930,1007,1008],stabl:[846,847,930,967,968,999,1000,1007,1008],stable_divid:930,stable_pow:930,stack:[40,41,260,671,804,808,836,837,930,1040,1045,1119,1120,1127,1192,1201],stack_imag:[170,312,444,579,740,1040],stacked_dim_s:1075,stage:43,standard:[40,41,810,811,1131,1134,1138,1144,1173,1174,1175,1176,1206,1207],start:[40,41,43,405,406,407,408,429,430,455,856,871,930,933,982,983,1075,1175,1218],starting_index:[40,41],starting_split_factor:[856,1075],state:[1075,1156,1166,1175,1178,1179,1180,1181,1182,1183,1185,1186,1188,1189,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217],statement:1218,static_argnam:[407,412,854,855],static_argnum:[407,412,854,855],statistical_funct:[848,849],std:[455,1131,1134],step:[40,41,407,408,856,930,933,982,983,1024,1026,1027,1029,1031,1032,1033,1071,1072,1073,1074,1075,1175,1208,1209,1210,1211,1212,1213,1217,1221],stephen:1175,stick:1175,still:[40,41,43],stochast:[1208,1213],stop:[40,41,405,406,407,408,429,430,856,871,900,930,933,982,983,1024,1027,1029,1031,1032,1033,1035,1071,1072,1073,1074,1075,1208,1209,1210,1211,1212,1213],stop_gradi:[40,41,307,439,574,734,856,900,1024,1027,1029,1031,1032,1033,1071,1072,1073,1074,1075,1208,1209,1210,1211,1212,1213],stopiter:1075,store:[40,41,930,962,1005,1024,1038,1204,1205],store_var:[1204,1205],str:[15,16,17,40,41,42,43,353,354,355,356,358,359,361,362,804,807,810,811,812,854,855,856,865,866,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,900,906,911,912,917,918,919,920,921,922,929,930,936,952,954,955,956,987,989,992,997,998,1047,1050,1052,1071,1072,1073,1074,1075,1119,1123,1138,1139,1181,1182,1192,1203,1204,1205],str_to_nod:1075,straight:1218,strength:[1175,1221],stride:[1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],string:[40,41,43,856,872,874,883,884,889,895,901,902,905,906,910,916,918,919,920,929,930,933,936,952,972,992,1023,1075,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199,1204,1205],structur:[40,41,42,43,930,947],structural_diff:[40,41],style:43,sub:[40,41,43,836,837,856,879,880,885,886,887,888,930,1005,1071,1072,1073,1074,1075],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1075,sub_mod:[1204,1205],sub_modul:[1214,1215],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1175,1176,1206,1207,1214,1215],subsequ:43,subset:43,substr:[40,41],suffici:[1047,1052],suggest:1175,suitabl:[1040,1045],sum:[40,41,407,432,433,836,840,856,885,886,887,888,900,930,951,955,997,998,1075,1138,1139,1145],summat:[40,41,1138,1139],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,117,119,122,124,126,127,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,175,176,177,181,182,183,184,185,186,188,189,190,191,192,193,194,197,199,200,202,203,204,205,206,207,208,213,214,215,216,217,219,220,221,224,225,226,227,228,229,230,231,232,233,234,235,238,239,240,241,243,245,248,251,252,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,313,314,315,317,318,319,320,322,323,326,327,328,329,331,332,333,334,335,336,337,338,341,343,344,345,346,347,348,349,354,355,356,357,358,360,361,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,388,389,390,391,393,395,398,400,402,403,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,445,446,447,449,450,451,454,456,458,459,460,461,462,463,464,467,468,470,471,472,473,474,475,476,481,482,483,484,485,487,488,489,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,515,516,517,518,520,522,525,527,529,530,533,534,535,536,537,538,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,575,576,577,578,580,581,582,584,585,586,590,591,592,593,595,596,597,598,599,600,601,605,606,607,612,613,614,615,616,618,619,620,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,646,647,648,649,651,653,656,658,660,661,664,665,666,667,668,669,670,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,735,736,737,738,739,741,742,743,745,746,747,748,749,750,752,753,755,756,757,758,759,760,761,762,763,764,765,767,768,769,770,771,772,774,775,776,777,778,779,780,783,784,785,786,787,788,789,791,792,794,795,796,797,798,799,800,805,806,807,808,809,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,837,838,839,840,842,844,847,849,851,852,855,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1072,1073,1074,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1170,1171,1172,1174,1175,1179,1180,1182,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1220,1221],supports_inplac:930,suppos:1221,sure:43,svd:[111,237,387,514,645,836],swap:[40,41,930,1011],swapax:[40,41,539,671,930,1221],symmetr:[1047,1053],syntax:[405,407,439,444,448,452,453,455],tab:1175,take:[43,930,981],taken:[43,836,837,1138,1140,1141,1142,1144,1146],tan:[754,1057,1060],tangent:[814,834,1057,1060,1061,1062,1069,1070,1148,1155],tanh:[88,223,364,491,622,782,814,1057,1148],target:[40,41,856,872,875,876,877,878,879,880,881,882,885,886,887,888,901,1075,1175],target_dict:[40,41],task:[43,1071,1072,1073,1074],team:[43,1221],templat:1175,temporari:[930,1002,1013],tensor:[40,41,43,407,432,433,856,874,906,916,930,933,935,940,982,983,986,988,991,992,996,997,998,1005,1023,1075,1131,1132,1133,1156,1164,1166,1175,1192,1200,1202,1208,1209,1210,1211,1212,1213,1217,1218],tensorflow:[43,1047,1052,1156,1158,1160,1162,1175,1192,1194,1196,1198,1218,1221],term:[40,41,43,1156,1166,1175,1192,1202],termcolor:[40,41,42],termin:[40,41,42,1075],test:[43,814,821,822,850,851,852,906,921,922],test_array_api:43,tf_concat:1175,than:[40,41,43,810,811,814,815,818,825,827,833,836,840,841,842,856,900,930,933,942,960,979,986,1006,1009,1024,1030,1075,1131,1135,1175,1218],thei:[40,41,1057,1061,1071,1072,1073,1131,1132,1175,1214,1215,1218],them:[1175,1221],themselv:[1119,1120],therefor:43,thi:[40,41,42,43,814,828,829,836,838,843,844,856,878,882,888,895,900,905,930,933,962,994,996,1001,1024,1027,1029,1030,1031,1032,1033,1038,1047,1050,1075,1119,1123,1128,1138,1140,1141,1142,1143,1144,1145,1146,1156,1165,1175,1204,1205,1208,1209,1210,1211,1212,1213,1217,1218,1221],thing:[43,1175],those:[40,41,43,836,839,930,942,1024,1038,1075],though:43,thought:43,threshold:[930,986,988],through:[40,41,43],tick:43,tickbox:43,tile:[260,539,671,930],time:[43,930,1012,1024,1027,1031,1071,1072,1073,1074,1075,1131,1132,1156,1166,1192,1203,1204,1205,1221],timeout:[40,41,42,856,865,866,930,994,1001,1075],timestep:[1156,1166,1192,1201],titl:[43,1175],tmp_dir:930,tmp_dr:[930,1002],to_appli:[40,41],to_clon:[856,1075],to_dev:[40,41,129,254,405,532,663,856],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[856,1075],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1175],to_ivy_modul:[198,790,1175,1181],to_json:[40,41],to_kv_fn:[1156,1167],to_kv_v:[1156,1167],to_list:[40,41,407,671,930],to_multi_dev:[40,41],to_mut:[1119,1121,1128],to_n:[15,40,41,1175],to_nod:1075,to_numpi:[40,41,407,671,930,1175,1217],to_out_fn:[1156,1167],to_out_v:[1156,1167],to_q_fn:[1156,1167],to_q_v:[1156,1167],to_raw:[40,41],to_scalar:[407,671,930],todo:[1075,1175,1176],togeth:[40,41,1214,1215],tool:[1175,1218],top_mod:[1204,1205],topic:1221,torch:[43,854,855,1175,1217,1218,1221],torch_concat:1175,torchfcmodel:1217,total:[40,41,42,856,902,1075],total_mem_on_dev:856,total_mem_on_nod:1075,tpu:[856,903,1075],tpu_is_avail:[405,532,663,856,1075],trace:[40,41,930,979],track:[43,856,1075,1119,1128,1204,1205],track_submod_call_ord:[1204,1205],track_submod_ret:[1204,1205],trail:[1206,1207],train:[1024,1026,1027,1031,1175,1176],trainabl:[1024,1030,1175,1176,1181,1182,1204,1205,1214],trainer:1175,tran:1221,transform:[1156,1164,1165],transpos:[40,41,136,260,407,671,856,887,930,1075,1156,1158,1160,1162,1192,1194,1196,1198],travers:[15,18,19,40,41,1119,1128],treat:[40,41,854,855],tri:[40,41],triangular:[804,808],trigonometr:[1057,1058,1060],tril:[77,212,353,480,611,804],trim_kei:[40,41],trust:[1024,1031,1208,1210],truth:[814,823,824,930,957,1054,1055,1056],try_else_non:930,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[856,1075],tune_dev_alloc:856,tune_dev_split:856,tune_node_alloc:1075,tune_node_split:1075,tune_step:[856,1075],tupl:[15,16,17,18,19,40,41,43,353,354,355,358,804,805,806,809,836,839,840,841,842,848,849,850,851,852,854,855,930,946,962,963,1004,1022,1075,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1133,1138,1140,1141,1142,1143,1144,1145,1146],tutori:43,two:[40,41,804,808,836,837,838,839,930,933,937,949,985,1011,1047,1050],type:[15,18,40,41,42,43,59,361,362,405,406,804,805,806,807,808,809,811,812,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,831,832,833,834,836,837,840,841,842,846,847,850,851,852,856,868,869,870,871,883,884,888,900,906,910,911,912,916,917,918,919,920,921,922,929,930,931,933,936,945,947,957,960,961,963,972,979,991,992,1010,1020,1023,1024,1030,1035,1057,1064,1075,1175,1183,1185,1186,1188,1189,1191,1204,1205,1218],types_to_iteratively_nest:[40,41,42],uint8:[1040,1042,1046],uint8_img_to_float_img:1040,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[814,817],underwai:43,unecessari:43,unfairli:43,unif:1075,unifi:[40,41,856,885,886,887,888,900,1075,1175],uniform:[40,41,1131,1132,1134,1135,1183,1185,1186,1189,1190],uniformli:[1131,1133,1135],unify_arrai:1075,unify_it:1075,unify_nest:1075,uniniti:[804,805],union:[15,18,19,40,41,43,353,354,355,356,358,359,361,362,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,836,838,839,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,874,879,880,881,882,900,901,906,910,911,912,916,917,918,919,920,921,922,929,930,931,932,933,935,936,937,938,940,942,943,944,945,946,948,949,950,951,954,955,956,957,959,960,961,962,963,964,965,969,971,972,973,980,981,982,983,985,986,987,988,991,992,995,996,997,998,1003,1004,1005,1006,1009,1011,1012,1014,1015,1016,1017,1019,1020,1021,1022,1023,1075,1119,1120,1121,1127,1128],uniqu:[856,865,866,1071,1072,1073,1074,1075,1119,1123],unique_kwarg:1075,unit:[43,856,1057,1058,1059,1075,1148,1149,1150,1151],unitari:[836,839],unless:[930,991,1023],unlik:[856,1075],unnorm:[1131,1132],unpack:[930,1019],unrol:[1156,1166],unset:1218,unset_debug_mod:44,unset_default_devic:856,unset_default_dtyp:906,unset_default_float_dtyp:906,unset_default_int_dtyp:906,unset_framework:[59,1218],unset_with_grad:1024,unstack:[40,41,136,260,407,539,671,930],until:43,unus:[854,855],updat:[40,41,407,432,433,856,865,930,977,997,998,1024,1026,1027,1029,1031,1032,1033,1071,1072,1073,1075,1119,1124,1125,1129,1130,1156,1166,1175,1176,1181,1182,1208,1209,1210,1211,1212,1213,1218,1221],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1131,1135],upper_depth:[1204,1205],upstream:43,usabl:[1175,1221],usag:[856,900,1075],use:[40,41,42,43,455,856,865,866,891,903,930,995,1007,1008,1047,1052,1075,1156,1167,1173,1174,1175,1206,1207,1218,1221],used:[40,41,43,455,836,837,856,865,895,898,899,905,906,917,930,967,968,984,997,998,999,1000,1023,1024,1031,1032,1047,1050,1071,1072,1073,1074,1075,1119,1128,1192,1203,1208,1210,1211,1217,1218],used_dev:[856,865],used_mem_on_dev:856,used_mem_on_nod:1075,used_node_str:1075,used_node_strs_dict:1075,useful:[40,41,856,900,1075,1156,1165,1175,1218],user:[1175,1192,1203,1204,1205,1218,1221],uses:1175,using:[40,41,43,1024,1026,1027,1119,1122,1126,1138,1139,1156,1164,1168,1175,1192,1200,1217,1218,1221],util:[856,889,1075],utility_funct:[850,851,852],v_with_top_v_key_chain:[1204,1205],val:[40,41,407,424,425,426,930,975,976,977,999,1000],valid:[850,851,852,906,911,930,1007,1008,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],valid_dtyp:906,valu:[40,41,407,814,818,823,824,831,836,838,839,840,843,844,846,847,848,849,856,868,899,900,930,931,933,935,942,943,944,946,947,953,957,962,963,964,965,980,982,983,986,988,994,995,996,997,998,999,1000,1001,1017,1020,1021,1022,1024,1028,1031,1040,1046,1054,1055,1056,1057,1065,1066,1067,1071,1072,1073,1075,1119,1123,1124,1125,1129,1130,1131,1134,1135,1138,1140,1142,1156,1167,1168,1173,1174,1192,1203,1206,1207,1208,1210],value_is_nan:930,vanilla:[1071,1073],var_shap:1183,variabl:[15,16,17,18,19,40,41,307,439,574,734,930,939,975,976,977,978,979,1010,1024,1027,1028,1029,1030,1031,1032,1033,1035,1038,1071,1072,1073,1074,1156,1167,1173,1174,1181,1182,1183,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215],variable_data:[439,734,1024],varianc:[40,41,1138,1146,1221],varieti:1218,variou:[43,1175],vector:[40,41,448,451,836,839,840,930,944,949,1047,1053,1156,1165,1192,1202],vector_norm:[40,41,111,237,387,514,645,836],vector_to_skew_symmetric_matrix:[174,316,448,583,744,1047],verbos:1220,veri:[43,1175],verifi:43,via:[1119,1120,1127,1218],view:[1040,1045],vision:1175,visual:1218,volum:[1156,1161],vw_tm1:[1024,1027,1031],wai:[1218,1221],wait:[40,41,42,43],want:[43,1175,1218,1221],warn:[59,66,67,68,69,70],warp:[444,445,1040,1041],watch:1217,websit:43,weight:[1024,1026,1027,1029,1031,1032,1033,1156,1165,1166,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205,1208,1210,1211],weight_initi:[1192,1193,1194,1195,1196,1197,1198,1199,1201,1202],weights_path:[1204,1205],well:[40,41,930,971],were:[40,41,1075],what:[43,1175],when:[40,41,42,43,836,839,856,930,941,1008,1021,1075,1175,1204,1205,1218,1221],where:[40,41,43,260,407,671,814,826,836,839,850,851,852,930,933,940,942,946,959,973,980,991,1022,1119,1120,1127,1131,1132],wherea:43,wherebi:[1119,1128],whether:[15,18,19,40,41,42,814,822,850,851,852,854,855,856,874,887,891,895,900,903,905,906,916,920,921,922,929,930,932,937,938,950,953,958,962,969,971,974,978,979,984,1003,1010,1019,1020,1024,1027,1028,1029,1030,1031,1032,1033,1035,1071,1072,1073,1074,1075,1119,1120,1121,1123,1127,1128,1131,1132,1148,1149,1156,1164,1175,1181,1182,1192,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],which:[40,41,42,43,455,804,805,806,807,808,809,810,811,812,836,837,840,841,842,843,844,846,847,848,849,850,851,852,854,855,856,865,866,874,879,880,881,882,885,886,887,888,890,892,896,898,899,900,906,911,916,920,929,930,933,936,945,947,949,950,951,953,963,964,965,966,972,973,981,982,983,990,991,992,993,995,997,998,1005,1009,1019,1021,1023,1024,1027,1028,1029,1031,1032,1033,1035,1037,1038,1040,1042,1047,1050,1057,1061,1075,1119,1123,1124,1125,1129,1130,1131,1132,1133,1134,1135,1138,1140,1141,1142,1143,1144,1145,1146,1148,1153,1156,1167,1168,1175,1181,1182,1192,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1214,1215,1217,1218],whilst:43,whitespac:[40,41,42],who:43,whose:[804,808,814,815,816,819,820,832,834,836,837,841,842,930,936,941,1138,1139,1140,1141,1142,1144,1146],why:[1175,1176],width:[1040,1045],wiki:1221,wikipedia:1221,window:[1040,1045,1156,1157,1158,1159,1160,1161,1162,1163,1192,1193,1194,1195,1196,1197,1198,1199],wise:[40,41,814,817,823,824,828,829,831,930,942,957,960,961,986,988,1024,1027,1029,1031,1033,1054,1055,1056,1057,1058,1059,1060,1061,1064,1065,1066,1067,1069,1148,1149,1150,1151,1152,1153,1154,1155],wish:1218,with_bia:[1192,1202],with_cal:[930,953],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1024,1034],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1075,with_partial_v:[1204,1205],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,407,434,930,1005,1075],with_to_kv_fn:[1192,1203],with_to_out_fn:[1192,1203],with_to_q_fn:[1192,1203],within:[15,18,19,43,836,839,930,933,1131,1135],without:[40,41,43,930,994,996,1001,1119,1121,1218],wonder:1175,word:[15,16,17,930,933,1131,1135,1181,1182],work:[43,1217],worker:[856,865,866,1075],worker_class:[856,865,866,1075],worker_kwarg:1075,would:[43,1148,1153,1175,1218,1221],wrap:[15,40,41,42,43,405,407,439,444,448,452,453,455,930,941,1024,1038,1175],write:[40,41,43,1175,1176,1221],written:[43,1175,1221],ws_new:[1024,1027,1029,1031,1032,1033],x1_i:[814,817,823,824,829,930,957,1057,1064],x2_i:[814,817,823,824,829,930,957,1057,1064],x_feat_dim:[1156,1167],x_i:[814,815,816,818,819,820,821,822,825,827,828,832,833,834],x_in:[1175,1217],x_inv:[1047,1049],x_max:[407,930,942],x_min:[407,930,942],x_sub:1075,xkk:1221,xkkm1:1221,xkm1km1:1221,xs0:1075,xs_t:1075,year:[1175,1221],yet:[1119,1128,1221],yield:[930,1021],you:[43,1175,1217,1218,1221],your:[1175,1176,1217,1218,1221],your_awesome_project:1218,yourself:[43,1175],yourslef:43,youtub:43,zero:[40,41,77,212,353,480,611,804,805,808,814,828,829,836,840,850,851,852,930,946,991,997,998,1022,1023,1024,1026,1027,1031,1032,1156,1164,1175,1183,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1208,1209,1210,1211],zero_pad:[260,407,539,671,930],zeros_lik:[136,260,407,539,671,930],zip:1075,zk_e:1221},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","round","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","round","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","round","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","round","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","round","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","round","sin","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":953,"function":[77,83,88,110,116,118,120,121,123,125,212,218,223,236,242,244,246,247,249,250,353,359,364,386,392,394,396,397,399,401,480,486,491,513,519,521,523,524,526,528,611,617,622,644,650,652,654,655,657,659,804,810,814,835,841,843,845,846,848,850],Ones:1188,Using:1218,abs:[261,540,672,931],aco:[755,1058],acosh:[89,224,365,492,623,815],activ:[196,340,466,603,782,1148,1178],adam:1209,adam_step:1026,adam_upd:1027,algebra:[111,174,237,316,387,448,514,583,645,744,836],all:[126,251,402,529,660,851],all_equ:932,all_nested_indic:1120,ani:[127,252,403,530,661,852],api:[0,43,75,210,351,478,609,802],arang:[137,262,408,541,673,933],arg_nam:934,argmax:[119,245,395,522,653,844],argmin:[138,409,542,674,935],args_to_ivi:16,args_to_n:17,argsort:[122,248,398,525,656,847],arithmet:1,arrai:[0,3,43,75,139,210,263,351,410,478,543,609,675,802,936],array_equ:[264,676,937],arrays_equ:938,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[756,1059],asinh:[90,366,493,624,816],assert_supports_inplac:939,atan2:[758,1061],atan:[757,1060],atanh:[759,1062],attribut:5,backend:[43,73],bilinear_resampl:[171,313,445,580,741,1041],binary_cross_entropi:1170,bitwis:7,bitwise_and:[91,225,367,494,625,817],broadcast_to:[265,677,940],builder:51,cache_fn:941,cast:[140,266,411,544,678,910],ceil:[92,226,368,495,626,818],choleski:[745,1048],choose_random_framework:61,citat:1175,clear_framework_stack:62,clear_mem_on_dev:[665,872],clip:[267,679,942],clip_matrix_norm:943,clip_vector_norm:944,clone:1090,clone_arrai:1091,clone_it:1092,clone_nest:1093,clonedit:1077,cloneditem:1076,clonednest:1078,closest_valid_dtyp:911,code:1221,comparison:9,compil:[268,412,680,854,855],concaten:[141,269,413,545,681,945],constant:[76,211,352,479,610,803],constant_pad:[270,546,682,946],contain:[40,41],container_typ:[683,947],content:1175,contribut:43,conv1d:[202,343,470,794,1157,1193],conv1d_transpos:[203,344,471,795,1158],conv1dtranspos:1194,conv2d:[204,345,472,605,796,1159,1195],conv2d_transpos:[205,346,473,797,1160],conv2dtranspos:1196,conv3d:[206,347,474,606,798,1161,1197],conv3d_transpos:[207,348,475,799,1162],conv3dtranspos:1198,convers:15,convert:[198,790,1181],convert_dtyp:912,copy_arrai:[684,948],copy_nest:1121,core:[128,253,404,531,662,853],cos:[93,369,496,627,819],cosh:[94,370,497,628,760,820,1063],cprint:1220,creat:43,creation:[77,212,353,480,611,804],cross:[271,685,949],cross_entropi:1171,cumprod:[142,272,414,686,950],cumsum:[687,951],current_framework:63,current_framework_str:[688,952],data:[83,87,218,222,359,363,486,490,617,621,810,813],debug_mod:45,debugg:44,default_devic:873,default_dtyp:913,default_float_dtyp:914,default_int_dtyp:915,default_nod:1094,depthwise_conv2d:[208,349,476,607,800,1163],depthwiseconv2d:1199,design:43,dev:[131,256,534,666,874],dev_clon:875,dev_clone_arrai:876,dev_clone_it:877,dev_clone_nest:878,dev_dist:879,dev_dist_arrai:880,dev_dist_it:881,dev_dist_nest:882,dev_from_str:[132,257,535,667,883],dev_to_str:[133,258,536,668,884],dev_unifi:885,dev_unify_arrai:886,dev_unify_it:887,dev_unify_nest:888,dev_util:889,devclonedit:859,devcloneditem:858,devclonednest:860,devdistit:862,devdistitem:861,devdistnest:863,devic:[20,129,254,405,532,663,856],devmapp:865,devmappermultiproc:866,diagon:[112,238,388,515,646,837],distribute_nest:1095,divid:1064,document:1175,dropout:[1164,1200],dtype:[143,273,415,547,689,906,916],dtype_bit:[144,274,416,548,690,917],dtype_from_str:[145,275,417,549,691,918],dtype_to_str:[146,276,418,550,692,919],ecosystem:52,einops_rearrang:954,einops_reduc:955,einops_repeat:956,einsum:[188,331,458,595,774,1139],elementwis:[88,223,364,491,622,814],empti:[78,213,354,481,612,805],equal:[95,371,498,629,957],erf:[454,761,1065],execute_with_gradi:[168,308,440,575,735,1028],exist:958,exp:[762,1066],expand_dim:[277,693,959],finfo:[85,220,361,488,619,811],firstlayersiren:1185,flip:[117,243,393,520,651,842],float_img_to_uint8_img:1042,floor:[278,694,960],floormod:[279,695,961],fomaml_step:1072,fork:43,fourier_encod:962,framework:59,full:[147,280,419,551,696,963],func:72,gather:[148,281,420,552,697,964],gather_nd:[149,282,421,553,698,965],geglu:1179,gelu:[341,467,783,1149,1180],gener:[22,136,260,407,539,671,930],get_all_arrays_in_memori:966,get_all_arrays_on_dev:890,get_framework:64,get_min_bas:967,get_min_denomin:968,get_num_dim:[699,969],get_referrers_recurs:970,glorotuniform:1186,gpu_is_avail:[891,1096],gradient:[24,167,307,439,574,734,1024],gradient_descent_upd:1029,gradient_imag:[172,314,446,581,742,1043],gym:53,handler:59,has_nan:971,ident:[150,283,422,554,700,972],iinfo:[86,221,362,489,620,812],imag:[26,170,312,444,579,740,1040],index_nest:1122,indices_wher:[151,284,423,701,973],initi:1183,inplac:11,inplace_arrays_support:974,inplace_decr:[152,285,424,555,702,975],inplace_incr:[153,286,425,556,703,976],inplace_upd:[154,287,426,557,704,977],inplace_variables_support:978,inv:[746,1049],invalid_dtyp:920,is_arrai:[155,288,427,558,705,979],is_float_dtyp:921,is_int_dtyp:922,is_vari:[169,309,441,576,736,1030],isfinit:[96,227,372,499,630,821],isinf:[289,559,706,980],isnan:[97,228,373,500,631,822],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,801,1217,1218,1221],ivymodul:[199,791],jax:74,keep:43,lamb:1210,lamb_upd:1031,lar:1211,lars_upd:1032,layer:[201,342,469,604,793,1156,1192],layer_norm:1174,layernorm:1207,leaky_relu:[784,1150],less:[98,229,374,501,632,823],less_equ:[99,375,502,633,824],linalg:[28,1047],linear:[111,174,237,316,387,448,514,583,645,744,836,1165,1202],linear_resampl:[156,290,428,560,707,981],linspac:[157,291,429,561,708,982],list:43,log10:[100,376,503,634,825],log1p:[101,377,504,635,826],log2:[102,378,505,636,827],log:[763,1067],logic:[30,178,321,452,587,751,1054],logical_and:[322,752,1055],logical_not:[103,230,379,506,637,828],logical_or:[104,323,380,507,638,753,829,1056],logspac:[158,292,430,562,709,983],loss:1169,lstm:1201,lstm_updat:1166,maml_step:1073,manipul:[116,242,392,519,650,841],map:1123,map_nest_at_index:1124,map_nest_at_indic:1125,match_kwarg:984,math:[32,179,324,453,588,754,1057],matmul:[293,563,710,985],matrix_norm:[175,317,449,584,747,1050],maximum:[711,986],mech:54,memori:55,meshgrid:[294,712,987],meta:[34,1071],method:[110,236,386,513,644,835],min:[124,400,527,658,849],minimum:[713,988],model:56,modul:[1204,1205,1217],multi:1075,multi_head_attent:1167,multi_index_nest:1126,multidevcontain:42,multidevit:869,multidevitem:868,multidevnest:870,multiheadattent:1203,multinodeit:1081,multinodeitem:1080,multinodenest:1082,multinomi:[181,326,456,590,767,1132],multiprocess:[714,989],mxnet:209,nativ:1217,neg:[105,231,381,508,639,830],nest:1119,nested_indices_wher:1127,nested_map:1128,network:1217,next:1175,node:[1075,1097],node_dist:1098,node_dist_arrai:1099,node_dist_it:1100,node_str:1101,node_to_str:1102,node_util:1103,nodedistit:1084,nodedistitem:1083,nodedistnest:1085,nodemapp:1087,nodemappermultiproc:1088,norm:[1173,1206],num_arrays_in_memori:990,num_arrays_on_dev:892,num_cpu_cor:893,num_gpu:[134,894,1104],numpi:350,nutshel:1175,one_hot:[159,431,564,715,991],ones:[79,214,355,482,613,806,992],ones_lik:[80,215,356,483,614,807],oper:[1,3,7,9,11,13],optim:[1208,1212],optimizer_upd:1033,overview:1175,percent_used_mem_on_dev:895,percent_used_mem_on_nod:1105,pinv:[318,748,1051],portabl:1221,print_all_arrays_in_memori:993,print_all_arrays_on_dev:896,profil:[130,255,406,533,664,871,1089],pull:43,queue_timeout:994,randint:[182,327,591,768,1133],random:[36,180,325,455,589,766,1131],random_crop:1044,random_norm:[183,328,592,769,1134],random_uniform:[184,329,593,770,1135],reduce_max:[189,332,459,596,775,1140],reduce_mean:[190,333,460,597,776,1141],reduce_min:[191,334,461,598,777,1142],reduce_prod:[192,335,462,599,778,1143],reduce_std:[336,1144],reduce_sum:[193,337,463,600,779,1145],reduce_var:[194,338,464,601,780,1146],reduct:[38,187,330,457,594,773,1138],reflect:13,relu:[785,1151],repeat:[295,716,995],reptile_step:1074,request:43,reshap:[717,996],robot:57,round:[106,232,382,509,640,831],run:1218,scaled_dot_product_attent:1168,scatter_flat:[160,296,432,565,718,997],scatter_nd:[161,297,433,566,719,998],search:[118,244,394,521,652,843],seed:[185,771,1136],sequenti:[1214,1215],set:[120,246,396,523,654,845],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:897,set_default_dtyp:923,set_default_float_dtyp:924,set_default_int_dtyp:925,set_default_nod:1106,set_exception_debug_mod:48,set_framework:65,set_min_bas:999,set_min_denomin:1000,set_nest_at_index:1129,set_nest_at_indic:1130,set_queue_timeout:1001,set_split_factor:[898,1107],set_tmp_dir:1002,set_with_grad:1034,sgd:1213,shape:[720,1003],shape_to_tupl:1004,shuffl:[186,772,1137],sigmoid:[786,1152],signatur:[110,236,386,513,644,835],sin:[107,233,383,510,641,832],sinh:[764,1068],siren:1189,slodget:838,slogdet:[113,239,389,516,647],softmax:[197,468,787,1153],softplu:[788,1154],sort:[121,247,397,524,655,846],sparse_cross_entropi:1172,split:[162,298,434,567,721,1005],split_factor:[899,1108],split_func_cal:[900,1109],sqrt:[108,234,384,511,642,833],squeez:[163,299,435,568,722,1006],stable_divid:1007,stable_pow:1008,stack:[300,723,1009],stack_imag:[173,315,447,582,743,1045],standard:43,statist:[123,249,399,526,657,848],stop_gradi:[310,442,577,737,1035],str_to_nod:1110,submodul:43,supports_inplac:1010,svd:[114,240,390,517,648,839],swapax:[569,724,1011],tan:[765,1069],tanh:[109,235,385,512,643,789,834,1070,1155],tensorflow:477,tile:[301,570,725,1012],tmp_dir:1013,to_dev:[135,259,537,669,901],to_ivi:18,to_ivy_modul:[200,792,1182],to_list:[726,1014],to_n:19,to_nod:1111,to_numpi:[727,1015],to_scalar:[728,1016],todo:43,torch:608,total_mem_on_dev:902,total_mem_on_nod:1112,tpu_is_avail:[538,670,903,1113],train:1217,trainabl:1217,transpos:[164,302,436,729,1017],tree:1175,tril:[81,216,357,484,615,808],try_else_non:1018,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,218,222,359,363,486,490,617,621,810,813],uint8_img_to_float_img:1046,unifi:1114,unify_arrai:1115,unify_it:1116,unify_nest:1117,unset_debug_mod:49,unset_default_devic:904,unset_default_dtyp:926,unset_default_float_dtyp:927,unset_default_int_dtyp:928,unset_framework:71,unset_with_grad:1036,unstack:[165,303,437,571,730,1019],updat:43,used_mem_on_dev:905,used_mem_on_nod:1118,util:[125,250,401,528,659,850],valid_dtyp:929,value_is_nan:1020,variabl:[311,443,578,738,1037],variable_data:[739,1038],vector_norm:[115,241,391,518,649,840],vector_to_skew_symmetric_matrix:[177,320,451,586,750,1053],verbos:1219,vision:58,where:[304,731,1021,1175],why:1221,with_grad:1039,wrapper:72,write:1218,your:43,zero:[82,217,358,485,616,809,1191],zero_pad:[305,572,732,1022],zeros_lik:[166,306,438,573,733,1023]}})